# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2025-04-04 07:24+0000\n"
"Last-Translator: MuryanBKS <muryanbks+github@gmail.com>\n"
"Language-Team: Chinese (Traditional Han script) <https://hosted.weblate.org/"
"projects/learn-gdscript-from-zero/lesson-17-while-loops/zh_Hant/>\n"
"Language: zh_Hant\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.11-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-17-while-loops/lesson.tres:14
msgid ""
"You've seen that you can use functions to [i]reuse[/i] code. In this lesson, "
"you'll learn about [b]loops[/b]. Loops help you [i]repeat[/i] code.\n"
"\n"
"To illustrate how loops work, let's take a game board split into a grid.\n"
"\n"
"Our robot can move to neighboring cells by changing a [code]Vector2[/code] "
"variable named [code]cell[/code]. It represents the current cell the robot "
"is in.\n"
"\n"
"When we increase [code]cell.x[/code], the robot moves to the right.\n"
"\n"
"Note that we delay the robot's movement in the app to help you visualize how "
"it moves. The following code would normally move the robot instantly."
msgstr ""
"你已經學會如何使用函式來[b]重複利用[/b]程式碼。在本課中，你將學習[b]迴圈[/b]"
"。迴圈可以幫助你[b]重複執行[/b]程式碼。\n"
"\n"
"為了說明迴圈的運作方式，讓我們來看一個被劃分網格的遊戲棋盤。\n"
"\n"
"我們的機器人可以透過改變名為 [code]cell[/code] 的 [code]Vector2[/code] "
"變數來移動到相鄰的格子。這個變數代表機器人目前所在的格子。\n"
"\n"
"當我們增加 [code]cell.x[/code] 的值時，機器人會向右移動。\n"
"\n"
"請注意，在應用程式中，我們會延遲機器人的移動，以幫助你更清楚地觀察它的動作。"
"然而，以下程式碼在正常情況下會讓機器人立即移動。"

#: course/lesson-17-while-loops/lesson.tres:42
msgid "We can move diagonally by adding a [code]Vector2[/code] directly."
msgstr "我們可以透過加上一個 [code]Vector2[/code] 來實現對角線移動。"

#: course/lesson-17-while-loops/lesson.tres:62
msgid ""
"The above code works for a pre-defined board with a size of [code]Vector2(3, "
"3)[/code], but the [code]move_to_end()[/code] function wouldn't work if the "
"size of the board was different. \n"
"\n"
"The robot would either stop before the end or go too far.\n"
"\n"
"To implement a general solution for all board sizes, we can repeat the "
"robot's movement until it gets to the end.\n"
"\n"
"For code that repeats, we can use [i]loops[/i]."
msgstr ""
"上述程式碼適用於大小為 [code]Vector2(3, 3)[/code] "
"的預定義棋盤，但如果棋盤大小不同，則 [code]move_to_end()[/code] "
"函式將無法正常運作。\n"
"\n"
"機器人可能會在到達終點前停下，或是移動得太遠。\n"
"\n"
"為了實現適用於所有棋盤大小的一般解決方案，我們可以重複機器人的移動，直到它到"
"達終點。\n"
"\n"
"對於需要重複的程式碼，我們可以使用[b]迴圈[/b]。"

#: course/lesson-17-while-loops/lesson.tres:76
msgid "Using while loops to repeat code"
msgstr "使用 while 迴圈重複執行程式碼"

#: course/lesson-17-while-loops/lesson.tres:78
msgid ""
"You can use a [code]while[/code] loop to make the computer repeat a block of "
"code until you meet a specific condition or decide to break from the loop.\n"
"\n"
"Here's how we use a [code]while[/code] loop."
msgstr ""
"你可以使用 [code]while[/code] "
"迴圈讓電腦重複執行一段程式碼，直到符合特定條件或決定中斷迴圈為止。\n"
"\n"
"以下是我們如何使用 [code]while[/code] 迴圈的範例。"

#: course/lesson-17-while-loops/lesson.tres:100
msgid ""
"We use the variable [code]number[/code] to keep track of how many loops the "
"[code]while[/code] loop completes.\n"
"\n"
"Each time we go through the [code]while[/code] loop, we add [code]1[/code] "
"to [code]number[/code].\n"
"\n"
"The [code]while[/code] loop keeps running for as long as the condition is "
"true. In this case, it keeps running while [code]number[/code] is less than "
"[code]4[/code].\n"
"\n"
"You can see that the following code is executed four times in the console."
msgstr ""
"我們使用變數 [code]number[/code] 來追蹤 [code]while[/code] 迴圈執行的次數。\n"
"\n"
"每次經過 [code]while[/code] 迴圈時，我們將 [code]1[/code] 加到 [code]number[/"
"code] 上。\n"
"\n"
"只要條件為真，[code]while[/code] 迴圈就會繼續執行。在這個例子中，當 [code]"
"number[/code] 小於 [code]4[/code] 時，迴圈會持續執行。\n"
"\n"
"你可以看到以下程式碼在控制台中執行了四次。"

#: course/lesson-17-while-loops/lesson.tres:126
msgid ""
"Let's apply this to our [code]move_to_end()[/code] function.\n"
"\n"
"This time, we compare the number of loops to the board's width. We go "
"through the loop until we reach the width of the board.\n"
"\n"
"Note that we move the robot until its position is one less than the board's "
"width because we are counting tiles from [code]0[/code].\n"
"\n"
"A board of [code]3[/code] by [code]3[/code] cells would have cell "
"coordinates going from [code]0[/code] to [code]2[/code] on both the X and Y "
"axes."
msgstr ""
"讓我們將這個應用到 [code]move_to_end()[/code] 函式中。\n"
"\n"
"這次，我們將迴圈的次數與棋盤的寬度進行比較，並執行迴圈直到棋盤的寬度。\n"
"\n"
"請注意，我們會將機器人移動直到它的位置比棋盤寬度少一個單位，因為我們是從 "
"[code]0[/code] 開始計算格子。\n"
"\n"
"一個大小為 [code]3[/code] x [code]3[/code] 的棋盤，X 軸和 Y 軸的格子座標會從 "
"[code]0[/code] 到 [code]2[/code]。"

#: course/lesson-17-while-loops/lesson.tres:160
msgid "While loops can cause issues"
msgstr "While 迴圈可能會導致問題"

#: course/lesson-17-while-loops/lesson.tres:162
msgid ""
"If you're not careful, your [code]while[/code] loop can run infinitely. In "
"that case, the application will freeze.\n"
"\n"
"Take a look at this code example."
msgstr ""
"如果不小心，你的 [code]while[/code] "
"迴圈可能會無限執行下去。在這種情況下，應用程式將會當掉。\n"
"\n"
"看看這個程式碼範例。"

#: course/lesson-17-while-loops/lesson.tres:182
msgid "What would happen if the computer tried to run the code above?"
msgstr "如果電腦試圖執行上面的程式碼會發生什麼？"

#: course/lesson-17-while-loops/lesson.tres:185
msgid ""
"Because we don't increment [code]number[/code] within the [code]while[/code] "
"loop, it always stays at [code]0[/code].\n"
"\n"
"As a result, the number is always lower than [code]10[/code], so we never "
"break out of the loop.\n"
"\n"
"Since there's no way to exit the [code]while[/code] loop, the computer will "
"attempt to draw squares infinitely, which will freeze the program.\n"
"\n"
"When programs stop responding on your computer, it's often due to an "
"infinite loop!"
msgstr ""
"因為我們在 [code]while[/code] 迴圈內沒有遞增 [code]number[/code]，"
"它會一直保持在 [code]0[/code]。\n"
"\n"
"結果 [code]number[/code] 永遠小於 [code]10[/code]，所以我們永遠無法跳出迴圈。"
"\n"
"\n"
"由於沒有退出 [code]while[/code] "
"迴圈的方法，電腦會無限次嘗試繪製正方形，程式會卡死。\n"
"\n"
"當程式在你的電腦上停止回應時，通常是因為出現了無限迴圈！"

#: course/lesson-17-while-loops/lesson.tres:192
#: course/lesson-17-while-loops/lesson.tres:193
msgid "It would draw squares infinitely until the program is terminated"
msgstr "它會無限繪製正方形，直到程式被終止"

#: course/lesson-17-while-loops/lesson.tres:192
msgid "It would draw 10 squares"
msgstr "它會畫 10 個正方形"

#: course/lesson-17-while-loops/lesson.tres:192
msgid "It would draw 20 squares"
msgstr "它會畫 20 個正方形"

#: course/lesson-17-while-loops/lesson.tres:200
msgid "When to use while loops"
msgstr "何時使用 while 迴圈"

#: course/lesson-17-while-loops/lesson.tres:202
msgid ""
"At first, you will not need [code]while[/code] loops often. Even the code we "
"show here has more efficient alternatives.\n"
"\n"
"Also, there's a safer kind of loop, [code]for[/code] loops, which we'll look "
"at in the next lesson.\n"
"\n"
"Yet, [code]while[/code] loops have important intermediate to advanced-level "
"uses, so you at least need to know they exist and how to use them.\n"
"\n"
"We use [code]while[/code] loops every time we need to loop an unknown number "
"of times.\n"
"\n"
"For example, games run in a loop that typically generates sixty images per "
"second until the user closes the game. This is possible thanks to "
"[code]while[/code] loops.\n"
"\n"
"There are other good uses for [code]while[/code] loops:\n"
"\n"
"- Reading and processing a file, like a text document, line by line.\n"
"- Processing a constant stream of data, like someone recording audio with a "
"microphone.\n"
"- Reading code and converting it into instructions the computer "
"understands.\n"
"- Various intermediate to advanced-level algorithms, like finding paths "
"around a map for AI."
msgstr ""
"一開始，你可能不會經常需要使用 [code]while[/code] "
"迴圈。即使是我們在這裡展示的程式碼，也有更有效率的替代方案。\n"
"\n"
"此外，還有一種更安全的迴圈就是 [code]for[/code] 迴圈，我們會在下堂課中介紹。"
"\n"
"\n"
"然而 [code]while[/code] "
"迴圈在中級到高級的應用中扮演著重要角色，因此你至少需要知道它的存在以及如何使"
"用它。\n"
"\n"
"我們會在需要執行未知次數的迴圈時使用 [code]while[/code] 迴圈。\n"
"\n"
"例如，遊戲通常會在一個迴圈中運行，每秒生成六十幀畫面，直到使用者關閉遊戲。"
"這正是利用 [code]while[/code] 迴圈來實現的。\n"
"\n"
"[code]while[/code] 迴圈還有其他良好的應用場景：\n"
"\n"
"- 逐行讀取和處理檔案，例如讀取文字文件。\n"
"- 處理不間斷的資料流，例如使用麥克風錄音。\n"
"- 讀取程式碼並將其轉換為電腦可理解的指令。\n"
"- 各種中級到高級的演算法，例如 AI 在地圖上尋找路徑。"

#: course/lesson-17-while-loops/lesson.tres:227
msgid ""
"Let's practice some [code]while[/code] loops, as they're useful to know. "
"It's also an excellent opportunity to practice 2D vectors.\n"
"\n"
"Then, we'll move on to the safer [code]for[/code] loops in the following "
"lesson."
msgstr ""
"讓我們來練習一些 [code]while[/code] 迴圈，因為這是一個值得學習的技能。"
"同時這也是練習 2D 向量的絕佳機會。\n"
"\n"
"接著在下堂課我們會學習更安全的 [code]for[/code] 迴圈。"

#: course/lesson-17-while-loops/lesson.tres:237
msgid "Moving to the end of a board"
msgstr "移動到棋盤的終點"

#: course/lesson-17-while-loops/lesson.tres:238
msgid ""
"Our robot has decided to stand at the top of the board.\n"
"\n"
"Complete the [code]move_to_bottom()[/code] function so the robot moves to "
"the bottom of the board.\n"
"\n"
"The board size is determined by the [code]Vector2[/code] [code]board_size[/"
"code].\n"
"\n"
"The robot's current cell is [code]Vector2(2, 0)[/code]. \n"
"\n"
"Make sure to use a [code]while[/code] loop so the function works for any "
"board size."
msgstr ""
"我們的機器人決定站在棋盤最上方。\n"
"\n"
"請完成 [code]move_to_bottom()[/code] 函式，使機器人移動到棋盤的最下方。\n"
"\n"
"棋盤的大小由 [code]Vector2[/code] [code]board_size[/code] 決定。\n"
"\n"
"機器人目前位於 [code]Vector2(2, 0)[/code]。\n"
"\n"
"請確保使用 [code]while[/code] 迴圈，使該函式適用於任何棋盤大小。"

#: course/lesson-17-while-loops/lesson.tres:256
msgid ""
"Use a while loop to have our robot move from the top of the board to the "
"bottom."
msgstr "使用 while 迴圈讓我們的機器人從棋盤頂部移動到底部。"

#: course/lesson-17-while-loops/lesson.tres:260
msgid "Introduction to While Loops"
msgstr "While 迴圈入門"
