# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-10-06 07:34+0200\n"
"PO-Revision-Date: 2025-04-03 15:39+0000\n"
"Last-Translator: MuryanBKS <muryanbks+github@gmail.com>\n"
"Language-Team: Chinese (Traditional Han script) <https://hosted.weblate.org/"
"projects/learn-gdscript-from-zero/lesson-4-drawing-a-rectangle/zh_Hant/>\n"
"Language: zh_Hant\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.11-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:14
msgid ""
"We'll use code created by others like we did in the previous lesson. This "
"time, we'll solve a more complicated problem: drawing shapes."
msgstr "我們要像在前面的課程一樣，使用其他人創建的程式碼。這次我們將解決一個更複雜的"
"問題：繪製圖形。"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:22
msgid "Meet the turtle"
msgstr "海龜登場"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:24
msgid ""
"We present you: the turtle! We created the turtle to teach you how to call "
"functions."
msgstr "我們向你介紹：海龜！我們創建這隻海龜來教你如何呼叫函式。"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:44
msgid ""
"The turtle is a little machine that moves forward, turns, and draws lines "
"along its path.\n"
"\n"
"To make it draw, you give it a list of instructions: on each code line, you "
"call one specific function.\n"
"\n"
"We prepared several functions for you:\n"
"\n"
"- [code]move_forward(pixels)[/code] makes the turtle move forward over a "
"given distance in [i]pixels[/i].  \n"
"- [code]turn_right(degrees)[/code] makes the turtle turn clockwise by a "
"precise amount of [i]degrees[/i].\n"
"- [code]turn_left(degrees)[/code] works the same as [code]turn_right(degrees)"
"[/code], except the turtle turns counter-clockwise.\n"
"\n"
"You'll use these functions the same way you used [code]rotate()[/code] "
"before.\n"
"\n"
"The turtle draws a white line as it moves. We'll use this line to draw "
"shapes.\n"
"\n"
"For example, to move the turtle 200 pixels, you would write "
"[code]move_forward(200)[/code]."
msgstr ""
"海龜是一個小機器，會向前移動、轉彎並沿著路徑畫線。\n"
"\n"
"要讓它畫畫，你需要給它一系列的指令：在每一行程式碼中，你呼叫一個特定的函式。"
"\n"
"\n"
"我們為你準備了幾個函式：\n"
"\n"
"- [code]move_forward(pixels)[/code] 讓海龜向前移動指定距離，單位為[b]像素[/b]"
"。\n"
"- [code]turn_right(degrees)[/code] 讓海龜順時針轉動指定角度，單位為[b]度數"
"[/b]。\n"
"- [code]turn_left(degrees)[/code] 與 [code]turn_right(degrees)[/code] "
"相同，但海龜是逆時針轉動。\n"
"\n"
"你將像之前使用 [code]rotate()[/code] 一樣使用這些函式。\n"
"\n"
"當海龜移動時，它會畫出一條白色的線。我們將用這條線來畫出形狀。\n"
"\n"
"例如，要讓海龜移動 200 像素，你可以寫 [code]move_forward(200)[/code]。"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:76
msgid "Turning left and right"
msgstr "向左與向右轉"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:78
msgid ""
"The functions [code]turn_left()[/code] and [code]turn_right()[/code] work "
"the same.\n"
"\n"
"To turn 45 degrees to the right, you would write [code]turn_right(45)[/"
"code].\n"
"\n"
"If we call [code]turn_right(45)[/code], the turtle turns 45 degrees to the "
"right before moving on to the next instruction."
msgstr ""
"[code]turn_left()[/code] 和 [code]turn_right()[/code] 這兩個函式的功能相同。"
"\n"
"\n"
"若要讓海龜向右轉 45 度，你可以寫 [code]turn_right(45)[/code]。\n"
"\n"
"當我們呼叫 [code]turn_right(45)[/code] 時，海龜會先向右轉 45 "
"度，然後再繼續執行接下來的指令。"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:102
msgid ""
"Using these instructions, we can make any two-dimensional shape we like!\n"
"\n"
"Try to understand the example below. \n"
"\n"
"In the next practice, you'll use the functions we saw above to first draw a "
"corner, then a rectangle like this one."
msgstr ""
"使用這些指令，我們可以畫出任何我們想要的二維形狀！\n"
"\n"
"試著理解下面的範例。\n"
"\n"
"在下一個練習中，你將使用我們剛剛學到的函式，首先畫出一個直角，接著畫出像這樣"
"的矩形。"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:124
msgid "In the function call below, which part is the argument?"
msgstr "在下面的函式呼叫中，哪一部分是引數？"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:125
msgid "[code]move_forward(30)[/code]"
msgstr "[code]move_forward(30)[/code]"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:127
msgid ""
"A function's arguments are all the values inside the parentheses. In this "
"case, there's only one, but there can be multiple separated by commas.\n"
"\n"
"In this case, [code]move_forward[/code] is the function's name and [code]30[/"
"code] is the argument.\n"
"\n"
"This function call will make the turtle move forward by [code]30[/code] "
"pixels."
msgstr ""
"一個函式的引數是括號內的所有值。在這個例子中，只有一個，但也可以有多個，用逗"
"號分隔。\n"
"\n"
"在這個例子中，[code]move_forward[/code] 是函式的名稱，而 [code]30[/code] "
"是引數。\n"
"\n"
"這個函式呼叫會讓烏龜向前移動 [code]30[/code] 像素。"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:132
msgid "move_forward"
msgstr "move_forward"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:132
#: course/lesson-4-drawing-a-rectangle/lesson.tres:133
msgid "30"
msgstr "30"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:140
msgid "The turtle uses code made specifically for this app!"
msgstr "這隻烏龜使用的是專為這個應用程式設計的程式碼！"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:142
msgid ""
"The turtle is a little learning tool custom-made for this course, based on a "
"proven code learning methodology. It's designed to teach you how to use and "
"create functions.\n"
"\n"
"So please don't be surprised if writing code like [code]turn_left()[/code] "
"inside of the Godot editor doesn't work! And don't worry, once you've "
"learned the foundations, you'll see they make it faster and easier to learn "
"Godot functions."
msgstr ""
"這隻烏龜是專為這門課程所設計的學習工具，基於已證實的程式學習方法。它的目的是"
"教你如何使用和創建函式。\n"
"\n"
"所以請不要感到驚訝，如果在 Godot 編輯器裡寫 [code]turn_left()[/code] "
"這樣的程式碼無法運作！別擔心，一旦你掌握了基礎，這些會讓你學習 Godot "
"函式變得更快速且更簡單。"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:154
msgid ""
"Let's move on to practice! You'll get to play with the turtle functions to "
"draw shapes."
msgstr "讓我們開始練習吧！你將可以使用烏龜的函式來畫出形狀。"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:162
msgid "Drawing a Corner"
msgstr "畫一個直角"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:163
msgid ""
"In this practice, we'll tell the turtle to draw a corner.\n"
"\n"
"The corner is made up of two lines that are [code]200[/code] pixels long. "
"The lines are connected at each end by [code]90[/code] degrees, or right-"
"angle.\n"
"\n"
"The [code]move_forward()[/code] and [code]turn_right()[/code] functions to "
"the right draw a corner, but they're missing some arguments.\n"
"\n"
"Add the missing arguments so the turtle moves forward [code]200[/code] "
"pixels, turns right [code]90[/code] degrees, then moves forward again "
"[code]200[/code] pixels.\n"
"\n"
"We added the first argument for you so the turtle moves forward [code]200[/"
"code] pixels.\n"
"\n"
"In the following practices, we'll draw multiple corners to create "
"rectangles.\n"
"\n"
msgstr ""
"這個練習中我們會指示小海龜畫出一個直角。\n"
"\n"
"這個直角由兩條長度為 [code]200[/code] 像素的直線組成，兩條直線的連接處成為 "
"[code]90[/code] 度的直角。\n"
"\n"
"[code]move_forward()[/code] 和 [code]turn_right()[/code] "
"函式會讓小海龜畫出這個直角，但它們缺少些引數。\n"
"\n"
"請添加缺少的引數，讓小海龜先前進 [code]200[/code] 像素，然後右轉 [code]90[/"
"code] 度，再前進一次 [code]200[/code] 像素。\n"
"\n"
"我們已經幫你加上了第一個引數，讓小海龜先前進 [code]200[/code] 像素。\n"
"\n"
"在接下來的練習中，我們將會畫出多個直角，來創建長方形。\n"
"\n"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:187
msgid ""
"Use the turtle to draw a square's corner. You'll then build upon it to draw "
"a rectangle."
msgstr "使用小海龜畫出正方形的角。接著，我們會以此為基礎畫出長方形。"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:192
#: course/lesson-4-drawing-a-rectangle/lesson.tres:240
msgid "Drawing a Rectangle"
msgstr "繪製一個矩形"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:193
msgid ""
"Add the correct arguments to the functions [code]move_forward()[/code] and "
"[code]turn_right()[/code] to draw a rectangle with a width of [code]200[/"
"code] pixels, and a height of [code]120[/code] pixels.\n"
"\n"
"We wrote the first argument for you.\n"
"\n"
"In the next practice, you'll use the same functions to draw a bigger "
"rectangle."
msgstr ""
"請將正確的引數加到 [code]move_forward()[/code] 和 [code]turn_right()[/code] "
"函式中，以畫出一個寬度為 [code]200[/code] 像素，高度為 [code]120[/code] "
"像素的矩形。\n"
"\n"
"我們已經為你寫好了第一個引數。\n"
"\n"
"在下一個練習中，你將使用相同的函式來畫出一個更大的矩形。"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:213
msgid ""
"Based on your rectangle corner, you now need to draw a complete rectangle."
msgstr "根據你畫出的矩形角，接下來你需要畫出完整的矩形。"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:218
msgid "Drawing a Bigger Rectangle"
msgstr "畫一個更大的矩形"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:219
msgid ""
"Write out calls to the functions [code]move_forward()[/code] and "
"[code]turn_right()[/code] to draw a rectangle with a width of 220 pixels, "
"and a height of 260 pixels.\n"
"\n"
"We wrote the first two lines for you.\n"
"\n"
"Be sure to write each instruction on a separate line.\n"
"\n"
"Every line should start with one [code]Tab[/code] character so the computer "
"understands it's part of the [code]draw_rectangle()[/code] function."
msgstr ""
"寫出呼叫 [code]move_forward()[/code] 和 [code]turn_right()[/code] "
"函式的程式碼來畫一個寬度為 220 像素，高度為 260 像素的矩形。\n"
"\n"
"我們已經為你寫好了前兩行。\n"
"\n"
"請確保每條指令都寫在單獨的一行。\n"
"\n"
"每一行都應該以一個 [code]Tab[/code] 字元開頭，這樣電腦才能理解它是 [code]"
"draw_rectangle()[/code] 函式的一部分。"

#: course/lesson-4-drawing-a-rectangle/lesson.tres:236
msgid ""
"At this point, you're ready to code entirely on your own. Call functions by "
"yourself to draw a complete rectangle."
msgstr "到這個時候，你已經準備好完全靠自己動手寫程式了。請自己呼叫函式來畫出完整的矩"
"形。"
