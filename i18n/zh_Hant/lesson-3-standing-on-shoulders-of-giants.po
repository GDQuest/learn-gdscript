# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-10-06 07:34+0200\n"
"PO-Revision-Date: 2025-04-03 15:39+0000\n"
"Last-Translator: MuryanBKS <muryanbks+github@gmail.com>\n"
"Language-Team: Chinese (Traditional Han script) <https://hosted.weblate.org/"
"projects/learn-gdscript-from-zero/lesson-3-standing-on-shoulders-of-giants/"
"zh_Hant/>\n"
"Language: zh_Hant\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.11-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:14
msgid ""
"As programmers, we rely on a lot of code created by others before us.\n"
"\n"
"Every programming language comes with a wealth of features created by other "
"programmers to save you time.\n"
"\n"
"We call a bundle of code created by fellow developers a [i]library[/i].\n"
"\n"
"It's a bunch of code sitting there, waiting for you to use it.\n"
"\n"
"Game engines like Godot bundle many libraries together. They provide a "
"massive toolset to save you time when making games."
msgstr ""
"身為程式設計師，我們依靠許多前人創造的程式碼。\n"
"\n"
"所有程式語言都包含了許多其他程式設計師創造的功能來節省你的時間。\n"
"\n"
"我們稱呼這些開發者創作的程式碼集合為[b]函式庫[/b]。\n"
"\n"
"它是一大堆現成的程式碼，等著你去用它。\n"
"\n"
"像 Godot "
"這樣的遊戲引擎將許多函式庫打包在一起。它們提供了龐大的工具集，幫助你在製作遊"
"戲時節省時間。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:30
msgid "You'll always use a lot of existing code"
msgstr "你永遠會使用大量已存在的程式碼"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:32
msgid ""
"When coding, you always use a lot of code from developers who came before "
"you.\n"
"\n"
"In a moment, you'll write your first code. You'll use [i]functions[/i] "
"created by the Godot developers.\n"
"\n"
"A function is a list of instructions with an exact name. We can tell the "
"computer to execute all the instructions in sequence with that name."
msgstr ""
"撰寫程式時，你總是會用到許多先前程式設計師的程式碼。\n"
"\n"
"不用多久，你會寫下你的第一行程式碼。你會使用 Godot 開發者們創造的[b]函式[/b]"
"。\n"
"\n"
"函式是個有著精確名字的指令列表。我們能使用那個名字來告訴電腦照順序執行所有的"
"指令。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:44
msgid "Calling functions"
msgstr "呼叫函式"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:46
msgid ""
"When you tell the computer to execute a function, we say you [i]call[/i] the "
"function.\n"
"\n"
"To call a function, you write its [i]exact[/i] name followed by an open and "
"closed parenthesis. To call the function named \"show\", you would write "
"[code]show()[/code]."
msgstr ""
"當你叫電腦執行一個函式，我們會說你呼叫了函式。\n"
"\n"
"要呼叫函式，你要一字不差地寫下名字並加上左右小括號。要呼叫名為「show」的函式"
"，你會寫下 [code]show()[/code]。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:58
msgid ""
"In Godot, calling [code]show()[/code] makes something visible, like a "
"character or item. The complementary [code]hide()[/code] function hides the "
"entity.\n"
"\n"
"Once an entity is visible, calling [code]show()[/code] again doesn't have "
"any effect.\n"
"\n"
"Similarly, once you hide something, calling [code]hide()[/code] again "
"doesn't change anything.\n"
"\n"
"[i]Click the Run button on any example below to execute the code listing.[/i]"
msgstr ""
"在 Godot 裡面呼叫 [code]show()[/code] 會讓東西變得可見，例如角色或物品。"
"相對的 [code]hide()[/code] 函式則會隱藏實體。\n"
"\n"
"一旦實體變得可見，再度呼叫 [code]show()[/code] 不會有任何效果。\n"
"\n"
"同樣地，一旦你隱藏了東西，再次呼叫 [code]hide()[/code] 也不會有所改變。\n"
"\n"
"[b]點擊下面任意範例中的執行按鈕來執行程式碼。[/b]"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:84
msgid ""
"In the code listing above, we write the function call [code]hide()[/code] in "
"a new function named [code]run()[/code] to execute the code. Creating a new "
"function is necessary to execute instructions in GDScript."
msgstr ""
"在上面的程式碼中，我們將函式 [code]hide()[/code] 寫入了新的函式 [code]run()"
"[/code] 來執行。在 GDScript 裡必需創造新的函式才能執行指令。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:92
msgid "Can you tell me more about that \"run()\" function?"
msgstr "可以告訴我更多「run()」函式的事嗎？"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:94
msgid ""
"In GDScript, unlike in some other languages, we must write our code inside "
"of custom functions.\n"
"\n"
"You'll learn what functions are and how they work in great detail in the "
"course, but here's a quick look at them if you're curious.\n"
"\n"
"A function is a bundle of code you can execute anytime. It's a named list of "
"instructions.\n"
"\n"
"To define a function, you need to write the [code]func[/code] keyword, the "
"function's name, parentheses, and a colon: [code]func run():[/code] defines "
"a function named [code]run()[/code].\n"
"\n"
"You then go to the next line to write the function's body. That's the "
"instructions of the function.\n"
"\n"
"Notice how each instruction starts with a leading [code]Tab[/code] "
"character. The computer uses that to know which lines are part of the "
"function.\n"
"\n"
"Throughout the course, you'll see many functions called [code]run()[/code].\n"
"\n"
"Those are functions we created to give you interactive examples."
msgstr ""
"在 GDScript 中，不像某些其他語言，我們一定得將程式碼寫在自定義函式中。\n"
"\n"
"你會在課程中學到函式是什麼、它們運作上的各種細節，但如果你好奇的話，在這邊先"
"做簡介。\n"
"\n"
"函式是你能隨時執行的程式碼集合包。是個有名字的指令清單。\n"
"\n"
"要定義一個函式，你必須寫下關鍵字 [code]func[/"
"code]（函式function的縮寫），函式的名稱、小括號、以及冒號。[code]func run():"
"[/code] 定義了一個名為 [code]run()[/code] 的函式。\n"
"\n"
"接著你要寫到下一行，並編寫函式的主體。那就是函式的指令。\n"
"\n"
"請注意每個指令都由一個 [code]Tab[/code] "
"字元開頭。電腦會使用這個來知道哪些行屬於這個函式。\n"
"\n"
"在整個課程中，你會看到許多名為 [code]run()[/code] 的函式。\n"
"\n"
"那些是我們創造來給你互動範例的函式。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:116
msgid "Function arguments"
msgstr "函式引數(Function arguments)"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:118
msgid ""
"We use parentheses to call functions because you can give the function "
"[i]arguments[/i] inside the parentheses when calling it.\n"
"\n"
"Here's a [i]sprite[/i] standing straight. If we call the [code]rotate(0.3)[/"
"code] function, the character [i]sprite[/i] turns by 0.3 radians."
msgstr ""
"我們使用括號來呼叫函式，因為在呼叫函式時，你可以在括號內傳遞[b]引數[/b]。\n"
"\n"
"這裡是一個直立的[b]精靈(Sprite)[/b]。如果我們呼叫 [code]rotate(0.3)[/code] "
"函式，角色的[b]精靈[/b]就會旋轉 0.3 弧度。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:140
msgid ""
"The [code]0.3[/code] part between the parentheses is the function's "
"[i]argument[/i].\n"
"\n"
"Arguments are values (numbers, bits of text, and more) that change how the "
"function behaves.\n"
"\n"
"Arguments let you fine-tune the effect of the function call. They can be "
"optional at times, but functions often require arguments in order to work.\n"
"\n"
"For example, calling [code]rotate()[/code] without any argument would result "
"in an error. Without an argument, Godot doesn't know by [i]how much[/i] you "
"intend to rotate the [i]sprite[/i].\n"
"\n"
"Don't worry about memorizing what arguments each function requires or "
"accepts! As a programmer, the documentation will always be close by for you "
"to refer to.\n"
"\n"
"Finally, notice how we use a dot in the number [code]0.3[/code] above: you "
"need to use a dot like this to represent decimal numbers. You can't use "
"commas as they have a different purpose in code."
msgstr ""
"小括號中間的 [code]0.3[/code] 部份便是函式的[b]引數[/b]。\n"
"\n"
"引數是能改變函式行為的值（數字、一些文字等等）。\n"
"\n"
"引數讓你能微調函式呼叫的效果。有時不填也沒關係，但函式通常需要引數才能運作。"
"\n"
"\n"
"例如，不使用引數呼叫 [code]rotate()[/code] 會導致錯誤。沒有引數，Godot "
"不知道你希望[b]精靈Sprite[/b]要旋轉[b]多少[/b]。\n"
"\n"
"別擔心要記住每個函式需要或接受的引數！作為程式設計師，文檔隨時可以查閱，幫助"
"你了解函式的詳細資訊。\n"
"\n"
"最後，請注意我們在上面的 [code]0.3[/code] "
"使用了小數點：你需要用這種點來表示小數。你不能用逗號，它們在程式中有不同的目"
"的。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:158
msgid "What are radians?"
msgstr "弧度是什麼？"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:160
msgid ""
"The value of [code]0.3[/code] is an angle in [i]radians[/i]. In daily life, "
"we're used to measuring angles in degrees. The radian is another scale "
"commonly used in video games and math.\n"
"\n"
"You can convert radians into degrees by multiplying them by 180 and dividing "
"them by PI:\n"
"\n"
"[code]degrees = radians * 180 / PI[/code]\n"
"\n"
"An angle of [code]PI[/code] radians corresponds to [code]180[/code] degrees. "
"And [code]2 * PI[/code] is a full turn: [code]360[/code] degrees.\n"
"\n"
"[b]How do radians work exactly?[/b]\n"
"\n"
"Radians are a way to measure angles based on the radius of a circle.\n"
"\n"
"To get the angle in radians, you take the circle's radius and wrap it around "
"the circle. That angle is [code]1[/code] radian because you are wrapping the "
"radius [code]1[/code] time around the circle.\n"
"\n"
"Because the perimeter of a circle is [code]2 * PI * radius[/code], a full "
"turn (360°) corresponds to [code]2 * PI[/code] radians: you need to wrap the "
"radius of a circle [code]2 * PI[/code] times around the circle to make a "
"full circle."
msgstr ""
"[code]0.3[/code] 的數值是以[b]弧度[/b]"
"來表示的角度。在日常生活中，我們比較習慣用度數來衡量角度，但弧度是另一種常見"
"的單位，尤其在數學和遊戲開發中廣泛使用。\n"
"\n"
"你可以將弧度轉換為度數，公式是將弧度乘以 180，再除以PI：\n"
"\n"
"[code]degrees = radians * 180 / PI[/code]\n"
"\n"
"[code]PI[/code] 弧度對應 [code]180[/code] 度，而 [code]2 * PI[/code] "
"則是一整圈，也就是 [code]360[/code] 度。\n"
"\n"
"[b]那麼，弧度到底是如何運作的？[/b]\n"
"\n"
"弧度是根據圓的半徑來衡量角度的一種方式。\n"
"\n"
"要得到弧度角度，你需要將圓的半徑長度繞在圓上。這樣所形成的角度就稱為 [code]"
"1[/code] 弧度，因為你將半徑繞圓一圈。\n"
"\n"
"由於圓的周長是 [code]2 * PI * 半徑[/code]，因此一整圈（360°）對應 [code]2 * "
"PI[/code] 弧度：你需要將圓的半徑繞圓 [code]2 * PI[/code] 次，才能繞出一整圈。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:182
msgid "What does the code below do?"
msgstr "下面的程式碼會做什麼？"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:183
msgid "[code]show()[/code]"
msgstr "[code]show()[/code]"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:185
msgid ""
"Both answers were right! Technically, the code calls the [code]show()[/code] "
"function. And doing so makes the game entity visible."
msgstr "這兩個答案都是正確的！從技術上來說，這段程式碼會呼叫 [code]show()[/code] "
"函式。這樣做會讓遊戲中的實體變得可見。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:186
#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:187
msgid "It calls the function named \"show\"."
msgstr "它呼叫了名為 \"show\" 的函式。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:186
#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:187
msgid "It makes the entity (like a game character or a sprite) visible."
msgstr "它讓實體（例如遊戲角色或精靈）變得可見。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:196
msgid ""
"Another example: With the [code]move_local_x()[/code] function, you can move "
"the character to its left and right. The function takes one argument: a "
"number of pixels to offset the entity.\n"
"\n"
"The complementary function [code]move_local_y()[/code] makes the character "
"move up and down.\n"
"\n"
"This is one way to move a character in a game, although we'll see more "
"powerful ways to do this later."
msgstr ""
"另一個範例：使用 [code]move_local_x()[/code] "
"函式，你可以讓角色向左右移動。這個函式需要一個引數：偏移實體的像素數量。\n"
"\n"
"對應的函式 [code]move_local_y()[/code] 則是讓角色上下移動。\n"
"\n"
"這是移動遊戲角色的一種方式，雖然我們稍後會看到更強大的方法來實現這個功能。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:218
msgid "Why move_local_y(20) moves the character down"
msgstr "為什麼 move_local_y(20) 會讓角色向下移動"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:220
msgid ""
"With positive values ([code]20[/code]), the code above moves the robot to "
"the right and down.\n"
"\n"
"This is probably different than what you studied at school: in math classes, "
"the horizontal axis points to the right, like here, but the vertical axis "
"points up.\n"
"\n"
"In video games, and generally in 2D computer graphics, the vertical axis "
"points down instead. So whenever you move something on the Y-axis with a "
"positive value, it'll move [i]down[/i]."
msgstr ""
"使用正數值（[code]20[/code]），上述程式碼會將機器人向右和向下移動。\n"
"\n"
"這可能與你在學校學到的有些不同：在數學課中，水平軸是向右的，如同這裡的範例，"
"但垂直軸是向上的。\n"
"\n"
"然而在遊戲中，尤其是在2D電腦圖形中，垂直軸是向下的。因此當你在Y軸上使用正數值"
"移動物體時，它會向[b]下[/b]移動。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:232
msgid "How do you call a function?"
msgstr "你如何呼叫一個函式？"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:233
msgid "What is the syntax you use to call a function in general?"
msgstr "一般來說，呼叫函式的語法是什麼？"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:235
msgid ""
"To call a function, you need to write its exact name followed by an opening "
"and a closing parenthesis.\n"
"\n"
"If the function requires one or more [i]arguments[/i], you add them inside "
"the parentheses. Whether you need to do that or not depends on the function."
msgstr ""
"要呼叫一個函式，你需要寫下它的精確名稱，後面跟著一個左括號和一個右括號。\n"
"\n"
"如果該函式需要一個或多個[b]引數[/b]"
"，則將它們放在括號內。是否需要這樣做取決於函式的要求。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:238
#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:239
msgid "You write its name followed by an opening and a closing parenthesis."
msgstr "你寫下它的名稱，後面跟著一個左括號和一個右括號。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:238
msgid "You write its name followed by a colon."
msgstr "你寫下它的名稱，後面加上一個冒號。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:238
msgid ""
"You write a value, like a number, followed by an opening and a closing "
"parenthesis."
msgstr "你寫下一個數值，例如數字，後面跟著一對括號。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:246
msgid "Make The Character Visible"
msgstr "讓角色可見"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:247
msgid ""
"Our robot character's invisible! Call the [code]show()[/code] function to "
"make it appear.\n"
"\n"
"Please call [code]show()[/code] inside the [code]run()[/code] function, on "
"line [code]2[/code], and keep the [code]Tab[/code] character at the start of "
"the line. The computer needs that to understand your code."
msgstr ""
"我們的機器人角色是隱形的！呼叫 [code]show()[/code] 函式讓它顯示出來。\n"
"\n"
"請在 [code]run()[/code] 函式內部的第 [code]2[/code] 行呼叫 [code]show()"
"[/code]，並保持該行開頭的 [code]Tab[/code] "
"字符。電腦需要這樣才能理解你的程式碼。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:259
msgid "The robot's invisible! Call a function to bring it back."
msgstr "機器人消失了！呼叫一個函式讓它重新出現。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:264
msgid "Make the Robot Upright"
msgstr "讓機器人直立"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:265
msgid ""
"The robot was turned by [code]-0.5[/code] radians. You need to make it "
"upright by calling the [code]rotate()[/code] function.\n"
"\n"
"Please call [code]rotate()[/code] inside the [code]run()[/code] function, on "
"line [code]2[/code], and keep the [code]Tab[/code] character at the start of "
"the line. The computer needs that to understand your code."
msgstr ""
"機器人被旋轉了 [code]-0.5[/code] 弧度。你需要通過呼叫 [code]rotate()[/code] "
"函式將它轉回直立。\n"
"\n"
"請在 [code]run()[/code] 函式內的第 [code]2[/code] 行呼叫 [code]rotate()"
"[/code]，並保持行首的 [code]Tab[/code] 字元。電腦需要這個來理解你的程式碼。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:277
msgid ""
"The robot is turned sideways. Help it straighten up with a function call."
msgstr "機器人現在是橫著的。請幫它使用函式呼叫將它直立起來。"

#: course/lesson-3-standing-on-shoulders-of-giants/lesson.tres:281
msgid "We Stand on the Shoulders of Giants"
msgstr "我們站在巨人的肩膀上"
