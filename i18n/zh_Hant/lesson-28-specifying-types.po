# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2025-04-03 15:39+0000\n"
"Last-Translator: MuryanBKS <muryanbks+github@gmail.com>\n"
"Language-Team: Chinese (Traditional Han script) <https://hosted.weblate.org/"
"projects/learn-gdscript-from-zero/lesson-28-specifying-types/zh_Hant/>\n"
"Language: zh_Hant\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.11-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-28-specifying-types/lesson.tres:13
msgid ""
"By default, GDScript is what we call a dynamically-typed language. That "
"means that you can just write variables, assign them a value with a number, "
"and assign them another value with a different type.\n"
"\n"
"Unlike in some other languages, in GDScript, the following code is valid."
msgstr ""
"預設情況下，GDScript "
"是一種動態型別語言。這表示你可以直接宣告變數，先賦予它一個數值，然後再賦予它"
"另一個不同型別的值也可以。\n"
"\n"
"與其他一些語言不同，在 GDScript 中以下程式碼是合法的。"

#: course/lesson-28-specifying-types/lesson.tres:35
msgid ""
"But this feature often causes problems down the line. Let's take one example."
msgstr "但這個特性經常會在後續開發中引發問題。讓我們來看一個例子。"

#: course/lesson-28-specifying-types/lesson.tres:43
msgid "Cell size: decimal number, or 2D vector?"
msgstr "格子的大小：小數或是二維向量？"

#: course/lesson-28-specifying-types/lesson.tres:45
msgid ""
"Games use grids all the time, be it for grid-based gameplay or to make "
"algorithms faster.\n"
"\n"
"When working with grids, you need to convert grid coordinates into positions "
"in the game world all the time. To do so, you give each cell a size in "
"pixels.\n"
"\n"
"You'll likely pick one of two types for that: [code]float[/code] or "
"[code]Vector2[/code], because pixel positions on the screen use "
"[code]Vector2[/code] coordinates.\n"
"\n"
"Either of those two values would be fine:"
msgstr ""
"遊戲經常使用網格，無論是用於基於網格的遊戲玩法，還是為了讓演算法運行得更快。"
"\n"
"\n"
"在處理網格時，你需要經常將網格座標轉換為遊戲世界中的位置。為了達到這個目標，"
"你需要為每個網格指定一個以像素為單位的大小。\n"
"\n"
"你通常會選擇以下兩種類型之一來表示這個大小：[code]float[/code] 或 [code]"
"Vector2[/code]，因為螢幕上的像素座標使用 [code]Vector2[/code] 來表示。\n"
"\n"
"這兩種數值類型都是可行的選擇："

#: course/lesson-28-specifying-types/lesson.tres:71
msgid ""
"Using a [code]Vector2[/code] could simplify some calculations. For example, "
"when converting grid coordinates to game world coordinates."
msgstr "使用 [code]Vector2[/code] "
"可以簡化某些計算，例如在將網格座標轉換為遊戲世界座標時。"

#: course/lesson-28-specifying-types/lesson.tres:91
msgid ""
"In this example, because both [code]cell[/code] and [code]cell_size[/code] "
"are [code]Vector2[/code] values, we can add them.\n"
"\n"
"However, if [code]cell_size[/code] is a [code]float[/code], we will get a "
"type error."
msgstr ""
"在這個例子中，因為 [code]cell[/code] 和 [code]cell_size[/code] 都是 [code]"
"Vector2[/code] 值，所以我們可以將它們相加。\n"
"\n"
"然而如果 [code]cell_size[/code] 是 [code]float[/code]，則會產生型別錯誤。"

#: course/lesson-28-specifying-types/lesson.tres:123
msgid ""
"Worse: due to dynamic typing, we won't get an error [i]right away[/i]. We "
"will only get the error when calling [code]grid_to_world(Vector2(1, 1))[/"
"code].\n"
"\n"
"And that's a big problem."
msgstr ""
"更糟糕的是：由於動態型別的關係，我們不會[b]立即[/b]收到錯誤訊息。只有在呼叫 "
"[code]grid_to_world(Vector2(1, 1))[/code] 時才會出錯。\n"
"\n"
"這是一個大問題。"

#: course/lesson-28-specifying-types/lesson.tres:135
msgid ""
"Because we're learning, we only have small code examples in this course. But "
"your games' code will get long and split into many files. When coding, you "
"often forget about the code you wrote several weeks ago.\n"
"\n"
"And with a lot of code, it could take [i]hours[/i] of play before players "
"trigger a type error in your code."
msgstr ""
"因為我們還在學習，所以本課程中的範例程式碼都很簡短。但在製作遊戲時，程式碼會"
"變得很長，並拆分成多個檔案。在開發過程中，你常常會忘記幾週前寫過的程式碼。\n"
"\n"
"而當程式碼變多時，可能需要[b]數小時[/b]"
"的遊玩時間，玩家才會觸發程式碼中的型別錯誤。"

#: course/lesson-28-specifying-types/lesson.tres:145
msgid "Using type hints"
msgstr "使用類型提示(type hints)"

#: course/lesson-28-specifying-types/lesson.tres:147
msgid ""
"Fortunately, GDScript has optional [i]type hints[/i].\n"
"\n"
"Type hints let the computer know the value type you want for variables and "
"report errors before running the code.\n"
"\n"
"To specify the type a variable can accept, you can write a colon and a type "
"after the name when defining a new variable."
msgstr ""
"幸運的是 GDScript 提供了可選的[b]型別提醒(type hints)[/b]。\n"
"\n"
"型別提醒可讓電腦知道變數應該接受的值類型，並在執行程式碼之前回報錯誤。\n"
"\n"
"要指定變數可以接受的型別，可以在在定義新變數時，變數名稱後加上冒號和型別。"

#: course/lesson-28-specifying-types/lesson.tres:171
msgid ""
"You could tell the computer you want [code]cell_size[/code] only to accept "
"[code]Vector2[/code] values like so."
msgstr "你可以這樣告訴電腦，[code]cell_size[/code] 只能接受 [code]Vector2[/code] "
"值，像下面這樣。"

#: course/lesson-28-specifying-types/lesson.tres:191
msgid ""
"If you try to replace the [code]cell_size[/code] with a value of another "
"type later, the computer will not let you."
msgstr "如果你之後嘗試用其他類型的值替換 [code]cell_size[/"
"code]，電腦將不允許你這麼做。"

#: course/lesson-28-specifying-types/lesson.tres:219
msgid "Letting the computer figure it out"
msgstr "讓電腦自動判斷"

#: course/lesson-28-specifying-types/lesson.tres:221
msgid ""
"GDScript comes with a feature called [i]type inference[/i]. In many cases, "
"but not all, the computer can figure out the type of a variable for you.\n"
"\n"
"To do so, you write [code]:=[/code], without the type. The computer will set "
"the type using the value after the equal sign. We could make "
"[code]cell_size[/code] a variable of type [code]Vector2[/code] like so:"
msgstr ""
"GDScript 有一個叫做[b]型別推斷(type inference)[/b]"
"的功能。在許多情況下，但不是所有情況，電腦可以幫你推斷出變數的型別。\n"
"\n"
"為了讓電腦推斷型別，你只需要寫 [code]:=[/code]"
"，並且不用寫型別。電腦會根據等號後的值來設定型別。我們可以這樣讓 [code]"
"cell_size[/code] 變數的型別是 [code]Vector2[/code]，像下面這樣："

#: course/lesson-28-specifying-types/lesson.tres:243
msgid ""
"This takes little typing, yet you get the benefits of using type hints, like "
"the computer reporting errors better and faster."
msgstr "這樣只要打一點字，卻能獲得使用型別提示的好處，像是電腦能更快、更準確地報告錯"
"誤。"

#: course/lesson-28-specifying-types/lesson.tres:251
msgid "Why bother to add hints?"
msgstr "為什麼要加上型別提示？"

#: course/lesson-28-specifying-types/lesson.tres:253
msgid ""
"When you give the language hints like that, it will [i]prevent[/i] major "
"type errors. When you work in Godot, you will see that the computer can "
"report issues as you write the code. It makes the benefit even greater.\n"
"\n"
"Type hints can also help improve the readability of your code. It can help "
"to put more information directly in the code. As we saw, types are essential "
"when coding, and when using type hints, the computer will add them to the "
"engine's built-in code documentation system.\n"
"\n"
"There's an incredible third benefit for you: by using type hints, you will "
"learn types much faster. It's excellent for learning.\n"
"\n"
"In the following practices, you will write the correct type hints to make "
"the code error-free."
msgstr ""
"當你給語言提供這樣的提示時，它將[b]防止[/b]重大的型別錯誤。在使用 Godot "
"時，你會發現電腦能夠在你寫程式碼時即時報告問題，這樣的好處會變得更大。\n"
"\n"
"型別提示還有助於提高程式碼的可讀性。它可以幫助你將更多的資訊直接放在程式碼中"
"。如我們所見，型別在編程中非常重要，而使用型別提示時，電腦會將它們添加到引擎"
"內建的程式碼文件系統中。\n"
"\n"
"還有一個驚人的第三個好處：通過使用型別提示，你會更快學會型別。對學習來說，這"
"是非常有幫助的。\n"
"\n"
"在接下來的練習中，你將寫出正確的型別提示來讓程式碼遠離錯誤。"

#: course/lesson-28-specifying-types/lesson.tres:267
msgid "Add the correct type hints to variables"
msgstr "向變數增加正確的型別提示"

#: course/lesson-28-specifying-types/lesson.tres:268
msgid ""
"Our variables get the correct values but not the right hints. Using your "
"type-fu, add the correct type names in the variable definitions.\n"
"\n"
"You need to write the type name between the colon and the equal sign.\n"
"\n"
"Note: You cannot use type inference in this practice. You need to write the "
"type name in full."
msgstr ""
"我們的變數獲得了正確的值，但沒有正確的型別提示。運用你的型別技巧，在變數定義"
"中添加正確的型別名稱。\n"
"\n"
"你需要將型別名稱寫在冒號和等號之間。\n"
"\n"
"注意：在這個練習中，你不能使用型別推斷。你需要將型別名稱寫完整。"

#: course/lesson-28-specifying-types/lesson.tres:284
msgid ""
"Our variables have the wrong type hints, causing errors. Correct them to "
"make the code run."
msgstr "我們的變數有錯誤的型別提示，造成錯誤。請修正它們來讓程式碼正常執行。"

#: course/lesson-28-specifying-types/lesson.tres:289
msgid "Fix the values to match the type hints"
msgstr "修正變數的值，使其與型別提示相符"

#: course/lesson-28-specifying-types/lesson.tres:290
msgid ""
"It is the other way around in this practice: the type hints are fine, but "
"the values are not.\n"
"\n"
"Your task is to fix the values after the equal sign, so they match the type "
"hint of each variable."
msgstr ""
"在這個練習中，型別提示是正確的，但變數的值不對。\n"
"\n"
"你的任務是修正等號後的變數值，使它們與每個變數的型別提示相符。"

#: course/lesson-28-specifying-types/lesson.tres:304
msgid ""
"This time, it's the other way around: variables have the correct type hints "
"but the wrong values. Change the values to make the code run."
msgstr "這次是相反的：變數有正確的型別提示，但值不正確。請修改值讓程式碼能正常執行。"

#: course/lesson-28-specifying-types/lesson.tres:308
msgid "Specifying types with type hints"
msgstr "用型別提示指定類型"
