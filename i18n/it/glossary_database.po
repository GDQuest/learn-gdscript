# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# Automatically generated, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2025-06-14 15:02+0200\n"
"PO-Revision-Date: 2023-05-17 09:52+0000\n"
"Last-Translator: Riccardo Santangelo <s.burns@live.it>\n"
"Language-Team: Italian <https://hosted.weblate.org/projects/learn-gdscript-"
"from-zero/glossary_database/it/>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.18-dev\n"
"Generated-By: Babel 2.9.1\n"

#. Reference: member function
#: course/glossary.csv:6
msgid "member function"
msgstr "funzione membro"

#. Reference: member function
#: course/glossary.csv:6
msgid "member functions"
msgstr "funzioni membro"

#. Reference: member function
#: course/glossary.csv:6
msgid ""
"Member functions are functions attached to a specific value type, like "
"arrays, strings, or dictionaries. We also call them methods.\n"
"\n"
"For example, arrays have member functions like [code]array.append()[/code].\n"
"\n"
"You can only call the function on an array, using the access operator "
"([code].[/code]) to access it, as shown above."
msgstr ""
"Le funzioni membro sono funzioni collegate ad uno specifico tipo di valore, "
"come array, stringhe o dizionari. Le chiamiamo pure metodi.\n"
"\n"
"Per esempio, gli array hanno funzioni membro come [code]array.append()[/"
"code].\n"
"\n"
"Puoi chiamare questa funzione solo su un array, usando l'operatore di "
"accesso ([code].[/code]) per accedervi, come mostrato qui sopra."

#. Reference: member variable
#: course/glossary.csv:9
msgid "member variable"
msgstr "variabile membro"

#. Reference: member variable
#: course/glossary.csv:9
msgid "member variables"
msgstr "variabili membro"

#. Reference: member variable
#: course/glossary.csv:9
msgid ""
"Member variables are variables attached to a specific value type, like a "
"vector's [code]x[/code] and [code]y[/code] sub-variables. We also call them "
"[i]properties[/i] or [i]fields[/i] of the vector.\n"
"\n"
"To access a member variable, you must first write the value's name followed "
"by the access operator ([code].[/code]). For example, [code]position.x[/"
"code]."
msgstr ""
"Le variabili membro sono variabili collegate a un tipo di valore specifico, "
"come le sotto-variabili [code]x[/code] e [code]y[/code] di un vettore. Le "
"chiamiamo anche [i]proprietà[/i] o [i]campi[/i] del vettore.\n"
"\n"
"Per accedere a una variabile membro, è necessario scrivere prima il nome del "
"valore seguito dall'operatore di accesso ([code].[/code]). Ad esempio, "
"[code]position.x[/code]."

#. Reference: parameter
#: course/glossary.csv:12
msgid "parameter"
msgstr "parametro"

#. Reference: parameter
#: course/glossary.csv:12
msgid "parameters"
msgstr "parametri"

#. Reference: parameter
#: course/glossary.csv:12
msgid ""
"A parameter is a variable you create as part of a function definition.\n"
"\n"
"It allows you to reuse the function more by having values that vary in the "
"function's body."
msgstr ""
"Un parametro è una variabile che crei come parte della definizione di una "
"funzione.\n"
"\n"
"Ti consente di riutilizzare la funzione più volte avendo valori che cambiano "
"nel corpo della funzione."

#. Reference: radian
#: course/glossary.csv:17
msgid "radian"
msgstr "radiante"

#. Reference: radian
#: course/glossary.csv:17
msgid "radians"
msgstr "radianti"

#. Reference: radian
#: course/glossary.csv:17
msgid ""
"A radian is a unit of measurement of angles based on the circle's "
"circumference.\n"
"\n"
"We tend to use degrees more in our daily lives, but in computer programming, "
"and especially in games, radians are common.\n"
"\n"
"An angle of [code]2 * PI[/code] radians corresponds to 360 degrees. And an "
"angle of [code]PI[/code] radians corresponds to 180 degrees."
msgstr ""
"Un radiante è un'unità di misura degli angoli basata sulla circonferenza del "
"cerchio.\n"
"\n"
"Nella vita di tutti i giorni tendiamo ad usare i gradi, ma in programmazione "
"e specialmente nei videogiochi, i radianti sono più comuni.\n"
"\n"
"Un angolo di [code]2 * PI[/code] radianti corrisponde a 360 gradi. E un "
"angolo di [code]PI[/code] radianti corrisponde a 180 gradi."

#. Reference: type
#: course/glossary.csv:20
msgid "type"
msgstr "tipo"

#. Reference: type
#: course/glossary.csv:20
msgid "types"
msgstr "tipi"

#. Reference: type
#: course/glossary.csv:20
msgid ""
"In computer programming, a type is the class of a value. For example, whole "
"numbers like [code]3[/code], [code]11[/code], and [code]255462[/code] are "
"all of type [code]int[/code] (short for integer).\n"
"\n"
"The computer uses types to determine which operations are valid between two "
"values and when they're undefined."
msgstr ""
"In programmazione, un tipo è la classe di un valore. Per esempio, i numeri "
"interi come [code]4[/code], [code]8[/code], [code]15[/code], [code]1623[/"
"code] e [code]42[/code] sono tutti del tipo [code]int[/code] (diminutivo di "
"intero).\n"
"\n"
"Il computer usa i tipi per determinare quali operatori sono validi tra due "
"valori e quando sono indefiniti."

#. Reference: iteration
#: course/glossary.csv:23
msgid "iteration"
msgstr "iterazione"

#. Reference: iteration
#: course/glossary.csv:23
msgid "iterations"
msgstr "iterazioni"

#. Reference: iteration
#: course/glossary.csv:23
msgid ""
"In computer code, an iteration is one repetition of some process or code. We "
"typically use the term with loops, where one iteration is one run of the "
"loop's code.\n"
"\n"
"When talking of algorithms, an iteration can mean a full pass of the "
"algorithm on a data set."
msgstr ""
"In programmazione, un'iterazione è una ripetizione dello stesso processo o "
"codice. Di solito usiamo il temine con i cicli, dove un'iterazione è "
"un'esecuzione del codice nel ciclo.\n"
"\n"
"Quando parliamo di algoritmi, un'iterazione può significare un'intera "
"passata dell'algoritmo su un set di dati."

#. Reference: vector
#: course/glossary.csv:28
msgid "vector"
msgstr "vettore"

#. Reference: vector
#: course/glossary.csv:28
msgid "vectors"
msgstr "vettori"

#. Reference: vector
#: course/glossary.csv:28
msgid ""
"In math, a vector is a list of numbers. In games, we often use 2D and 3D "
"vectors: respectively, lists of two and three numbers.\n"
"\n"
"We use that to represent a direction and magnitude or intensity in space. "
"For example, you can use a vector to represent the direction and speed at "
"which a character or a vehicle moves.\n"
"\n"
"Vectors can seem daunting at first because they are pretty abstract, but as "
"you will see, they'll simplify code tremendously."
msgstr ""
"In matematica, un vettore è una lista di numeri. Nei videogiochi, usiamo "
"spesso vettori 2D e 3D: rispettivamente, liste di due e tre numeri.\n"
"\n"
"Li usiamo per rappresentare una direzione e intensità nello spazio. Per "
"esempio, puoi usare un vettore per rappresentare la direzione e la velocità "
"alla quale un personaggio o un velivolo si muove.\n"
"\n"
"I vettori possono sembrare impegnativi all'inizio perché sono un po' "
"astratti, ma come vedrai, semplificheranno estremamente il tuo codice."

#. Reference: argument
#: course/glossary.csv:37
msgid "argument"
msgstr "argomento"

#. Reference: argument
#: course/glossary.csv:37
msgid "arguments"
msgstr "argomenti"

#. Reference: argument
#: course/glossary.csv:37
msgid ""
"An argument is a value that you pass to a function when calling the "
"function. For example, in the call [code]rotate(0.5)[/code], the value "
"[code]0.5[/code] in the parentheses is an argument.\n"
"\n"
"A function can receive no arguments, one argument, or multiple arguments. "
"Arguments can be mandatory or optional.\n"
"\n"
"When a function takes multiple arguments, you separate the values with "
"commas, like in this function call: [code]jump(50, 100)[/code]\n"
"\n"
"When [i]calling[/i] a function, we name the values passed in parentheses "
"[i]arguments[/i].\n"
"\n"
"When writing a function definition, however, we talk about function "
"[i]parameters[/i]. In the following example, the names [code]x[/code] and "
"[code]y[/code] are [i]parameters[/i]."
msgstr ""
"Un argomento è un valore che passi ad una funzione quando la chiami. Per "
"esempio, quando chiami [code]rotate(0.5)[/code], il valore [code]0.5[/code] "
"tra parentesi è un argomento.\n"
"\n"
"Una funzione può anche non ricevere argomenti, riceverne uno o molteplici. "
"Gli argomenti possono essere obbligatori o opzionali.\n"
"\n"
"Quando una funzione necessità molteplici argomenti, separi i valori con "
"delle virgole, come nella chiamata seguente: [code]jump(50, 100)[/code].\n"
"\n"
"Quando [i]chiamiamo[/i] una funzione, chiamiamo i valori passati tra "
"parentesi [i]argomenti[/i].\n"
"\n"
"Tuttavia, quando definiamo una funzione, parliamo di [i]parametri[/i] della "
"funzione. Nel seguente esempio, i nomi [code]x[/code] e [code]y[/code] sono "
"[i]parametri[/i]."

#. Reference: array
#: course/glossary.csv:44
msgid "array"
msgstr "array"

#. Reference: array
#: course/glossary.csv:44
msgid "arrays"
msgstr "array"

#. Reference: array
#: course/glossary.csv:44
msgid ""
"An array is a list of values. In GDScript, arrays can contain [i]any[/i] "
"types of value.\n"
"\n"
"To create an array, you write comma-separated values in square brackets: "
"[code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"In games, we use arrays all the time to store lists of characters in a "
"party, lists of items in inventory, lists of spells the player unlocked, and "
"so on. They're everywhere.\n"
"\n"
"Arrays are a fundamental value type in computer programming. You'll find "
"arrays in pretty much any programming language."
msgstr ""
"Un array è una lista di valori. In GDScript, gli array possono contenere "
"[i]ogni[/i] tipo di valore.\n"
"\n"
"Per creare un array, scrivi i valori, separati da una virgola, all'interno "
"di parentesi quadre: [code]var three_numbers = [1, 2, 3][/code].\n"
"\n"
"Nei videogiochi, usiamo gli array praticamente sempre per conservare liste "
"di personaggi in un gruppo, liste di oggetti nell'inventario, liste di "
"incantesimi che il giocatore ha sbloccato e così via. Sono ovunque.\n"
"\n"
"Gli array sono una tipologia di valori fondamentale per la prgrammazione. "
"Troverai gli array in praticamente ogni linguaggio di programmazione."

#. Reference: assign
#: course/glossary.csv:45
msgid "assign"
msgstr "assegna"

#. Reference: assign
#: course/glossary.csv:45
msgid ""
"Assigning a value to a variable means that you store a value inside the "
"variable. You do this with the equal sign ([code]=[/code])."
msgstr ""
"Assegnare un valore ad una variabile significa conservare un valore "
"all'interno della variabile. Puoi fare questo con il simbolo di uguaglianza "
"([code]=[/code])."

#. Reference: dictionary
#: course/glossary.csv:52
msgid "dictionary"
msgstr "dizionario"

#. Reference: dictionary
#: course/glossary.csv:52
msgid "dictionaries"
msgstr "dizionari"

#. Reference: dictionary
#: course/glossary.csv:52
msgid ""
"A dictionary is a data structure that maps values with key-value pairs. When "
"you give the dictionary a key, it finds and gives you back the corresponding "
"value.\n"
"\n"
"In GDScript, keys can be many things. We often use text strings or numbers, "
"but you're not limited to that. A [code]Vector2[/code] can also be a valid "
"key, which is handy to map a grid cell to a unit or an item in a grid-based "
"game.\n"
"\n"
"You will often use dictionaries to associate bits of data in your games. For "
"example, we could use them to associate an equipment's name with its weapon "
"stats in a database.\n"
"\n"
"Like arrays, they are a fundamental data type that you will see in many "
"programming languages and use a lot."
msgstr ""
"Un dizionario è una struttura di dati che mappa valori in gruppi di chiave-"
"valore. Quando dai una chiave ad un dizionario, trova e ti restituisce il "
"valore corrispondente.\n"
"\n"
"In GDScript, le chiavi possono essere molte cose. Spesso usiamo stringhe di "
"testo o numeri, ma non sei limitato solo a questi. Anche un [code]Vector2[/"
"code] può essere usato come chiave, questo può tornare utile per mappare "
"un'unità ad una cella di una griglia o un'oggetto in un gioco basato su "
"griglia.\n"
"\n"
"Userai spesso i dizionari per associare bit di dati nei tuoi giochi. Per "
"esempio, li possiamo usare per associare il nome di un equipaggiamento con "
"il le sue statistiche in un database.\n"
"\n"
"Come gli array, sono una tipologia di dati fondamentale che vedrai in molti "
"linguaggi di programmazione essere usati molto."

#. Reference: for loop
#: course/glossary.csv:59
msgid "for loop"
msgstr "ciclo for"

#. Reference: for loop
#: course/glossary.csv:59
msgid "for loops"
msgstr "cicli for"

#. Reference: for loop
#: course/glossary.csv:59
msgid ""
"A for loop instructs the computer to repeat a set of instructions once for "
"each value in an array.\n"
"\n"
"In each loop iteration, the compiler extracts one value from the array and "
"gives you access to it in the loop's body.\n"
"\n"
"For loops run code a limited amount of times: one per value in the array. It "
"is different from while loops that keep repeating code until a condition is "
"met.\n"
"\n"
"We recommend favoring for loops when you can. They're safer and easier to "
"use than while loops."
msgstr ""
"Un ciclo for istruisce il computer a ripetere un insieme di istruzioni una "
"volta per ogni valore in un array.\n"
"\n"
"Ad ogni iterazione, il compilatore estrae un valore dall'array e te ne da "
"accesso nel corpo del ciclo.\n"
"\n"
"I cicli for eseguono il codice un numero limitato di volte: uno per ogni "
"valore nell'array. Differisce dai cicli while che ripetono il codice a "
"oltranza finché una condizione è raggiunta.\n"
"\n"
"Ti consigliamo di preferire i cicli for quando puoi. Sono più sicuri e più "
"facili da usare rispetto ai cicli while."

#. Reference: function
#: course/glossary.csv:64
msgid "function"
msgstr "funzione"

#. Reference: function
#: course/glossary.csv:64
msgid "functions"
msgstr "funzioni"

#. Reference: function
#: course/glossary.csv:64
msgid ""
"A function is a group of code instructions you give a name. When you define "
"a function, you can call it any time to run all the instructions it "
"contains.\n"
"\n"
"You can modify a function's behavior with parameters. Parameters are "
"variable names that you write in the function definition. You can then use "
"them in the function's body to make your code adapt to different cases.\n"
"\n"
"Also, functions can optionally return a value to the code calling it."
msgstr ""
"Una funzione è un gruppo di istruzioni di codice a cui attribuisci un nome. "
"Quando definisci una funzione, la puoi chiamare ogni volta che vuoi per "
"eseguire le istruzioni contenute al suo interno.\n"
"\n"
"Puoi modificare il comportamento di una funzione con i parametri. I "
"parametri sono nomi di variabili che scrivi nella definizione della "
"funzione. Li puoi usare nel corpo della funzione per far si che il codice si "
"adatti a casi differenti.\n"
"\n"
"Inoltre, le funzioni eventualmente possono ritornare un valore al codice che "
"lo sta chiamando."

#. Reference: increment
#: course/glossary.csv:65
msgid "increment"
msgstr "incremento"

#. Reference: increment
#: course/glossary.csv:65
msgid "increments"
msgstr "incrementi"

#. Reference: increment
#: course/glossary.csv:65
msgid "An increment is the amount by which a value changes in your code."
msgstr ""
"Un incremento è la quantità con cui viene cambiato un valore nel tuo codice."

#. Reference: instruction
#: course/glossary.csv:68
msgid "instruction"
msgstr "istruzione"

#. Reference: instruction
#: course/glossary.csv:68
msgid "instructions"
msgstr "istruzioni"

#. Reference: instruction
#: course/glossary.csv:68
msgid ""
"In computer programming, instructions are a single operation the computer "
"recognizes and can execute.\n"
"\n"
"For example, a function call, an addition, or assigning a value to a "
"variable."
msgstr ""
"In programmazione, le istruzioni sono una singola operazione che il computer "
"riconosce e può eseguire.\n"
"\n"
"Per esempio, la chiamata di una funzione, un'addizione o l'assegnazione di "
"un valore ad una variabile."

#. Reference: variable
#: course/glossary.csv:77
msgid "variable"
msgstr "variabile"

#. Reference: variable
#: course/glossary.csv:77
msgid "variables"
msgstr "variabili"

#. Reference: variable
#: course/glossary.csv:77
msgid ""
"Variables are a tool to give a name to values you want to store in your code "
"and change over time.\n"
"\n"
"For example, a character's health: when the character takes a hit, you want "
"it to go down. When healing, you want the health to go back up.\n"
"\n"
"You can create a variable named [code]health[/code] to represent the "
"health.\n"
"\n"
"Then, every time you write the keyword [code]health[/code] in your code, the "
"computer will fetch the corresponding value in its memory for you.\n"
"\n"
"Variables work a bit like product labels in a supermarket. They are names "
"that you attach to some value. Any time, you can take the label and stick it "
"onto a new product or, in that case, a new value."
msgstr ""
"Le variabili sono uno strumento utilizzato per dare un nome a valori che "
"vuoi conservare nel tuo codice e vuoi cambiare nel tempo.\n"
"\n"
"Per esempio, la vita di un personaggio: quando un personaggio viene colpito, "
"vuoi farlo perire. Quando ti curi, vuoi che la vita risalga.\n"
"\n"
"Puoi creare una variabile chiamata [code]vita[/code] per rappresentare la "
"vita.\n"
"\n"
"Così, ogni volta che scrivi la parola chiave [code]vita[/code] nel tuo "
"codice, il computer recupererà il valore corrispondente dalla sua memoria "
"per te.\n"
"\n"
"Le variabili funzionano un po' come le etichette sui prodotti al "
"supermercato. Sono nomi che attacchi a del valore. Quando vuoi, puoi "
"prendere l'etichetta e attaccarla ad un nuovo prodotto o in questo caso, un "
"nuovo valore."

#. Reference: while loop
#: course/glossary.csv:84
msgid "while loop"
msgstr "ciclo while"

#. Reference: while loop
#: course/glossary.csv:84
msgid "while loops"
msgstr "cicli while"

#. Reference: while loop
#: course/glossary.csv:84
msgid ""
"A while loop instructs the computer to keep running code based on a "
"condition. While the condition is true, the loop keeps running.\n"
"\n"
"When coding while loops, you must be careful: they will keep running "
"infinitely and freeze your game if you get the condition wrong.\n"
"\n"
"That's why we recommend using the safer for loop whenever you can.\n"
"\n"
"However, there are still essential cases in which we use while loops, like "
"processing files, processing computer code, or for powerful algorithms."
msgstr ""
"Un ciclo while dice al computer di continuare ad eseguire il codice in base "
"ad una condizione. Finché la condizione è vera, il ciclo continua.\n"
"\n"
"Programmando cicli while, devi stare attento: continueranno ad eseguire in "
"modo infinito e bloccheranno il gioco se la condizione è sbagliata.\n"
"\n"
"Ecco perchè consigliamo di usare il ciclo for, più sicuro, quando "
"possibile.\n"
"\n"
"Tuttavia, ci sono sempre dei casi in cui usare i cicli while è essenziale, "
"come per processare file, processare codice o per potenti algoritmi."

#. Reference: body
#: course/glossary.csv:85
msgid "body"
msgstr "corpo"

#. Reference: body
#: course/glossary.csv:85
msgid ""
"We talk about a loop or a function's body to refer to the lines of code that "
"are part of the loop or function."
msgstr ""
"Parliamo di corpo di una funzione o di un ciclo per riferirci alle linee di "
"codice che sono all'interno della funzione o del ciclo."

#. Reference: return
#: course/glossary.csv:88
msgid "return"
msgstr "ritorna"

#. Reference: return
#: course/glossary.csv:88
msgid ""
"Returning a value is the process of sending a value to the place where you "
"call a function.\n"
"\n"
"It happens when a function uses the [code]return[/code] keyword followed by "
"a value, for example: [code]return -1[/code]."
msgstr ""
"Ritornare un valore è il processo di mandare un valore al posto in cui viene "
"chiamata una funzione.\n"
"\n"
"Questo succede quando una funzione usa la parola chiave [code]return[/code] "
"seguito da un valore, per esempio: [code]return - 1[/code] o [code]return "
"vita[/code]."

#. Reference: library
#: course/glossary.csv:89
msgid "library"
msgstr "libreria"

#. Reference: library
#: course/glossary.csv:89
msgid "libraries"
msgstr "librerie"

#. Reference: library
#: course/glossary.csv:89
msgid ""
"A collection of valuable and reusable code bundled together by other "
"programmers to save you time. All programmers use code libraries."
msgstr ""
"Una collezione di prezioso e riutilizzabile codice confezionato insieme da "
"altri programmatori per farti salvare tempo. Tutti i programmatori usano "
"librerie di codici."

#. Reference: sprite
#: course/glossary.csv:90
msgid "sprite"
msgstr "sprite"

#. Reference: sprite
#: course/glossary.csv:90
msgid "sprites"
msgstr "sprite"

#. Reference: sprite
#: course/glossary.csv:90
msgid ""
"In computer graphics, a sprite is an image you display on the screen. We "
"generally use this word to talk about moving images, like a character, a "
"monster, or an item falling on the ground."
msgstr ""
"In computer grafica, uno sprite è un'immagine che viene mostrata su schermo. "
"In genere usiamo questa parola per parlare di immagini che cambiano con il "
"tempo, come un personaggio, un mostro p un oggetto che cade a terra."
