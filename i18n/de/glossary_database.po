# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2025-06-14 15:02+0200\n"
"PO-Revision-Date: 2024-11-17 12:00+0000\n"
"Last-Translator: Noah Stürtz <noah@coru.sh>\n"
"Language-Team: German <https://hosted.weblate.org/projects/learn-gdscript-"
"from-zero/glossary_database/de/>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.9-dev\n"
"Generated-By: Babel 2.9.1\n"

#. Reference: member function
#: course/glossary.csv:6
msgid "member function"
msgstr "Memberfunktion"

#. Reference: member function
#: course/glossary.csv:6
msgid "member functions"
msgstr "Memberfunktionen"

#. Reference: member function
#: course/glossary.csv:6
msgid ""
"Member functions are functions attached to a specific value type, like "
"arrays, strings, or dictionaries. We also call them methods.\n"
"\n"
"For example, arrays have member functions like [code]array.append()[/code].\n"
"\n"
"You can only call the function on an array, using the access operator "
"([code].[/code]) to access it, as shown above."
msgstr ""
"Memberfunktionen sind Funktionen, die auf einem bestimmten Wertyp angehören, "
"z. B. Arrays, Strings oder Dictionaries. Wir nennen sie auch Methoden.\n"
"\n"
"Arrays verfügen beispielsweise über Memberfunktionen wie [code]array.append()"
"[/code].\n"
"\n"
"Du kannst die Methode auf einem Array nur mit dem Zugriffsoperator ([code].[/"
"code]) aufrufen, wie oben gezeigt."

#. Reference: member variable
#: course/glossary.csv:9
msgid "member variable"
msgstr "Membervariable"

#. Reference: member variable
#: course/glossary.csv:9
msgid "member variables"
msgstr "Membervariablen"

#. Reference: member variable
#: course/glossary.csv:9
msgid ""
"Member variables are variables attached to a specific value type, like a "
"vector's [code]x[/code] and [code]y[/code] sub-variables. We also call them "
"[i]properties[/i] or [i]fields[/i] of the vector.\n"
"\n"
"To access a member variable, you must first write the value's name followed "
"by the access operator ([code].[/code]). For example, [code]position.x[/"
"code]."
msgstr ""
"Membervariablen sind Variablen, die Teil eines bestimmten Werttyps sind, z. "
"B. die Untervariablen [code]x[/code] und [code]y[/code] eines Vektors. Wir "
"nennen sie auch [i]Properties[/i] oder [i]Felder[/i] des Vektors.\n"
"\n"
"Um auf eine Membervariable zuzugreifen, schreiben wir den Namen der "
"Variablen gefolgt vom Zugriffsoperator ([code].[/code]) und dann dem Namen "
"der Membervariable. Beispiel: [code]position.x[/code]."

#. Reference: parameter
#: course/glossary.csv:12
msgid "parameter"
msgstr "Parameter"

#. Reference: parameter
#: course/glossary.csv:12
msgid "parameters"
msgstr "Parameter"

#. Reference: parameter
#: course/glossary.csv:12
msgid ""
"A parameter is a variable you create as part of a function definition.\n"
"\n"
"It allows you to reuse the function more by having values that vary in the "
"function's body."
msgstr ""
"Ein Parameter ist eine Variable, die Teil einer Funktionsdefinition ist.\n"
"\n"
"Parameter ermöglichen es dir, Funktionen zu erstellen, die an mehreren "
"Stellen in deinem Code verwendet werden können, indem du der Funktion bei "
"Aufrufen andere Werte als Parameter mitgibst."

#. Reference: radian
#: course/glossary.csv:17
msgid "radian"
msgstr "Radiant"

#. Reference: radian
#: course/glossary.csv:17
msgid "radians"
msgstr "Radianten"

#. Reference: radian
#: course/glossary.csv:17
msgid ""
"A radian is a unit of measurement of angles based on the circle's "
"circumference.\n"
"\n"
"We tend to use degrees more in our daily lives, but in computer programming, "
"and especially in games, radians are common.\n"
"\n"
"An angle of [code]2 * PI[/code] radians corresponds to 360 degrees. And an "
"angle of [code]PI[/code] radians corresponds to 180 degrees."
msgstr ""
"Ein Radiant ist eine Maßeinheit für Winkel, die auf dem Umfang des Kreises "
"basiert.\n"
"\n"
"Im alltag wird oftmals das Grad system verwednet, in der "
"Computerprogrammierung hingegen, besonders bei Spielen, fällt die wahl "
"jedoch meist auf Radianten.\n"
"\n"
"Ein Winkel von [code]2 * PI[/code] Radiant entspricht 360 Grad. Und ein "
"Winkel von [code]PI[/code] Radiant entspricht 180 Grad."

#. Reference: type
#: course/glossary.csv:20
msgid "type"
msgstr "Typ"

#. Reference: type
#: course/glossary.csv:20
msgid "types"
msgstr "Typen"

#. Reference: type
#: course/glossary.csv:20
msgid ""
"In computer programming, a type is the class of a value. For example, whole "
"numbers like [code]3[/code], [code]11[/code], and [code]255462[/code] are "
"all of type [code]int[/code] (short for integer).\n"
"\n"
"The computer uses types to determine which operations are valid between two "
"values and when they're undefined."
msgstr ""
"In der Computerprogrammierung ist ein Typ die Klasse eines Werts. "
"Beispielsweise sind ganze Zahlen wie [code]3[/code], [code]11[/code] und "
"[code]255462[/code] alle vom Typ [code]int[/code] (kurz für integer).\n"
"\n"
"Der Computer verwendet Typen, um zu bestimmen, welche Vorgänge zwischen zwei "
"Werten gültig sind und wann sie nicht definiert sind."

#. Reference: iteration
#: course/glossary.csv:23
msgid "iteration"
msgstr "Wiederholung (Iteration)"

#. Reference: iteration
#: course/glossary.csv:23
msgid "iterations"
msgstr "Wiederholungen (Iterationen)"

#. Reference: iteration
#: course/glossary.csv:23
msgid ""
"In computer code, an iteration is one repetition of some process or code. We "
"typically use the term with loops, where one iteration is one run of the "
"loop's code.\n"
"\n"
"When talking of algorithms, an iteration can mean a full pass of the "
"algorithm on a data set."
msgstr ""
"Im Computercode ist eine Iteration eine Wiederholung eines Prozesses oder "
"Codes. Wir verwenden den Begriff normalerweise mit Schleifen, wobei eine "
"Iteration ein Durchlauf des Codes der Schleife ist.\n"
"\n"
"Wenn man von Algorithmen spricht, kann eine Iteration einen vollständigen "
"Durchlauf des Algorithmus auf einem Datensatz bedeuten."

#. Reference: vector
#: course/glossary.csv:28
msgid "vector"
msgstr "Vektor"

#. Reference: vector
#: course/glossary.csv:28
msgid "vectors"
msgstr "Vektoren"

#. Reference: vector
#: course/glossary.csv:28
msgid ""
"In math, a vector is a list of numbers. In games, we often use 2D and 3D "
"vectors: respectively, lists of two and three numbers.\n"
"\n"
"We use that to represent a direction and magnitude or intensity in space. "
"For example, you can use a vector to represent the direction and speed at "
"which a character or a vehicle moves.\n"
"\n"
"Vectors can seem daunting at first because they are pretty abstract, but as "
"you will see, they'll simplify code tremendously."
msgstr ""
"In der Mathematik ist ein Vektor eine Liste von Zahlen. In Spielen verwenden "
"wir oft 2D- und 3D-Vektoren: Listen mit zwei bzw. drei Zahlen.\n"
"\n"
"Wir verwenden das, um eine Richtung und Größe oder Intensität im Raum "
"darzustellen. Du kannst beispielsweise einen Vektor verwenden, um die "
"Richtung und Geschwindigkeit darzustellen, mit der sich ein Charakter oder "
"ein Fahrzeug bewegt.\n"
"\n"
"Vektoren können auf den ersten Blick entmutigend wirken, weil sie ziemlich "
"abstrakt sind, aber wie Du sehen wirst werden sie den Code enorm "
"vereinfachen."

#. Reference: argument
#: course/glossary.csv:37
msgid "argument"
msgstr "Argument"

#. Reference: argument
#: course/glossary.csv:37
msgid "arguments"
msgstr "Argumente (Parameter)"

#. Reference: argument
#: course/glossary.csv:37
msgid ""
"An argument is a value that you pass to a function when calling the "
"function. For example, in the call [code]rotate(0.5)[/code], the value "
"[code]0.5[/code] in the parentheses is an argument.\n"
"\n"
"A function can receive no arguments, one argument, or multiple arguments. "
"Arguments can be mandatory or optional.\n"
"\n"
"When a function takes multiple arguments, you separate the values with "
"commas, like in this function call: [code]jump(50, 100)[/code]\n"
"\n"
"When [i]calling[/i] a function, we name the values passed in parentheses "
"[i]arguments[/i].\n"
"\n"
"When writing a function definition, however, we talk about function "
"[i]parameters[/i]. In the following example, the names [code]x[/code] and "
"[code]y[/code] are [i]parameters[/i]."
msgstr ""
"Ein Argument ist ein Wert, den Du beim Aufrufen der Funktion an eine "
"Funktion übergeben. Beispielsweise ist im Aufruf [code]rotate(0.5)[/code] "
"der Wert [code]0.5[/code] in den Klammern ein Argument.\n"
"\n"
"Eine Funktion kann keine Argumente, kein Argument oder mehrere Argumente "
"empfangen. Argumente können obligatorisch oder optional sein.\n"
"\n"
"Wenn eine Funktion mehrere Argumente akzeptiert, trennst Du die Werte durch "
"Kommas, wie in diesem Funktionsaufruf: [code]jump(50, 100)[/code]\n"
"\n"
"Beim [i]aufrufen[/i] einer Funktion, benennen wir die übergebenen Werte in "
"Klammern [i]Argumente[/i].\n"
"\n"
"Wenn wir jedoch eine Funktionsdefinition schreiben, sprechen wir von "
"[i]Funktionsparametern[/i]. Im folgenden Beispiel sind die Namen [code]x[/"
"code] und [code]y[/code] [i]Parameter[/i]."

#. Reference: array
#: course/glossary.csv:44
msgid "array"
msgstr "Liste (Array)"

#. Reference: array
#: course/glossary.csv:44
msgid "arrays"
msgstr "Listen (Arrays)"

#. Reference: array
#: course/glossary.csv:44
msgid ""
"An array is a list of values. In GDScript, arrays can contain [i]any[/i] "
"types of value.\n"
"\n"
"To create an array, you write comma-separated values in square brackets: "
"[code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"In games, we use arrays all the time to store lists of characters in a "
"party, lists of items in inventory, lists of spells the player unlocked, and "
"so on. They're everywhere.\n"
"\n"
"Arrays are a fundamental value type in computer programming. You'll find "
"arrays in pretty much any programming language."
msgstr ""
"Ein Array ist eine Liste von Werten. In GDScript können Arrays Werte "
"[i]jeglichens[/i] Typen enthalten.\n"
"\n"
"Um ein Array zu erstellen, schreibst Du kommagetrennte Werte in eckige "
"Klammern: [code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"In Spielen verwenden wir ständig Arrays, um Listen von Charakteren in einer "
"Gruppe, Listen von Gegenständen im Inventar, Listen von Zaubersprüchen, die "
"der Spieler freigeschaltet hat, und so weiter zu speichern. Sie sind "
"überall.\n"
"\n"
"Arrays sind ein grundlegender Werttyp in der Computerprogrammierung. Du "
"wirst Arrays in so ziemlich jeder Programmiersprache finden."

#. Reference: assign
#: course/glossary.csv:45
msgid "assign"
msgstr "Zuweisung"

#. Reference: assign
#: course/glossary.csv:45
msgid ""
"Assigning a value to a variable means that you store a value inside the "
"variable. You do this with the equal sign ([code]=[/code])."
msgstr ""
"Das Zuweisen eines Werts zu einer Variablen bedeutet, dass Du einen Wert in "
"der Variablen speicherst. Das geschieht mit dem Gleichheitszeichen ([code]=[/"
"code])."

#. Reference: dictionary
#: course/glossary.csv:52
msgid "dictionary"
msgstr "Wörterbuch (dictionary)"

#. Reference: dictionary
#: course/glossary.csv:52
msgid "dictionaries"
msgstr "Dictionaries"

#. Reference: dictionary
#: course/glossary.csv:52
msgid ""
"A dictionary is a data structure that maps values with key-value pairs. When "
"you give the dictionary a key, it finds and gives you back the corresponding "
"value.\n"
"\n"
"In GDScript, keys can be many things. We often use text strings or numbers, "
"but you're not limited to that. A [code]Vector2[/code] can also be a valid "
"key, which is handy to map a grid cell to a unit or an item in a grid-based "
"game.\n"
"\n"
"You will often use dictionaries to associate bits of data in your games. For "
"example, we could use them to associate an equipment's name with its weapon "
"stats in a database.\n"
"\n"
"Like arrays, they are a fundamental data type that you will see in many "
"programming languages and use a lot."
msgstr ""
"Ein Dictionary (Wörterbuch) ist eine Datenstruktur, die Werte mit Schlüssel-"
"Wert-Paaren abbildet. Wenn Du dem Wörterbuch einen Schlüssel gibst, findet "
"und gibt es Den entsprechenden Wert zurück.\n"
"\n"
"In GDScript können Schlüssel viele Dinge sein. Wir verwenden oft "
"Textzeichenfolgen oder Zahlen, aber Du bist nicht darauf beschränkt. Ein "
"[code]Vector2[/code] kann auch ein gültiger Schlüssel sein, was praktisch "
"ist, um eine Gitterzelle einer Einheit oder einem Element in einem "
"rasterbasierten Spiel zuzuordnen.\n"
"\n"
"Du wirst häufig Wörterbücher verwenden, um Datenbits in Deinem Spielen "
"zuzuordnen. Zum Beispiel könnten wir sie verwenden, um den Namen einer "
"Ausrüstung mit ihren Waffenstatistiken in einer Datenbank zu verknüpfen.\n"
"\n"
"Wie Arrays sind sie ein grundlegender Datentyp, den Sie in vielen "
"Programmiersprachen sehen und häufig verwenden."

#. Reference: for loop
#: course/glossary.csv:59
msgid "for loop"
msgstr "for-Schleife"

#. Reference: for loop
#: course/glossary.csv:59
msgid "for loops"
msgstr "for-Schleifen"

#. Reference: for loop
#: course/glossary.csv:59
msgid ""
"A for loop instructs the computer to repeat a set of instructions once for "
"each value in an array.\n"
"\n"
"In each loop iteration, the compiler extracts one value from the array and "
"gives you access to it in the loop's body.\n"
"\n"
"For loops run code a limited amount of times: one per value in the array. It "
"is different from while loops that keep repeating code until a condition is "
"met.\n"
"\n"
"We recommend favoring for loops when you can. They're safer and easier to "
"use than while loops."
msgstr ""
"Eine for-Schleife weist den Computer an, einen Satz von Anweisungen einmal "
"für jeden Wert in einem Array zu wiederholen.\n"
"\n"
"In jeder Schleifeniteration extrahiert der Compiler einen Wert aus dem Array "
"und gibt Ihnen Zugriff darauf im Hauptteil der Schleife.\n"
"\n"
"For Schleifen führen Code eine begrenzte Anzahl von Malen aus: eine pro Wert "
"im Array. Es unterscheidet sich von while-Schleifen, die Code wiederholen, "
"bis eine Bedingung erfüllt ist.\n"
"\n"
"Wir empfehlen, for Schleifen zu bevorzugen, wenn Du kannst sie sind sicherer "
"und einfacher zu bedienen als While-Schleifen."

#. Reference: function
#: course/glossary.csv:64
msgid "function"
msgstr "Funktion"

#. Reference: function
#: course/glossary.csv:64
msgid "functions"
msgstr "Funktionen"

#. Reference: function
#: course/glossary.csv:64
msgid ""
"A function is a group of code instructions you give a name. When you define "
"a function, you can call it any time to run all the instructions it "
"contains.\n"
"\n"
"You can modify a function's behavior with parameters. Parameters are "
"variable names that you write in the function definition. You can then use "
"them in the function's body to make your code adapt to different cases.\n"
"\n"
"Also, functions can optionally return a value to the code calling it."
msgstr ""
"Eine Funktion ist eine Gruppe von Codeanweisungen, denen Du einen Namen "
"gibst. Wenn Du eine Funktion definierst, kannst Du sie jederzeit aufrufen, "
"um alle darin enthaltenen Anweisungen auszuführen.\n"
"\n"
"Du kannst das Verhalten einer Funktion mit Parametern ändern. Parameter sind "
"Variablennamen, die Du in die Funktionsdefinition schreibst. Du kannst sie "
"dann im Hauptteil der Funktion verwenden, um Deinem Code an verschiedene "
"Fälle anzupassen.\n"
"\n"
"Außerdem können Funktionen optional einen Wert an den Code zurückgeben, der "
"ihn aufruft."

#. Reference: increment
#: course/glossary.csv:65
msgid "increment"
msgstr "Inkrement"

#. Reference: increment
#: course/glossary.csv:65
msgid "increments"
msgstr "Inkrements"

#. Reference: increment
#: course/glossary.csv:65
msgid "An increment is the amount by which a value changes in your code."
msgstr "Ein Inkrement ist der Betrag, um den sich ein Wert im Code ändert."

#. Reference: instruction
#: course/glossary.csv:68
msgid "instruction"
msgstr "Anweisung"

#. Reference: instruction
#: course/glossary.csv:68
msgid "instructions"
msgstr "Anweisungen"

#. Reference: instruction
#: course/glossary.csv:68
msgid ""
"In computer programming, instructions are a single operation the computer "
"recognizes and can execute.\n"
"\n"
"For example, a function call, an addition, or assigning a value to a "
"variable."
msgstr ""
"In der Computerprogrammierung sind Anweisungen eine einzelne Operation, die "
"der Computer erkennt und ausführen kann.\n"
"\n"
"Zum Beispiel ein Funktionsaufruf, eine Addition oder das Zuweisen eines "
"Werts zu einer Variablen."

#. Reference: variable
#: course/glossary.csv:77
msgid "variable"
msgstr "Variable"

#. Reference: variable
#: course/glossary.csv:77
msgid "variables"
msgstr "Variablen"

#. Reference: variable
#: course/glossary.csv:77
msgid ""
"Variables are a tool to give a name to values you want to store in your code "
"and change over time.\n"
"\n"
"For example, a character's health: when the character takes a hit, you want "
"it to go down. When healing, you want the health to go back up.\n"
"\n"
"You can create a variable named [code]health[/code] to represent the "
"health.\n"
"\n"
"Then, every time you write the keyword [code]health[/code] in your code, the "
"computer will fetch the corresponding value in its memory for you.\n"
"\n"
"Variables work a bit like product labels in a supermarket. They are names "
"that you attach to some value. Any time, you can take the label and stick it "
"onto a new product or, in that case, a new value."
msgstr ""
"Variablen sind ein Tool, um Werten, die Du in deinem Code speicherst und im "
"Laufe der Zeit ändern möchtest, einen Namen zu geben.\n"
"\n"
"Zum Beispiel das Leben eines Charakters: Wenn der Charakter einen Treffer "
"erleidet, möchtest Du, dass es sinkt. Wenn Du heilst, möchtest Du, dass das "
"Leben wieder steigt.\n"
"\n"
"Du kannst eine Variable mit dem Namen [code]health[/code] erstellen, um das "
"Leben darzustellen.\n"
"\n"
"Jedes Mal, wenn Du das Schlüsselwort [code]health[/code] in deinem Code "
"schreibst, ruft der Computer den entsprechenden Wert in seinem Speicher für "
"Dich ab.\n"
"\n"
"Variablen funktionieren ein bisschen wie Produktetiketten in einem "
"Supermarkt. Es sind Namen, denen Du einen bestimmten Wert gibst. Du kannst "
"das Etikett jederzeit nehmen und es auf ein neues Produkt oder in diesem "
"Fall einen neuen Wert kleben."

#. Reference: while loop
#: course/glossary.csv:84
msgid "while loop"
msgstr "while-Schleife"

#. Reference: while loop
#: course/glossary.csv:84
msgid "while loops"
msgstr "while-Schleifen"

#. Reference: while loop
#: course/glossary.csv:84
msgid ""
"A while loop instructs the computer to keep running code based on a "
"condition. While the condition is true, the loop keeps running.\n"
"\n"
"When coding while loops, you must be careful: they will keep running "
"infinitely and freeze your game if you get the condition wrong.\n"
"\n"
"That's why we recommend using the safer for loop whenever you can.\n"
"\n"
"However, there are still essential cases in which we use while loops, like "
"processing files, processing computer code, or for powerful algorithms."
msgstr ""
"Eine while-Schleife weist den Computer an, Code basierend auf einer "
"Bedingung auszuführen. Während die Bedingung wahr ist, läuft die Schleife "
"weiter.\n"
"\n"
"Wenn Du eine while Schleife programmierst musst Du vorsichtig sein: Sie "
"laufen unendlich weiter und frieren Dein Spiel ein, wenn Du die Bedingung "
"falsch aufbaust.\n"
"\n"
"Aus diesem Grund empfehlen wir, wann immer möglich die sicherere for-"
"Schleife zu verwenden.\n"
"\n"
"Es gibt jedoch immer noch wesentliche Fälle, in denen wir While-Schleifen "
"verwenden, wie die Verarbeitung von Dateien, die Verarbeitung von "
"Computercode oder für leistungsstarke Algorithmen."

#. Reference: body
#: course/glossary.csv:85
msgid "body"
msgstr "body"

#. Reference: body
#: course/glossary.csv:85
msgid ""
"We talk about a loop or a function's body to refer to the lines of code that "
"are part of the loop or function."
msgstr ""
"Wir sprechen über eine Schleife oder den Körper einer Funktion, um auf die "
"Codezeilen zu verweisen, die Teil der Schleife oder Funktion sind."

#. Reference: return
#: course/glossary.csv:88
msgid "return"
msgstr "Rückgabe"

#. Reference: return
#: course/glossary.csv:88
msgid ""
"Returning a value is the process of sending a value to the place where you "
"call a function.\n"
"\n"
"It happens when a function uses the [code]return[/code] keyword followed by "
"a value, for example: [code]return -1[/code]."
msgstr ""
"Die Rückgabe eines Werts ist der Prozess des Sendens eines Werts an die "
"Stelle, an der Du eine Funktion aufrufst.\n"
"\n"
"Dies geschieht, wenn eine Funktion das Schlüsselwort [code]return[/code] "
"gefolgt von einem Wert verwendet, z. B.: [code]return -1[/code]."

#. Reference: library
#: course/glossary.csv:89
msgid "library"
msgstr "Bibliothek"

#. Reference: library
#: course/glossary.csv:89
msgid "libraries"
msgstr "Bibliotheken"

#. Reference: library
#: course/glossary.csv:89
msgid ""
"A collection of valuable and reusable code bundled together by other "
"programmers to save you time. All programmers use code libraries."
msgstr ""
"Eine Sammlung an nützlichen und wiederverwendbaren Code der von anderen "
"Programmierern zusammengefasst wurde um Zeit zusparen nennt man Bibliothek "
"oder Library. Jeder nutzt sie."

#. Reference: sprite
#: course/glossary.csv:90
msgid "sprite"
msgstr ""

#. Reference: sprite
#: course/glossary.csv:90
msgid "sprites"
msgstr ""

#. Reference: sprite
#: course/glossary.csv:90
msgid ""
"In computer graphics, a sprite is an image you display on the screen. We "
"generally use this word to talk about moving images, like a character, a "
"monster, or an item falling on the ground."
msgstr ""
"In Computer Grafiken nennt man Bilder die auf dem Bildschirm angezeigt "
"werden können \"Sprites\". Wir nutzen dieses Wort typischerweise um über "
"sich bewegende Bilder, wie zum Beispiel Charaktere, Monser oder Gegenstände "
"zu reden."
