# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2024-11-15 21:21+0000\n"
"Last-Translator: Noah Stürtz <noah@coru.sh>\n"
"Language-Team: German <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-6-multiple-function-parameters/de/>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.9-dev\n"
"Generated-By: Babel 2.9.0\n"

#: course/lesson-6-multiple-function-parameters/lesson.tres:14
msgid ""
"In the previous part, you created a function to draw a square of a fixed "
"size.\n"
"\n"
"This function is a bit limiting. Instead, it would be much better if we had "
"a function to draw a square of [i]any[/i] size. Or better: any kind of "
"rectangle (a square is a specific kind of rectangle).\n"
"\n"
"In previous lessons, you used the [code]rotate()[/code] function and gave it "
"an [i]argument[/i]."
msgstr ""
"Im vorherigen Teil hast Du eine Funktion zum Zeichnen eines Quadrats fester "
"Größe erstellt.\n"
"\n"
"Diese Funktion ist sehr eingeschränkt nutzbar. Besser wäre es, wenn wir mit "
"der Funktion ein Quadrat von [i]beliebiger[/i] Größe zeichnen könnten. Oder "
"noch besser: Jede Art von Rechteck (ein Quadrat ist eine bestimmte Art von "
"Rechteck).\n"
"\n"
"In früheren Lektionen hast Du die Funktion [code]rotate()[/code] verwendet "
"und ihr ein [i]Argument[/i] gegeben."

#: course/lesson-6-multiple-function-parameters/lesson.tres:38
msgid ""
"Just like [code]rotate()[/code], we can also give our function "
"[i]parameters[/i]. Parameters are labels you give to values passed to the "
"function."
msgstr ""
"Genau wie [code]rotate()[/code] können wir auch in unserer Funktion "
"[i]Parameter[/i] angeben. Parameter sind Werte mit Namen, die an die "
"Funktion übergeben werden."

#: course/lesson-6-multiple-function-parameters/lesson.tres:46
msgid "Can I rotate in both directions?"
msgstr "Kann ich in beide Richtungen drehen?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:48
msgid ""
"The [code]radians[/code] can be a positive or negative number, which allows "
"you to rotate both clockwise and counter-clockwise."
msgstr ""
"Das [code]Bogenmaß[/code] kann eine positive oder negative Zahl sein, mit "
"der Du sowohl im Uhrzeigersinn als auch gegen den Uhrzeigersinn drehen "
"kannst."

#: course/lesson-6-multiple-function-parameters/lesson.tres:58
msgid ""
"For now, please focus on the first line: [code]func rotate(radians)[/code].\n"
"\n"
"When you call [code]rotate(0.5)[/code], the computer binds the value "
"[code]0.5[/code] to the label [code]radians[/code].\n"
"\n"
"Wherever the computer sees the identifier [code]radians[/code] inside the "
"function, it replaces it with the [code]0.5[/code] value.\n"
"\n"
"The parameter name is always a label you use to refer to a [i]value[/i]. The "
"value in question can be a number, text, or anything else.\n"
"\n"
"For now, we'll stick to numbers as we have yet to see other value types."
msgstr ""
"Bitte konzentriere dich vorerst auf die erste Zeile: [code]func "
"rotate(radians)[/code].\n"
"\n"
"Wenn Du [code]rotate(0.5)[/code] aufrufst, bindet der Computer den Wert "
"[code]0.5[/code] an die Bezeichnung [code]radians[/code](Bogenmaß).\n"
"\n"
"Wo immer der Computer den Bezeichner [code]radians[/code] innerhalb der "
"Funktion sieht, ersetzt er ihn durch den Wert [code]0.5[/code].\n"
"\n"
"Der Parametername ist immer eine Bezeichnung, die Du verwendest, um auf "
"einen [i]Wert[/i] zu verweisen. Der fragliche Wert kann eine Zahl, ein Text "
"oder etwas anderes sein.\n"
"\n"
"Im Moment werden wir uns an Zahlen halten, da wir noch keine anderen Typen "
"gesehen haben."

#: course/lesson-6-multiple-function-parameters/lesson.tres:74
msgid "What is a function parameter?"
msgstr "Was ist ein Funktionsparameter?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:77
msgid ""
"A parameter is a label that represents a value.\n"
"\n"
"The value in question can change: it depends on what you put in parentheses "
"when calling a function."
msgstr ""
"Ein Parameter stellt einen Wert mit einer Bezeichnung dar.\n"
"\n"
"Der fragliche Wert kann sich ändern: Es hängt davon ab, was Du beim Aufruf "
"einer Funktion in Klammern setzt."

#: course/lesson-6-multiple-function-parameters/lesson.tres:80
#: course/lesson-6-multiple-function-parameters/lesson.tres:81
msgid "A label you give to a value the function receives."
msgstr "Eine Bezeichnung, der Du einen Wert gibst, den die Funktion empfängt."

#: course/lesson-6-multiple-function-parameters/lesson.tres:80
msgid "A number you use to make calculations."
msgstr "Eine Zahl, die Du für Berechnungen verwendest."

#: course/lesson-6-multiple-function-parameters/lesson.tres:80
msgid "The name of a function."
msgstr "Der Name einer Funktion."

#: course/lesson-6-multiple-function-parameters/lesson.tres:88
msgid "How to create functions with parameters"
msgstr "So erstellst Du Funktionen mit Parametern"

#: course/lesson-6-multiple-function-parameters/lesson.tres:90
msgid ""
"You can give your function parameters when writing its [i]definition[/i] "
"(the line starting with the [code]func[/code] keyword).\n"
"\n"
"To do so, you add a name inside of the parentheses."
msgstr ""
"Du kannst in deiner Funktion Parameter angeben, wenn Du ihre "
"[i]Definition[/i] schreibst (die Zeile, die mit dem Schlüsselwort "
"[code]func[/code] beginnt).\n"
"\n"
"Dazu fügst Du einen Namen innerhalb der Klammern hinzu."

#: course/lesson-6-multiple-function-parameters/lesson.tres:112
msgid ""
"You can give parameters any name. How you name functions and parameters is "
"up to you. \n"
"\n"
"Just remember that names cannot contain spaces. To write parameter names "
"with multiple words, you need to use underscores.\n"
"\n"
"The following function definition is exactly equivalent to the previous one."
msgstr ""
"Du kannst Parametern einen beliebigen Namen geben. Wie Du Funktionen und "
"Parameter benennst, bleibt dir überlassen. \n"
"\n"
"Denke daran, dass Namen keine Leerzeichen enthalten können. Um "
"Parameternamen mit mehreren Wörtern zu schreiben, musst Du Unterstriche "
"verwenden.\n"
"\n"
"Die folgende Funktionsdefinition entspricht genau der vorherigen."

#: course/lesson-6-multiple-function-parameters/lesson.tres:136
msgid ""
"Parameters make your code easier to reuse.\n"
"\n"
"Here's an example with a function to draw any square. Use the slider to "
"change the value passed to the function and draw squares of different sizes."
msgstr ""
"Parameter erleichtern die Wiederverwendung deines Codes.\n"
"\n"
"Hier ist ein Beispiel mit einer Funktion, um ein beliebiges Quadrat zu "
"zeichnen. Verwende den Schieberegler, um den an die Funktion übergebenen "
"Wert zu ändern und Quadrate unterschiedlicher Größe zu zeichnen."

#: course/lesson-6-multiple-function-parameters/lesson.tres:156
msgid "Which is the correct syntax for a function definition?"
msgstr "Was ist die korrekte Syntax für eine Funktionsdefinition?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:159
msgid ""
"To define a function, you need to start with the [code]func[/code] keyword "
"followed by a space, the [code]function_name[/code], and optional parameters "
"inside parentheses.\n"
"\n"
"You must end the line with a colon, which defines a new code block. We'll "
"see moving forward that keywords other than [code]func[/code] require a "
"colon at the end of the line."
msgstr ""
"Um eine Funktion zu definieren, musst Du mit dem Schlüsselwort [code]func[/"
"code] beginnen, gefolgt von einem Leerzeichen, dem [code]Funktionsnamen[/"
"code] und optionalen Parametern in Klammern.\n"
"\n"
"Du musst die Zeile mit einem Doppelpunkt beenden, dieser definiert einen "
"neuen Codeblock. Wir werden in Zukunft sehen, dass andere Schlüsselwörter "
"als [code]func[/code] einen Doppelpunkt am Ende der Zeile erfordern."

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
#: course/lesson-6-multiple-function-parameters/lesson.tres:163
msgid "func function_name(parameter_name):"
msgstr ""
"func function_name(parameter_name):func function_name(parameter_name):func "
"function_name(parameter_name):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
msgid "func (function_name): parameter_name"
msgstr "func (function_name): parameter_name"

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
msgid "func function_name(parameter_name)"
msgstr "func function_name(parameter_name)"

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
msgid "function_name(parameter_name):"
msgstr "function_name(parameter_name):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:170
msgid "Functions can have multiple parameters"
msgstr "Funktionen können mehrere Parameter haben"

#: course/lesson-6-multiple-function-parameters/lesson.tres:172
msgid ""
"You can use multiple parameters in a function. In fact, you can use as many "
"as you [i]need[/i].\n"
"\n"
"To separate the function parameters, you need to write a comma between them."
msgstr ""
"Du kannst mehrere Parameter in einer Funktion verwenden. Tatsächlich kannst "
"Du so viele verwenden, wie Du [i]benötigst[/i].\n"
"\n"
"Um die Funktionsparameter zu trennen, musst Du ein Komma zwischen sie "
"schreiben."

#: course/lesson-6-multiple-function-parameters/lesson.tres:192
msgid "Must I write spaces between function parameters?"
msgstr "Muss ich Leerzeichen zwischen Funktionsparameter schreiben?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:194
msgid ""
"In a function definition, you must have a space between the [code]func[/"
"code] keyword and the function name.\n"
"\n"
"However, because we use the comma to separate parameters, it doesn't matter "
"if you use spaces between parameters. As long as you have the comma, either "
"syntax is correct.\n"
"\n"
"We often use spaces after the comma for readability."
msgstr ""
"In einer Funktionsdefinition muss zwischen dem Schlüsselwort [code]func[/"
"code] und dem Funktionsnamen ein Leerzeichen stehen.\n"
"\n"
"Da wir jedoch das Komma verwenden, um Parameter zu trennen, spielt es keine "
"Rolle, ob Du Leerzeichen zwischen Parametern verwendest. Solange Du das "
"Komma verwendest, ist jede Syntax korrekt.\n"
"\n"
"Wir verwenden oft Leerzeichen nach dem Komma um die Lesbarkeit zu "
"erleichtern."

#: course/lesson-6-multiple-function-parameters/lesson.tres:208
msgid ""
"The following example defines a function that uses two parameters to move an "
"entity on both the X and Y axes."
msgstr ""
"Im folgenden Beispiel wird eine Funktion definiert, die zwei Parameter "
"verwendet, um eine Entität sowohl auf der X- als auch auf der Y-Achse zu "
"bewegen."

#: course/lesson-6-multiple-function-parameters/lesson.tres:226
msgid "How should I name my functions and parameters?"
msgstr "Wie soll ich meine Funktionen und Parameter benennen?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:228
msgid ""
"The names of functions, parameters, or other things in your code are "
"entirely up to you.\n"
"\n"
"They are written by us programmers for other programmers. You want to use "
"the names that make the most sense to you and fellow programmers.\n"
"\n"
"You could absolutely write single-letter names like in maths classes: "
"[code]a[/code], [code]b[/code], [code]f[/code].\n"
"\n"
"You can also write abbreviated names like [code]pos[/code] for position, "
"[code]bg[/code] for background, and so on.\n"
"\n"
"Many programmers do either or both of the above.\n"
"\n"
"At GDQuest, we favor complete and explicit names.\n"
"\n"
"We generally try to write code that is explicit and relatively easy to "
"read.\n"
"\n"
"Right now, you have to enter every letter when you code, so long names may "
"feel inconvenient.\n"
"\n"
"However, this is good for learning: it trains your fingers to [ignore]type "
"precisely.\n"
"\n"
"Then, after you finish this course, you will see that the computer assists "
"you a lot when you code real games with a feature called auto-completion.\n"
"\n"
"Based on a few characters you [ignore]type, it will offer you to complete "
"long names."
msgstr ""
"Die Namen von Funktionen, Parametern oder anderen Dingen in deinem Code "
"kannst Du frei wählen.\n"
"\n"
"Sie werden von uns Programmierern für andere Programmierer geschrieben. Du "
"solltest Namen verwenden, die für dich und andere Programmierer am "
"sinnvollsten erscheinen.\n"
"\n"
"Du kannst durchaus Namen mit nur einem Buchstaben nehmen, wie im "
"Matheunterricht: [code]a[/code], [code]b[/code], [code]f[/code].\n"
"\n"
"Du kannst auch abgekürzte Namen schreiben, wie [code]pos[/code] für "
"Position, [code]bg[/code] für Background (auf deutsch Hintergrund) und so "
"weiter.\n"
"\n"
"Viele Programmierer tun eines oder beide der oben genannten Dinge.\n"
"\n"
"Bei GDQuest bevorzugen wir vollständige und eindeutige Namen.\n"
"\n"
"Wir versuchen im Allgemeinen, Code zu schreiben, der eindeutig und relativ "
"leicht zu lesen ist.\n"
"\n"
"Im Moment musst du beim Programmieren jeden Buchstaben eingeben, somit "
"können lange Namen als lästig empfunden werden.\n"
"\n"
"Dies hilft jedoch gut beim Lernen: Es trainiert deine Finger, präzise zu "
"tippen.\n"
"\n"
"Wenn du diesen Kurs beendet hast, wirst du sehen, dass der Computer dir beim "
"Programmieren echter Spiele mit einer Funktion namens Autovervollständigung "
"sehr behilflich ist.\n"
"\n"
"Auf der Grundlage einiger weniger Zeichen, die du tippst, bietet er dir an, "
"lange Namen zu vervollständigen."

#: course/lesson-6-multiple-function-parameters/lesson.tres:256
msgid "When defining a function, parameters are..."
msgstr "Bei der Definition einer Funktion sind Parameter..."

#: course/lesson-6-multiple-function-parameters/lesson.tres:259
msgid ""
"You can define functions with or without parameters, depending on your needs."
msgstr ""
"Du kannst Funktionen mit oder ohne Parameter definieren, je nach Bedarf."

#: course/lesson-6-multiple-function-parameters/lesson.tres:260
#: course/lesson-6-multiple-function-parameters/lesson.tres:261
msgid "Optional"
msgstr "Optional"

#: course/lesson-6-multiple-function-parameters/lesson.tres:260
msgid "Mandatory"
msgstr "Verpflichtend"

#: course/lesson-6-multiple-function-parameters/lesson.tres:268
msgid ""
"What's the correct syntax to define a function with multiple parameters?"
msgstr ""
"Was ist die richtige Syntax, um eine Funktion mit mehreren Parametern zu "
"definieren?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:271
msgid ""
"You always write the function parameters inside of the parentheses. To "
"define multiple parameters, you separate them with a comma."
msgstr ""
"Du schreibst die Funktionsparameter immer innerhalb der Klammern. Um mehrere "
"Parameter zu definieren, trennst Du diese durch ein Komma."

#: course/lesson-6-multiple-function-parameters/lesson.tres:272
#: course/lesson-6-multiple-function-parameters/lesson.tres:273
msgid "func function_name(parameter_1, parameter_2, ...):"
msgstr "func funktions_name(parameter_1, parameter_2, ...):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:272
msgid "func function_name(parameter_1 parameter_2 ...):"
msgstr "func funktions_name(parameter_1 parameter_2 ...):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:272
msgid "func function_name(): parameter_1, parameter_2, ..."
msgstr "func funktions_name(): parameter_1, parameter_2, ..."

#: course/lesson-6-multiple-function-parameters/lesson.tres:282
msgid ""
"Now it's your turn to create a function with multiple parameters: a function "
"to draw rectangles of any size."
msgstr ""
"Jetzt bist Du an der Reihe, eine Funktion mit mehreren Parametern zu "
"erstellen: Eine Funktion zum Zeichnen von Rechtecken beliebiger Größe."

#: course/lesson-6-multiple-function-parameters/lesson.tres:290
msgid "Drawing corners of different sizes"
msgstr "Zeichnen von Ecken unterschiedlicher Größe"

#: course/lesson-6-multiple-function-parameters/lesson.tres:291
msgid ""
"Before we create a rectangle of any size, let's first see how we can use "
"parameters to draw simpler shapes.\n"
"\n"
"Here we have an incomplete function that will draw corners with lines of any "
"length, but it's missing its [code]length[/code] parameter.\n"
"\n"
"The function will move the turtle forward an amount defined by the parameter "
"[code]length[/code], turn [code]90[/code] degrees, then move forward "
"[code]length[/code] pixels.\n"
"\n"
"Complete the [code]draw_corner()[/code] function so it uses the "
"[code]length[/code] parameter to draw corners."
msgstr ""
"Bevor wir ein Rechteck beliebiger Größe erstellen, sehen wir uns zunächst "
"an, wie wir Parameter verwenden können, um einfachere Formen zu zeichnen.\n"
"\n"
"Hier haben wir eine unvollständige Funktion, die Ecken mit Linien beliebiger "
"Länge zeichnet, aber es fehlt der Parameter [code]length[/code](Länge)..\n"
"\n"
"Die Funktion bewegt die Schildkröte um einen durch den Parameter "
"[code]length[/code] definierten Betrag vorwärts, dreht sich um [code]90°[/"
"code] nach rechts und bewegt sich dann um den Wert von [code]length[/code] "
"in Pixeln vorwärts .\n"
"\n"
"Vervollständige die Funktion [code]draw_corner()[/code] so, dass sie den "
"Parameter [code]length[/code] zum Zeichnen von Ecken verwendet."

#: course/lesson-6-multiple-function-parameters/lesson.tres:309
msgid ""
"Using function parameters, code a function you can reuse to draw corners "
"with lines of varying sizes."
msgstr ""
"Schreibe mithilfe von Funktionsparametern eine Funktion, die Du "
"wiederverwenden kannst, um Ecken mit Linien unterschiedlicher Größe zu "
"zeichnen."

#: course/lesson-6-multiple-function-parameters/lesson.tres:314
msgid "Using multiple parameters"
msgstr "Verwenden mehrerer Parameter"

#: course/lesson-6-multiple-function-parameters/lesson.tres:315
msgid ""
"In this practice, we'll improve our [code]draw_corner()[/code] function so "
"the angle can also vary.\n"
"\n"
"Add the [code]angle[/code] parameter after the [code]length[/code] parameter "
"in the [code]draw_corner()[/code] function and use it to draw corners of "
"varying angles."
msgstr ""
"In dieser Übung verbessern wir unsere [code]draw_corner()[/code]-Funktion, "
"sodass der Winkel auch variieren kann.\n"
"\n"
"Füge der Funktion [code]draw_corner()[/code] den Parameter [code]angle[/code]"
" hinzu und verwende sie, um Ecken mit unterschiedlichen Winkeln zu zeichnen."

#: course/lesson-6-multiple-function-parameters/lesson.tres:329
msgid "With two parameters, code a function to draw corners with any angle."
msgstr ""
"Schreibe eine Funktion mit zwei Parametern, um Ecken mit einem beliebigen "
"Winkel zu zeichnen."

#: course/lesson-6-multiple-function-parameters/lesson.tres:334
msgid "Drawing squares of any size"
msgstr "Zeichnen von Quadraten beliebiger Größe"

#: course/lesson-6-multiple-function-parameters/lesson.tres:335
msgid ""
"We want a function to draw squares of any size.\n"
"\n"
"We could use these squares as outlines when selecting units in a tactical "
"game, as a frame for items in an inventory, and more.\n"
"\n"
"Create a function named [code]draw_square()[/code] that takes one parameter: "
"the [code]length[/code] of the square's sides.\n"
"\n"
"[b]The turtle should face towards the right when starting or completing a "
"square.[/b]\n"
"\n"
"Be sure to call [b]turn_right(90)[/b]  enough times in your function to do "
"so."
msgstr ""
"Wir wollen eine Funktion, um Quadrate beliebiger Größe zu zeichnen.\n"
"\n"
"Wir könnten diese Quadrate als Umrisse bei der Auswahl von Einheiten in "
"einem taktischen Spiel, als Rahmen für Gegenstände in einem Inventar und "
"mehr verwenden.\n"
"\n"
"Erstelle eine Funktion mit dem Namen [code]draw_square()[/code], die einen "
"Parameter annimmt: die Länge([code]length[/code]) der Seiten des Quadrats.\n"
"\n"
"[b]Die Schildkröte soll zu Beginn und am Ende der Zeichnung nach rechts "
"schauen.[/b]\n"
"\n"
"Stelle sicher dafür oft genug  [b]turn_right(90)[/b] aufzurufen."

#: course/lesson-6-multiple-function-parameters/lesson.tres:352
msgid ""
"In the previous lesson, your function would draw squares of a fixed size. "
"Using a parameter, code a function to draw squares of any size."
msgstr ""
"In der vorherigen Lektion zeichnete deine Funktion Quadrate einer festen "
"Größe. Programmiere mithilfe eines Parameters eine Funktion, um Quadrate "
"beliebiger Größe zu zeichnen."

#: course/lesson-6-multiple-function-parameters/lesson.tres:357
msgid "Drawing rectangles of any size"
msgstr "Zeichnen von Rechtecken beliebiger Größe"

#: course/lesson-6-multiple-function-parameters/lesson.tres:358
msgid ""
"Let's make our square drawing function more flexible to include rectangles "
"of varying sizes.\n"
"\n"
"Your job is to code a function named [code]draw_rectangle()[/code] that "
"takes two parameters: the [code]length[/code] and the [code]height[/code] of "
"the rectangle.\n"
"\n"
"[b]The turtle should face towards the right when starting or completing a "
"rectangle.[/b]\n"
"\n"
"Note that we could still draw a square with [code]draw_rectangle()[/code] by "
"having the [code]length[/code] and [code]height[/code] equal the same value."
msgstr ""
"Lass uns unsere Zeichenfunktion für das Quadrat flexibler gestalten, um "
"Rechtecke unterschiedlicher Größe zu zeichnen.\n"
"\n"
"Deine Aufgabe ist es, eine Funktion mit dem Namen "
"[code]draw_rectangle()[/code] zu programmieren, die zwei Parameter "
"akzeptiert: die Länge([code]length[/code]) und die Höhe([code]height[/code]) "
"des Rechtecks.\n"
"\n"
"[b]Die Schildkröte soll am Anfang oder Ende des Zeichenvorgangs nach rechts "
"schauen.[b]\n"
"\n"
"Beachte, dass wir immer noch ein Quadrat mit [code]draw_rectangle()[/code] "
"zeichnen könnten, indem wir Länge([code]length[/code]) und "
"Höhe([code]height[/code]) den gleichen Wert zuweisen."

#: course/lesson-6-multiple-function-parameters/lesson.tres:381
msgid ""
"With one parameter, you can make squares of any size. With two, you can draw "
"any rectangle! You'll do so in this practice."
msgstr ""
"Mit einem Parameter kannst Du Quadrate beliebiger Größe erstellen. Mit zwei "
"kannst Du jedes Rechteck zeichnen! Du wirst dies in dieser Übung tun."

#: course/lesson-6-multiple-function-parameters/lesson.tres:385
msgid "Your First Function Parameter"
msgstr "Dein erster Funktionsparameter"
