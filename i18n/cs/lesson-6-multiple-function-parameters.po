# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2025-06-14 15:02+0200\n"
"PO-Revision-Date: 2023-12-18 08:01+0000\n"
"Last-Translator: ebor <ebor@post.cz>\n"
"Language-Team: Czech <https://hosted.weblate.org/projects/learn-gdscript-"
"from-zero/lesson-6-multiple-function-parameters/cs/>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\n"
"X-Generator: Weblate 5.3\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-6-multiple-function-parameters/lesson.tres:14
#, fuzzy
msgid ""
"In the previous part, you created a function to draw a square of a fixed "
"size.\n"
"\n"
"This function is a bit limiting. Instead, it would be much better if we had "
"a function to draw a square of [i]any[/i] size. Or better: any kind of "
"rectangle (a square is a specific kind of rectangle).\n"
"\n"
"In previous lessons, you used the [code]rotate()[/code] function and gave it "
"an [i]argument[/i]."
msgstr ""
"V předchozím díle jste vytvořili funkci pro vykreslení čtverce pevně dané "
"velikosti.\n"
"\n"
"Tato funkce je trochu omezující. Místo toho by bylo mnohem lepší, kdybychom "
"měli funkci pro vykreslení čtverce o [i] libovolné[/i] velikosti. Nebo lépe: "
"libovolný druh obdélníku (čtverec je specifický druh obdélníku).\n"
"\n"
"V předchozích lekcích jste použili funkci [code]rotate()[/code] a zadali jí "
"[i]parametr[/i]."

#: course/lesson-6-multiple-function-parameters/lesson.tres:38
msgid ""
"Just like [code]rotate()[/code], we can also give our function "
"[i]parameters[/i]. Parameters are labels you give to values passed to the "
"function."
msgstr ""
"Stejně jako funkci [code]rotate()[/code] můžeme naší funkci zadat "
"[i]parametry[/i]. Parametry jsou označení, která dáváte hodnotám předávaným "
"funkci."

#: course/lesson-6-multiple-function-parameters/lesson.tres:46
msgid "Can I rotate in both directions?"
msgstr "Mohu se otáčet oběma směry?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:48
msgid ""
"The [code]radians[/code] can be a positive or negative number, which allows "
"you to rotate both clockwise and counter-clockwise."
msgstr ""
"[code]Radians[/code] mohou být kladné nebo záporné číslo, což umožňuje "
"otáčení ve směru nebo proti směru hodinových ručiček."

#: course/lesson-6-multiple-function-parameters/lesson.tres:58
msgid ""
"For now, please focus on the first line: [code]func rotate(radians)[/code].\n"
"\n"
"When you call [code]rotate(0.5)[/code], the computer binds the value "
"[code]0.5[/code] to the label [code]radians[/code].\n"
"\n"
"Wherever the computer sees the identifier [code]radians[/code] inside the "
"function, it replaces it with the [code]0.5[/code] value.\n"
"\n"
"The parameter name is always a label you use to refer to a [i]value[/i]. The "
"value in question can be a number, text, or anything else.\n"
"\n"
"For now, we'll stick to numbers as we have yet to see other value types."
msgstr ""
"Prozatím se zaměřte na první řádek: [code]func rotate(radians)[/code].\n"
"\n"
"Když zavoláte [code]rotate(0.5)[/code], počítač přiřadí hodnotu [code]0.5[/"
"code] ke značce/identifikátoru [code]radians[/code].\n"
"\n"
"Všude, kde počítač uvidí uvnitř funkce identifikátor [code]radians[/code], "
"nahradí jej hodnotou [code]0,5[/code].\n"
"\n"
"Název parametru je vždy označení, které použijete pro odkaz na [i]hodnotu[/"
"i]. Příslušnou hodnotou může být číslo, text nebo cokoli jiného.\n"
"\n"
"Prozatím zůstaneme u čísel, protože s jinými typy hodnot jsme se ještě "
"nesetkali."

#: course/lesson-6-multiple-function-parameters/lesson.tres:74
msgid "What is a function parameter?"
msgstr "Co je parametr funkce?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:77
msgid ""
"A parameter is a label that represents a value.\n"
"\n"
"The value in question can change: it depends on what you put in parentheses "
"when calling a function."
msgstr ""
"Parametr je značka, která představuje hodnotu.\n"
"\n"
"Příslušná hodnota se může měnit: záleží na tom, co uvedete do závorek při "
"volání funkce."

#: course/lesson-6-multiple-function-parameters/lesson.tres:80
#: course/lesson-6-multiple-function-parameters/lesson.tres:81
msgid "A label you give to a value the function receives."
msgstr "Označení, které přidělíte hodnotě, kterou funkce obdrží."

#: course/lesson-6-multiple-function-parameters/lesson.tres:80
msgid "A number you use to make calculations."
msgstr "Číslo, které používáte k provádění výpočtů."

#: course/lesson-6-multiple-function-parameters/lesson.tres:80
msgid "The name of a function."
msgstr "Název funkce."

#: course/lesson-6-multiple-function-parameters/lesson.tres:88
msgid "How to create functions with parameters"
msgstr "Jak vytvářet funkce s parametry"

#: course/lesson-6-multiple-function-parameters/lesson.tres:90
msgid ""
"You can give your function parameters when writing its [i]definition[/i] "
"(the line starting with the [code]func[/code] keyword).\n"
"\n"
"To do so, you add a name inside of the parentheses."
msgstr ""
"Parametry funkce můžete zadat při psaní její [i]definice[/i] (řádek "
"začínající klíčovým slovem [code]func[/code]).\n"
"\n"
"Chcete-li tak učinit, přidejte název parametru do závorek."

#: course/lesson-6-multiple-function-parameters/lesson.tres:112
msgid ""
"You can give parameters any name. How you name functions and parameters is "
"up to you. \n"
"\n"
"Just remember that names cannot contain spaces. To write parameter names "
"with multiple words, you need to use underscores.\n"
"\n"
"The following function definition is exactly equivalent to the previous one."
msgstr ""
"Parametry můžete pojmenovat libovolně. Jak pojmenujete funkce a parametry, "
"je jen na vás. \n"
"\n"
"Jen nezapomeňte, že názvy nesmí obsahovat mezery. Chcete-li napsat názvy "
"parametrů s více slovy, musíte použít podtržítka.\n"
"\n"
"Následující definice funkce je ekvivalentní předchozí."

#: course/lesson-6-multiple-function-parameters/lesson.tres:136
msgid ""
"Parameters make your code easier to reuse.\n"
"\n"
"Here's an example with a function to draw any square. Use the slider to "
"change the value passed to the function and draw squares of different sizes."
msgstr ""
"Parametry usnadňují opětovné použití kódu.\n"
"\n"
"Zde je příklad s funkcí pro nakreslení libovolného čtverce. Pomocí posuvníku "
"změňte hodnotu předávanou funkci a nakreslete čtverce různých velikostí."

#: course/lesson-6-multiple-function-parameters/lesson.tres:156
msgid "Which is the correct syntax for a function definition?"
msgstr "Jaká je správná syntaxe pro definici funkce?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:159
msgid ""
"To define a function, you need to start with the [code]func[/code] keyword "
"followed by a space, the [code]function_name[/code], and optional parameters "
"inside parentheses.\n"
"\n"
"You must end the line with a colon, which defines a new code block. We'll "
"see moving forward that keywords other than [code]func[/code] require a "
"colon at the end of the line."
msgstr ""
"Chcete-li definovat funkci, musíte začít klíčovým slovem [code]func[/code] "
"následovaným mezerou, [code]název_funkce[/code] a volitelnými parametry v "
"závorkách.\n"
"\n"
"Řádek musíte ukončit dvojtečkou, která určuje začátek nového bloku kódu "
"(instrukcí). V budoucnu uvidíme, že také jiná klíčová slova než [code]func[/"
"code] vyžadují na konci řádku dvojtečku."

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
#: course/lesson-6-multiple-function-parameters/lesson.tres:163
msgid "func function_name(parameter_name):"
msgstr "func nazev_funkce(nazev_parametru):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
msgid "func (function_name): parameter_name"
msgstr "func (nazev_funkce): nazev_parametru"

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
msgid "func function_name(parameter_name)"
msgstr "func nazev_funkce(nazev_parametru)"

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
msgid "function_name(parameter_name):"
msgstr "nazev_funkce(nazev_parametru):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:170
msgid "Functions can have multiple parameters"
msgstr "Funkce mohou mít více parametrů"

#: course/lesson-6-multiple-function-parameters/lesson.tres:172
msgid ""
"You can use multiple parameters in a function. In fact, you can use as many "
"as you [i]need[/i].\n"
"\n"
"To separate the function parameters, you need to write a comma between them."
msgstr ""
"Ve funkci můžete použít více parametrů. Ve skutečnosti jich můžete použít "
"tolik, kolik [i]potřebujete[/i].\n"
"\n"
"Chcete-li parametry funkce oddělit, musíte mezi ně napsat čárku."

#: course/lesson-6-multiple-function-parameters/lesson.tres:192
#, fuzzy
msgid "Must I write spaces between function parameters?"
msgstr "Musím mezi parametry funkce psát mezery?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:194
msgid ""
"In a function definition, you must have a space between the [code]func[/"
"code] keyword and the function name.\n"
"\n"
"However, because we use the comma to separate parameters, it doesn't matter "
"if you use spaces between parameters. As long as you have the comma, either "
"syntax is correct.\n"
"\n"
"We often use spaces after the comma for readability."
msgstr ""
"V definici funkce musíte mít mezeru mezi klíčovým slovem [code]func[/code] a "
"názvem funkce.\n"
"\n"
"Protože však k oddělení parametrů používáme čárku, nezáleží na tom, zda mezi "
"parametry používáte mezery.\n"
"\n"
"Pro čitelnost často používáme mezery za čárkou."

#: course/lesson-6-multiple-function-parameters/lesson.tres:208
msgid ""
"The following example defines a function that uses two parameters to move an "
"entity on both the X and Y axes."
msgstr ""
"Následující příklad definuje funkci, která pomocí dvou parametrů přesouvá "
"entitu na osách X a Y."

#: course/lesson-6-multiple-function-parameters/lesson.tres:226
msgid "How should I name my functions and parameters?"
msgstr "Jak mám pojmenovat své funkce a parametry?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:228
msgid ""
"The names of functions, parameters, or other things in your code are "
"entirely up to you.\n"
"\n"
"They are written by us programmers for other programmers. You want to use "
"the names that make the most sense to you and fellow programmers.\n"
"\n"
"You could absolutely write single-letter names like in maths classes: "
"[code]a[/code], [code]b[/code], [code]f[/code].\n"
"\n"
"You can also write abbreviated names like [code]pos[/code] for position, "
"[code]bg[/code] for background, and so on.\n"
"\n"
"Many programmers do either or both of the above.\n"
"\n"
"At GDQuest, we favor complete and explicit names.\n"
"\n"
"We generally try to write code that is explicit and relatively easy to "
"read.\n"
"\n"
"Right now, you have to enter every letter when you code, so long names may "
"feel inconvenient.\n"
"\n"
"However, this is good for learning: it trains your fingers to [ignore]type "
"precisely.\n"
"\n"
"Then, after you finish this course, you will see that the computer assists "
"you a lot when you code real games with a feature called auto-completion.\n"
"\n"
"Based on a few characters you [ignore]type, it will offer you to complete "
"long names."
msgstr ""
"Názvy funkcí, parametrů a dalších věcí v kódu jsou zcela na vás.\n"
"\n"
"Píšeme je my, programátoři, pro jiné programátory. Chcete používat názvy, "
"které dávají největší smysl vám i ostatním programátorům.\n"
"\n"
"Můžete psát jednopísmenné názvy jako v hodinách matematiky: [code]a[/code], "
"[code]b[/code], [code]f[/code].\n"
"\n"
"Můžete také psát zkrácené názvy, například [code]pos[/code] pro pozici, "
"[code]bg[/code] pro pozadí atd.\n"
"\n"
"Mnoho programátorů provádí jednu nebo obě výše uvedené činnosti.\n"
"\n"
"V GDQuestu dáváme přednost úplným a explicitním názvům.\n"
"\n"
"Obecně se snažíme psát kód, který je explicitní a relativně snadno čitelný.\n"
"\n"
"To, že musíte v tomto kurzu při kódování zadávat každé písmeno, může působit "
"nepohodlně.\n"
"\n"
"Je to však dobré pro učení: trénujete si prsty pro přesné [ignore] psaní.\n"
"\n"
"Po dokončení tohoto kurzu pak uvidíte, že vám počítač při kódování "
"skutečných her hodně pomáhá díky funkci zvané automatické dokončování.\n"
"\n"
"Na základě několika znaků, které [ignore]zadáte, vám nabídne doplnění "
"dlouhých názvů."

#: course/lesson-6-multiple-function-parameters/lesson.tres:256
msgid "When defining a function, parameters are..."
msgstr "Pokud definujete funkci, parametry jsou..."

#: course/lesson-6-multiple-function-parameters/lesson.tres:259
msgid ""
"You can define functions with or without parameters, depending on your needs."
msgstr "Podle potřeby můžete definovat funkce s parametry nebo bez nich."

#: course/lesson-6-multiple-function-parameters/lesson.tres:260
#: course/lesson-6-multiple-function-parameters/lesson.tres:261
msgid "Optional"
msgstr "Volitelné"

#: course/lesson-6-multiple-function-parameters/lesson.tres:260
msgid "Mandatory"
msgstr "Povinné"

#: course/lesson-6-multiple-function-parameters/lesson.tres:268
msgid ""
"What's the correct syntax to define a function with multiple parameters?"
msgstr "Jaká je správná syntaxe pro definici funkce s více parametry?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:271
msgid ""
"You always write the function parameters inside of the parentheses. To "
"define multiple parameters, you separate them with a comma."
msgstr ""
"Parametry funkce se vždy zapisují do závorek. Chcete-li definovat více "
"parametrů, oddělte je čárkou."

#: course/lesson-6-multiple-function-parameters/lesson.tres:272
#: course/lesson-6-multiple-function-parameters/lesson.tres:273
msgid "func function_name(parameter_1, parameter_2, ...):"
msgstr "func nazev_funkce(parametr_1, parametr_2, ...):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:272
msgid "func function_name(parameter_1 parameter_2 ...):"
msgstr "func nazev_funkce(parametr_1 parametr_2 ...):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:272
msgid "func function_name(): parameter_1, parameter_2, ..."
msgstr "func nazev_funkce(): parametr_1, parametr_2, ..."

#: course/lesson-6-multiple-function-parameters/lesson.tres:282
msgid ""
"Now it's your turn to create a function with multiple parameters: a function "
"to draw rectangles of any size."
msgstr ""
"Nyní je řada na vás, abyste vytvořili funkci s více parametry: funkci pro "
"kreslení obdélníků libovolné velikosti."

#: course/lesson-6-multiple-function-parameters/lesson.tres:290
msgid "Drawing corners of different sizes"
msgstr "Kreslení rohů různých velikostí"

#: course/lesson-6-multiple-function-parameters/lesson.tres:291
msgid ""
"Before we create a rectangle of any size, let's first see how we can use "
"parameters to draw simpler shapes.\n"
"\n"
"Here we have an incomplete function that will draw corners with lines of any "
"length, but it's missing its [code]length[/code] parameter.\n"
"\n"
"The function will move the turtle forward an amount defined by the parameter "
"[code]length[/code], turn [code]90[/code] degrees, then move forward "
"[code]length[/code] pixels.\n"
"\n"
"Complete the [code]draw_corner()[/code] function so it uses the "
"[code]length[/code] parameter to draw corners."
msgstr ""
"Než vytvoříme obdélník libovolné velikosti, podívejme se nejprve, jak můžeme "
"pomocí parametrů nakreslit jednodušší tvary.\n"
"\n"
"Zde máme neúplnou funkci, která bude kreslit rohy s čarami libovolné délky, "
"ale chybí jí parametr [code]length[/code].\n"
"\n"
"Funkce posune želvu dopředu o množství definované parametrem [code]length[/"
"code], otočí o [code]90[/code] stupňů a pak se posune dopředu [code]length[/"
"code] pixelů.\n"
"\n"
"Dokončete funkci [code]draw_corner()[/code], aby k kreslení rohů používala "
"parametr [code]length[/code]."

#: course/lesson-6-multiple-function-parameters/lesson.tres:309
msgid ""
"Using function parameters, code a function you can reuse to draw corners "
"with lines of varying sizes."
msgstr ""
"Pomocí parametrů funkce nakódujte funkci, kterou můžete opakovaně použít k "
"vykreslování rohů s čarami různých velikostí."

#: course/lesson-6-multiple-function-parameters/lesson.tres:314
msgid "Using multiple parameters"
msgstr "Použití více parametrů"

#: course/lesson-6-multiple-function-parameters/lesson.tres:315
msgid ""
"In this practice, we'll improve our [code]draw_corner()[/code] function so "
"the angle can also vary.\n"
"\n"
"Add the [code]angle[/code] parameter after the [code]length[/code] parameter "
"in the [code]draw_corner()[/code] function and use it to draw corners of "
"varying angles."
msgstr ""
"V tomto praktickém cvičení vylepšíme naši funkci [code]draw_corner()[/code] "
"tak, aby se úhel mohl také měnit.\n"
"\n"
"Přidejte parametr [code] angle[/code] za parametr [code] length[/code] ve "
"funkci [code]draw_corner()[/code] a použijte ji k vykreslování rohů o "
"různých úhlech."

#: course/lesson-6-multiple-function-parameters/lesson.tres:329
msgid "With two parameters, code a function to draw corners with any angle."
msgstr ""
"S pomocí dvou parametrů nakódujte funkci, která vykreslí rohy s libovolným "
"úhlem."

#: course/lesson-6-multiple-function-parameters/lesson.tres:334
msgid "Drawing squares of any size"
msgstr "Kreslení čtverců libovolné velikosti"

#: course/lesson-6-multiple-function-parameters/lesson.tres:335
msgid ""
"We want a function to draw squares of any size.\n"
"\n"
"We could use these squares as outlines when selecting units in a tactical "
"game, as a frame for items in an inventory, and more.\n"
"\n"
"Create a function named [code]draw_square()[/code] that takes one parameter: "
"the [code]length[/code] of the square's sides.\n"
"\n"
"[b]The turtle should face towards the right when starting or completing a "
"square.[/b]\n"
"\n"
"Be sure to call [b]turn_right(90)[/b]  enough times in your function to do "
"so."
msgstr ""
"Chceme funkci, která kreslí čtverce libovolné velikosti.\n"
"\n"
"Tyto čtverce bychom mohli použít jako obrysy při výběru jednotek v taktické "
"hře, jako rámeček pro položky v inventáři a další.\n"
"\n"
"Vytvořte funkci s názvem [code]draw_square()[/code], která má jeden "
"parametr: [code]length[/code] - délka strany čtverce.\n"
"\n"
"[b] Želva by měla směřovat doprava při zahájení a po dokončení čtverce. [/"
"b]\n"
"\n"
"Nezapomeňte proto zavolat [b]turn_right(90)[/b] ve vaší funkci dostatečně "
"často."

#: course/lesson-6-multiple-function-parameters/lesson.tres:352
msgid ""
"In the previous lesson, your function would draw squares of a fixed size. "
"Using a parameter, code a function to draw squares of any size."
msgstr ""
"V předchozí lekci vaše funkce vykreslovala čtverce s pevnou velikostí. "
"Pomocí parametru nakódujte funkci, která vykreslí čtverce libovolné "
"velikosti."

#: course/lesson-6-multiple-function-parameters/lesson.tres:357
msgid "Drawing rectangles of any size"
msgstr "Kreslení obdélníků libovolné velikosti"

#: course/lesson-6-multiple-function-parameters/lesson.tres:358
msgid ""
"Let's make our square drawing function more flexible to include rectangles "
"of varying sizes.\n"
"\n"
"Your job is to code a function named [code]draw_rectangle()[/code] that "
"takes two parameters: the [code]length[/code] and the [code]height[/code] of "
"the rectangle.\n"
"\n"
"[b]The turtle should face towards the right when starting or completing a "
"rectangle.[/b]\n"
"\n"
"Note that we could still draw a square with [code]draw_rectangle()[/code] by "
"having the [code]length[/code] and [code]height[/code] equal the same value."
msgstr ""
"Udělejme naši funkci čtvercového kreslení flexibilnější, aby zahrnovala "
"obdélníky různých velikostí.\n"
"\n"
"Vaším úkolem je naprogramovat funkci s názvem [code]draw_rectangle()[/code], "
"která má dva parametry: [code]length[/code] a [code]height[/code] - délka a "
"výška obdélníku.\n"
"\n"
"[b] Želva by měla směřovat doprava při zahájení a po dokončení obdélníku. [/"
"b]\n"
"\n"
"Všimněte si, že bychom stále mohli nakreslit čtverec s [code]draw_rectangle()"
"[/code] tím, že [code]length[/code] a [code]height[/code] budou mít stejnou "
"hodnotu."

#: course/lesson-6-multiple-function-parameters/lesson.tres:381
msgid ""
"With one parameter, you can make squares of any size. With two, you can draw "
"any rectangle! You'll do so in this practice."
msgstr ""
"Pomocí jednoho parametru můžete vytvořit čtverce libovolné velikosti. Se "
"dvěma můžete nakreslit libovolný obdélník! Zkusíte si to v tomto cvičení."

#: course/lesson-6-multiple-function-parameters/lesson.tres:385
msgid "Your First Function Parameter"
msgstr "Váš první parametr funkce"
