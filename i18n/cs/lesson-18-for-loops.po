# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2024-09-09 21:37+0000\n"
"Last-Translator: Prem\n"
"Language-Team: Czech <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-18-for-loops/cs/>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\n"
"X-Generator: Weblate 5.7.2\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-18-for-loops/lesson.tres:14
msgid ""
"In the last lesson, we looked at [code]while[/code] loops. We found they "
"were useful if we don't know how many times we should repeat code. \n"
"\n"
"However, they could result in infinite loops if we're not careful.\n"
"\n"
"The loop below never ends because we never increment [code]number[/code]."
msgstr ""
"V minulé lekci jsme se zabývali cykly [code]while[/code]. Zjistili jsme, že "
"jsou užitečné, pokud nevíme, kolikrát máme kód opakovat.\n"
"\n"
"Mohou však vést k nekonečným smyčkám, pokud si nedáme pozor.\n"
"\n"
"Níže uvedená smyčka nikdy neskončí, protože nikdy neinkrementujeme "
"[code]number[/code]."

#: course/lesson-18-for-loops/lesson.tres:38
msgid ""
"There's a safer and often easier kind of loop: the [code]for[/code] loop.\n"
"\n"
"We'll look at it in this lesson.\n"
"\n"
"Unlike [code]while[/code] loops, [code]for[/code] loops don't run "
"infinitely, so it's much less likely that you'll get bugs in your game. "
"[b]We recommend favoring for loops over while loops because of this[/b].\n"
"\n"
"Let's change the code above to use a [code]for[/code] loop instead.\n"
"\n"
"The loop below will change the [code]cell[/code] three times."
msgstr ""
"Existuje bezpečnější a často jednodušší druh smyčky: [code]for[/code].\n"
"\n"
"V této lekci se na ni podíváme.\n"
"\n"
"Na rozdíl od smyček [code]while[/code] neběží smyčky [code]for[/code] do "
"nekonečna, takže je mnohem méně pravděpodobné, že se ve hře objeví chyby. "
"[b]Doporučujeme upřednostňovat smyčky for před smyčkami while právě z tohoto "
"důvodu[/b].\n"
"\n"
"Změňme výše uvedený kód tak, aby místo něj používal smyčku [code]for[/"
"code].\n"
"\n"
"Níže uvedená smyčka změní [code]cell[/code] třikrát."

#: course/lesson-18-for-loops/lesson.tres:66
msgid "Let's explain what's going on here."
msgstr "Pojďme si vysvětlit, co se tu děje."

#: course/lesson-18-for-loops/lesson.tres:74
msgid "The range() function"
msgstr "Funkce range()"

#: course/lesson-18-for-loops/lesson.tres:76
msgid ""
"Godot has the helper function [code]range()[/code]. Calling [code]range(n)[/"
"code] creates a list of numbers from [code]0[/code] to [code]n - 1[/code]. \n"
"\n"
"So calling [code]range(3)[/code] outputs the list of numbers [code][0, 1, 2]"
"[/code], and [code]range(5)[/code] outputs [code][0, 1, 2, 3, 4][/code]."
msgstr ""
"Godot má pomocnou funkci [code]range()[/code]. Voláním [code]range(n)[/code] "
"se vytvoří seznam čísel od [code]0[/code] do [code]n - 1[/code]. \n"
"\n"
"Takže voláním [code]range(3)[/code] vznikne seznam čísel [code][0, 1, "
"2][/code], a voláním [code]range(5)[/code] vznikne [code][0, 1, 2, 3, "
"4][/code]."

#: course/lesson-18-for-loops/lesson.tres:86
msgid "What list of numbers would range(6) create?"
msgstr "Jaký seznam čísel by vytvořila funkce range(6)?"

#: course/lesson-18-for-loops/lesson.tres:87
msgid "What would [code]print(range(6))[/code] print to the console?"
msgstr "Co by [code]print(range(6))[/code] vypsal do konzoly?"

#: course/lesson-18-for-loops/lesson.tres:89
msgid ""
"The function [code]range(n)[/code] creates a list of numbers from [code]0[/"
"code] to [code]n - 1[/code]. The output list will start with [code]0[/code] "
"and end with [code]5[/code].\n"
"\n"
"So calling [code]range(6)[/code] will output a list of six numbers which are "
"[code][0, 1, 2, 3, 4, 5][/code].\n"
msgstr ""
"Funkce [code]range(n)[/code] vytvoří seznam čísel od [code]0[/code] do "
"[code]n - 1[/code]. Výstupní seznam bude začínat [code]0[/code] a končit "
"[code]5[/code].\n"
"\n"
"Voláním [code]range(6)[/code] se tedy vypíše seznam šesti čísel, která jsou "
"[code][0, 1, 2, 3, 4, 5][/code].\n"

#: course/lesson-18-for-loops/lesson.tres:93
#: course/lesson-18-for-loops/lesson.tres:94
msgid "[0, 1, 2, 3, 4, 5]"
msgstr "[0, 1, 2, 3, 4, 5]"

#: course/lesson-18-for-loops/lesson.tres:93
msgid "[1, 2, 3, 4, 5, 6]"
msgstr "[1, 2, 3, 4, 5, 6]"

#: course/lesson-18-for-loops/lesson.tres:93
msgid "[0, 1, 2, 3, 4, 5, 6]"
msgstr "[0, 1, 2, 3, 4, 5, 6]"

#: course/lesson-18-for-loops/lesson.tres:101
msgid "How for loops work"
msgstr "Jak funguje smyčka for"

#: course/lesson-18-for-loops/lesson.tres:103
msgid ""
"In a [code]for[/code] loop, the computer takes each value inside a list, "
"stores it in a temporary variable, and executes the code in the loop once "
"per value."
msgstr ""
"Ve smyčce [code]for[/code] počítač vezme každou hodnotu uvnitř seznamu, "
"uloží ji do pomocné proměnné a pro každou jednu hodnotu provede kód ve "
"smyčce."

#: course/lesson-18-for-loops/lesson.tres:123
msgid ""
"In the above example, for each item in the list [code][0, 1, 2][/code], "
"Godot sets [code]number[/code] to the item, then executes the code in the "
"[code]for[/code] loop.\n"
"\n"
"We'll explain arrays more thoroughly in the next lesson, but notice that "
"[code]number[/code] is just a temporary variable. You create it when "
"defining the loop, and the loop takes care of changing its value. Also, you "
"can name this variable anything you want.\n"
"\n"
"This code behaves the same as the previous example:"
msgstr ""
"Ve výše uvedeném příkladu Godot pro každou položku v seznamu [code][0, 1, "
"2][/code], nastaví proměnnou [code]number[/code] na danou položku a poté "
"provede kód ve [code]for[/code] bloku.\n"
"\n"
"Co je to Pole si podrobněji vysvětlíme v příští lekci, ale všimněte si, že "
"[code]číslo[/code] je pouze dočasná proměnná. Vytvoříte ji při definování "
"cyklu a cyklus se postará o změnu její hodnoty. Také tuto proměnnou můžete "
"pojmenovat, jak chcete.\n"
"\n"
"Následující kód se chová stejně jako předchozí příklad:"

#: course/lesson-18-for-loops/lesson.tres:147
msgid ""
"In both examples, we print the value of the temporary variable we created: "
"[code]number[/code] in the first example and [code]element[/code] in the "
"second.\n"
"\n"
"As Godot moves through the loop, it assigns each value of the array to that "
"variable. First, it sets the variable to [code]0[/code], then to [code]1[/"
"code], and finally, to [code]2[/code].\n"
"\n"
"We can break down the instructions the loop runs. You can see how a loop is "
"a shortcut to code that otherwise gets very long."
msgstr ""
"V obou příkladech vypíšeme hodnotu vytvořené dočasné proměnné: "
"[code]number[/code] v prvním příkladu a [code]element[/code] ve druhém.\n"
"\n"
"Když Godot prochází smyčkou, přiřazuje každou hodnotu pole dané proměnné. "
"Nejprve nastaví proměnné hodnotu [code]0[/code], poté hodnotu [code]1[/code] "
"a nakonec hodnotu [code]2[/code].\n"
"\n"
"Můžeme rozdělit instrukce, které smyčka provádí. Vidíte, jak smyčka zkracuje "
"kód, který by jinak byl velmi dlouhý."

#: course/lesson-18-for-loops/lesson.tres:171
msgid ""
"We can put whatever code we like in the loop's code block, including other "
"function calls like [code]draw_rectangle()[/code]."
msgstr ""
"Do bloku kódu se smyčkou můžeme vložit libovolný kód, včetně volání dalších "
"funkcí, například [code]draw_rectangle()[/code]."

#: course/lesson-18-for-loops/lesson.tres:179
msgid "Using a for loop instead of a while loop"
msgstr "Použití cyklu for místo cyklu while"

#: course/lesson-18-for-loops/lesson.tres:181
msgid ""
"Here's our old [code]move_to_end()[/code] function which used a [code]while[/"
"code] loop."
msgstr ""
"Zde je naše stará funkce [code]move_to_end()[/code], která předtím používala "
"cyklus [code]while[/code]."

#: course/lesson-18-for-loops/lesson.tres:201
msgid ""
"If we use a [code]for[/code] loop instead, the code becomes a little simpler."
msgstr ""
"Pokud místo toho použijeme smyčku [code]for[/code], kód se trochu zjednoduší."

#: course/lesson-18-for-loops/lesson.tres:221
msgid ""
"Rather than constantly checking if the robot reached the end of the board, "
"with the [code]for[/code] loop, we take the board's width beforehand, then "
"move the robot a set amount of times.\n"
"\n"
"The function still works the same. You can execute it below."
msgstr ""
"Namísto neustálé kontroly, zda robot dosáhl konce hrací plochy, pomocí "
"smyčky [code]for[/code] předem vezmeme šířku desky a poté robotem pohybujeme "
"stanovený počet opakování.\n"
"\n"
"Funkce funguje stále stejně. Můžete ji spustit níže."

#: course/lesson-18-for-loops/lesson.tres:243
msgid ""
"In the practices, we'll use [code]for[/code] loops in different ways to get "
"you used to using them."
msgstr ""
"V cvičeních budeme používat [code]for[/code] cykly různými způsoby, abyste "
"si na jejich používání zvykli."

#: course/lesson-18-for-loops/lesson.tres:251
msgid "Using a for loop to move to the end of the board"
msgstr "Použití smyčky for k přesunu na konec desky"

#: course/lesson-18-for-loops/lesson.tres:252
msgid ""
"Once again, the robot has decided to stand at the top of the board.\n"
"\n"
"This time, use a [code]for[/code] loop in the [code]move_to_bottom()[/code] "
"function to have it move to the bottom of the board.\n"
"\n"
"The board size is determined by the [code]Vector2[/code] variable "
"[code]board_size[/code].\n"
"\n"
"The robot's starting cell is [code]Vector2(2, 0)[/code]."
msgstr ""
"Robot se opět rozhodl postavit na vrchol šachovnice.\n"
"\n"
"Tentokrát použijte smyčku [code]for[/code] ve funkci "
"[code]move_to_bottom()[/code], aby se přesunul na spodní část desky.\n"
"\n"
"Velikost desky je určena proměnnou [code] board_size[/code] typu "
"[code]Vector2[/code].\n"
"\n"
"Počáteční buňka robota je [code]Vector2(2, 0)[/code]."

#: course/lesson-18-for-loops/lesson.tres:268
msgid ""
"Use a for loop to have our robot move from the top of the board to the "
"bottom."
msgstr ""
"Použijte smyčku for, aby se náš robot pohyboval z horní části desky do dolní."

#: course/lesson-18-for-loops/lesson.tres:273
msgid "Improving code with a for loop"
msgstr "Vylepšení kódu pomocí smyčky for"

#: course/lesson-18-for-loops/lesson.tres:274
msgid ""
"Use a [code]for[/code] loop to remove the duplicate code in the [code]run()[/"
"code] function.\n"
"\n"
"In this practice, we revisit the turtle and drawing rectangles.\n"
"\n"
"With our new knowledge of [code]for[/code] loops, we can condense this code "
"to take up less space and make it easier to modify.\n"
"\n"
"The turtle should draw three squares in a horizontal line. The squares "
"should be 100 pixels apart."
msgstr ""
"Pomocí smyčky [code]for[/code] odstraňte duplicitní kód ve funkci [code]run()"
"[/code].\n"
"\n"
"V tomto cvičení se vrátíme k želvě a kreslení obdélníků.\n"
"\n"
"Díky novým znalostem o cyklech [code]for[/code] můžeme tento kód zestručnit, "
"aby zabíral méně místa a dal se snadněji upravovat.\n"
"\n"
"Želva by měla nakreslit tři čtverce ve vodorovné linii. Čtverce by měly být "
"od sebe vzdáleny 100 pixelů."

#: course/lesson-18-for-loops/lesson.tres:297
msgid ""
"In the past we had to copy and paste code to draw multiple rectangles. Let's "
"revisit previous code and improve it with a for loop."
msgstr ""
"Dříve jsme museli kopírovat a vkládat kód, abychom nakreslili více "
"obdélníků. Vraťme se k předchozímu kódu a vylepšeme ho pomocí smyčky for."

#: course/lesson-18-for-loops/lesson.tres:301
msgid "Introduction to For Loops"
msgstr "Úvod do smyček For"
