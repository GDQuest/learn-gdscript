# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2022-03-26 17:50+0100\n"
"PO-Revision-Date: 2022-06-16 09:17+0000\n"
"Last-Translator: Roman Rous <roman.rous@atlas.cz>\n"
"Language-Team: Czech <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-20-looping-over-arrays/cs/>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\n"
"X-Generator: Weblate 4.13-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-20-looping-over-arrays/lesson.tres:14
msgid ""
"We used the [code]range()[/code] function in combination with "
"[code]for[/code] loops."
msgstr ""
"Použili jsme funkci [code]range()[/code] v kombinaci s cykly "
"[code]for[/code]."

#: course/lesson-20-looping-over-arrays/lesson.tres:34
msgid ""
"The [code]range()[/code] function produced an array that the "
"[code]for[/code] keyword could loop over.\n"
"\n"
"We can give [code]for[/code] loops [i]any[/i] array, and they will loop "
"over them just the same.\n"
"\n"
"Instead of using the [code]range()[/code] function, we could manually "
"write the numbers and get the same result."
msgstr ""
"Funkce [code]range()[/code] vytvořila pole, nad nímž může cyklus "
"[code]for[/code] procházet.\n"
"\n"
"[code]for[/code] cyklu můžeme předat [i] libovolné[/i] pole, cyklus jej "
"stejným způsobem projde.\n"
"\n"
"Místo použití funkce [code]range()[/code] bychom mohli čísla zapsat ručně a "
"získat stejný výsledek."

#: course/lesson-20-looping-over-arrays/lesson.tres:58
msgid ""
"For each element inside the array, the [code]for[/code] loop extracts it,"
" stores it in the temporary variable named [code]number[/code], and "
"executes the loop's code once.\n"
"\n"
"Inside the loop, you can access the [code]number[/code] variable, which "
"changes on each [i]iteration[/i].\n"
"\n"
"The code works regardless of the array or where you store it. Often, you "
"will store arrays in variables for easy access."
msgstr ""
"Každý prvek uvnitř pole cyklus [code]for[/code] extrahuje, uloží do dočasné "
"proměnné [code]number[/code] a jednou provede kód cyklu.\n"
"\n"
"Uvnitř cyklu můžete přistupovat k proměnné [code]number[/code], která se "
"mění při každé [i]iteraci[/i].\n"
"\n"
"Kód funguje bez ohledu na pole nebo místo jeho uložení. Často ukládáte pole "
"do proměnných pro snadný přístup."

#: course/lesson-20-looping-over-arrays/lesson.tres:80
msgid "What will this code print?"
msgstr "Co tento kód zobrazí?"

#: course/lesson-20-looping-over-arrays/lesson.tres:81
msgid ""
"[code]var numbers = [0, 1, 2]\n"
"for number in numbers:\n"
"    print(number)\n"
"[/code]"
msgstr ""
"[code]var numbers = [0, 1, 2]\n"
"for number in numbers:\n"
"    print(number)\n"
"[/code]"

#: course/lesson-20-looping-over-arrays/lesson.tres:86
msgid ""
"Compared to previous examples, we store the array in the "
"[code]numbers[/code] variable. Using the [code]numbers[/code] variable in"
" our [code]for[/code] loop allows the computer to access the array of "
"numbers like before.\n"
"\n"
"We have three numbers in the array: [code]0[/code], [code]1[/code], and "
"[code]2[/code].\n"
"\n"
"The loop extracts each of them sequentially and assigns it to the "
"[code]number[/code] temporary variable. As the loop processes each "
"number, the output will print [code]0[/code], then [code]1[/code], then "
"[code]2[/code], each on a separate line."
msgstr ""
"Ve srovnání s předchozími příklady ukládáme pole do proměnné "
"[code]numbers[/code]. Použití proměnné [code]numbers[/code] v naší smyčce "
"[code]for[/code] umožňuje počítači přístup k poli čísel jako dříve.\n"
"\n"
"V poli máme tři čísla: [code]0[/code], [code]1[/code] a [code]2[/code].\n"
"\n"
"Smyčka extrahuje každou z nich postupně a přiřadí ji k dočasné proměnné "
"[code]number[/code]. Jak smyčka zpracovává každé číslo, výstup se vytiskne "
"čísla [code]0[/code], pak [code]1[/code], pak [code]2[/code], každé na "
"samostatném řádku."

#: course/lesson-20-looping-over-arrays/lesson.tres:91
#: course/lesson-20-looping-over-arrays/lesson.tres:92
msgid "0, 1, and 2"
msgstr "0, 1 a 2"

#: course/lesson-20-looping-over-arrays/lesson.tres:91
msgid "1, 2, and 3"
msgstr "1, 2 a 3"

#: course/lesson-20-looping-over-arrays/lesson.tres:91
msgid "0, 0, and 0"
msgstr "0, 0 a 0"

#: course/lesson-20-looping-over-arrays/lesson.tres:99
msgid "Making the turtle walk, with a loop"
msgstr "Chůze želvy se smyčkou"

#: course/lesson-20-looping-over-arrays/lesson.tres:101
msgid ""
"In the previous lesson, you made a turtle walk along a path by writing "
"[code]Vector2[/code] coordinates in an array."
msgstr ""
"V předchozí lekci jste vytvořili želvu, která se prochází po cestě tak, že "
"jste do pole zapsali souřadnice [code]Vector2[/code]."

#: course/lesson-20-looping-over-arrays/lesson.tres:121
msgid ""
"It's a [code]for[/code] loop that makes the turtle walk along the path.\n"
"\n"
"The loop works like this: for each coordinate in the array, it moves the "
"turtle once to that cell."
msgstr ""
"Je to smyčka [code]for[/code], která způsobuje, že želva chodí po cestě.\n"
"\n"
"Smyčka funguje takto: pro každou souřadnici v poli přesune želvu jednou do "
"této buňky."

#: course/lesson-20-looping-over-arrays/lesson.tres:143
msgid "It's the same principle with unit selection."
msgstr "Stejný princip platí i pro výběr jednotek."

#: course/lesson-20-looping-over-arrays/lesson.tres:163
msgid ""
"For each coordinate in an array named [code]selected_units[/code], we "
"check if there is a unit in that cell. If so, we select it. \n"
"\n"
"In that case, we use an array, a loop, and a condition together."
msgstr ""
"Pro každou souřadnici v poli s názvem [code]selected_units[/code] "
"zkontrolujeme, zda se v dané buňce nachází jednotka. Pokud ano, vybereme ji."
"\n"
"\n"
"V takovém případě použijeme společně pole, cyklus a podmínku."

#: course/lesson-20-looping-over-arrays/lesson.tres:185
msgid ""
"The code above uses several features you haven't learned yet:\n"
"\n"
"- In a condition, the [code]in[/code] keyword allows you to check if a "
"value exists [i]in[/i] an array.\n"
"- The array's [code]append()[/code] function appends a new value at the "
"end of the array.\n"
"\n"
"Notice the use of a period after the [code]selected_units[/code] "
"variable, to call the [code]append()[/code] function. It's because this "
"function exists only on arrays.\n"
"\n"
"When functions exist only on a specific value type, you write a dot after"
" the value to call the function on it.\n"
"\n"
"We'll revisit those two features again in the following lessons."
msgstr ""
"Výše uvedený kód používá několik funkcí, které jste se ještě nenaučili:\n"
"\n"
"- V podmínce vám klíčové slovo [code]in[/code] umožňuje zkontrolovat, zda "
"existuje hodnota [i]v[/i] v poli.\n"
"- Funkce pole [code]append()[/code] připojí novou hodnotu na konec pole.\n"
"\n"
"Všimněte si použití tečky za proměnnou [code]selected_units[/code] pro "
"volání funkce [code]append()[/code]. Je to proto že tuto funkci lze volat "
"pouze z pole.\n"
"\n"
"Pokud funkce existují pouze na určitém typu hodnoty, napíšete za "
"identifikátorem hodnoty(proměnná, funkce) tečku, aby se funkce na ní "
"zavolala.\n"
"\n"
"K těmto dvěma funkcím se znovu vrátíme v následujících lekcích."

#: course/lesson-20-looping-over-arrays/lesson.tres:204
msgid ""
"The beauty of loops is that they work regardless of the size of your "
"arrays. \n"
"\n"
"The code just works whether you have one or ten thousand units to select."
" It is all accomplished with only a couple lines of code.\n"
"\n"
"That's the power of computer programming.\n"
"\n"
"In the following practices, you will use arrays combined with "
"[code]for[/code] loops to achieve similar results."
msgstr ""
"Krása smyček spočívá v tom, že fungují bez ohledu na velikost pole.\n"
"\n"
"Kód prostě funguje, ať už máte na výběr jednu nebo deset tisíc jednotek. "
"Toho všeho je dosaženo pomocí pouhých několika řádků kódu.\n"
"\n"
"V tom je síla počítačového programování.\n"
"\n"
"V následujících postupech budete k dosažení podobných výsledků používat pole "
"v kombinaci s cykly [code]for[/code]."

#: course/lesson-20-looping-over-arrays/lesson.tres:218
msgid "Move the robot along the path"
msgstr "Pohyb robota po cestě"

#: course/lesson-20-looping-over-arrays/lesson.tres:219
msgid ""
"Our AI pathfinding algorithm provided a path for the robot to move to the"
" right edge of the grid. Your task is to use a [code]for[/code] loop to "
"make the robot move.\n"
"\n"
"To move the robot, call [i]its[/i] [code]move_to()[/code] function, like "
"so: [code]robot.move_to()[/code].\n"
"\n"
"The [code]move_to()[/code] function only exists on the robot, which is "
"why you need to access it this way."
msgstr ""
"Náš algoritmus pro hledání cesty s umělou inteligencí určil robotovi cestu k "
"pravému okraji mřížky. Vaším úkolem je pomocí smyčky [code]for[/code] přimět "
"robota k pohybu.\n"
"\n"
"Chcete-li robota přesunout, zavolejte [i]jeho[/i] funkci "
"[code]move_to()[/code], a to takto: [code]robot.move_to()[/code].\n"
"\n"
"Funkce [code]move_to()[/code] existuje pouze na robotovi, a proto k ní "
"musíte přistupovat tímto způsobem."

#: course/lesson-20-looping-over-arrays/lesson.tres:235
msgid ""
"Our AI pathfinding algorithm is giving us a path to move the robot. Now, "
"you need to make the turtle move along the path."
msgstr ""
"Náš algoritmus pro hledání cesty s umělou inteligencí nám určuje cestu, po "
"které se má robot pohybovat. Nyní je třeba, aby se po této cestě pohybovala "
"želva."

#: course/lesson-20-looping-over-arrays/lesson.tres:240
msgid "Back to the drawing board"
msgstr "Zpět k rýsovacímu prknu"

#: course/lesson-20-looping-over-arrays/lesson.tres:241
msgid ""
"We want to draw many rectangles, something surprisingly common in games.\n"
"\n"
"However, writing this code by hand can get tedious. Instead, you could "
"store the size of your shapes in arrays and use a loop to draw them all "
"in batches.\n"
"\n"
"That's what you'll do in this practice.\n"
"\n"
"Use a [code]for[/code] loop to draw every rectangle in the "
"[code]rectangle_sizes[/code] array with the [code]draw_rectangle()[/code]"
" function.\n"
"\n"
"The rectangles shouldn't overlap or cross each other. To avoid that, "
"you'll need to call the [code]jump()[/code] function."
msgstr ""
"Chceme nakreslit mnoho obdélníků, což je ve hrách překvapivě běžné.\n"
"\n"
"Psaní tohoto kódu ručně však může být zdlouhavé. Místo toho můžete ukládat "
"velikosti tvarů do polí a pomocí smyčky je všechny nakreslit v dávkách.\n"
"\n"
"Zkusíme si to v tomto cvičení.\n"
"\n"
"Pomocí smyčky [code]for[/code] nakreslete každý obdélník v poli "
"[code]rectangle_sizes[/code] pomocí funkce [code]draw_rectangle()[/code].\n"
"\n"
"Obdélníky by se neměly překrývat ani křížit. Abyste tomu zabránili, musíte "
"volat funkci [code]jump()[/code]."

#: course/lesson-20-looping-over-arrays/lesson.tres:261
msgid ""
"The drawing turtle makes its comeback. Fear not! Armed with loops, you'll"
" make it draw faster than ever before."
msgstr ""
"Kreslící želva se vrací na scénu. Neboj se! Vyzbrojeni smyčkami, budete "
"kreslit rychleji než kdy předtím."

#: course/lesson-20-looping-over-arrays/lesson.tres:265
msgid "Looping over arrays"
msgstr "Smyčka v poli hodnot"
