# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# Automatically generated, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2025-06-14 15:02+0200\n"
"PO-Revision-Date: 2023-06-07 21:52+0000\n"
"Last-Translator: EGuillemot <Elouen.Guillemot@gmail.com>\n"
"Language-Team: French <https://hosted.weblate.org/projects/learn-gdscript-"
"from-zero/glossary_database/fr/>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 4.18-dev\n"
"Generated-By: Babel 2.9.1\n"

#. Reference: member function
#: course/glossary.csv:6
msgid "member function"
msgstr "fonction membre"

#. Reference: member function
#: course/glossary.csv:6
msgid "member functions"
msgstr "fonctions membres"

#. Reference: member function
#: course/glossary.csv:6
msgid ""
"Member functions are functions attached to a specific value type, like "
"arrays, strings, or dictionaries. We also call them methods.\n"
"\n"
"For example, arrays have member functions like [code]array.append()[/code].\n"
"\n"
"You can only call the function on an array, using the access operator "
"([code].[/code]) to access it, as shown above."
msgstr ""
"Les fonctions membres sont des fonctions attachées à un type de valeur "
"spécifique, comme des tableaux, des chaînes de caractères ou des "
"dictionnaires. On les appelle aussi des méthodes.\n"
"\n"
"Par exemple, les tableaux (en anglais [i]array[/i]) ont des fonctions "
"membres comme [code]array.append()[/code].\n"
"\n"
"Vous ne pouvez appeler la fonction que sur un tableau, en utilisant "
"l'opérateur d'accès ([code].[/code]) pour y accéder, comme indiqué ci-dessus."

#. Reference: member variable
#: course/glossary.csv:9
msgid "member variable"
msgstr "variable membre"

#. Reference: member variable
#: course/glossary.csv:9
msgid "member variables"
msgstr "variables membres"

#. Reference: member variable
#: course/glossary.csv:9
msgid ""
"Member variables are variables attached to a specific value type, like a "
"vector's [code]x[/code] and [code]y[/code] sub-variables. We also call them "
"[i]properties[/i] or [i]fields[/i] of the vector.\n"
"\n"
"To access a member variable, you must first write the value's name followed "
"by the access operator ([code].[/code]). For example, [code]position.x[/"
"code]."
msgstr ""
"Les variables membres sont des variables attachées à un type de valeur "
"spécifique, comme les sous-variables [code]x[/code] et [code]y[/code] d'un "
"vecteur. On les appelle aussi [i]propriétés[/i] ou [i]champs[/i] du "
"vecteur.\n"
"\n"
"Pour accéder à une variable membre, vous devez d'abord écrire le nom de la "
"valeur suivi de l'opérateur d'accès ([code].[/code]). Par exemple, "
"[code]position.x[/code]."

#. Reference: parameter
#: course/glossary.csv:12
msgid "parameter"
msgstr "paramètre"

#. Reference: parameter
#: course/glossary.csv:12
msgid "parameters"
msgstr "paramètres"

#. Reference: parameter
#: course/glossary.csv:12
msgid ""
"A parameter is a variable you create as part of a function definition.\n"
"\n"
"It allows you to reuse the function more by having values that vary in the "
"function's body."
msgstr ""
"Un paramètre est une variable que vous créez dans le cadre de la définition "
"d'une fonction.\n"
"\n"
"Cela vous permet de réutiliser davantage la fonction en ayant des valeurs "
"qui varient dans le corps de la fonction."

#. Reference: radian
#: course/glossary.csv:17
msgid "radian"
msgstr "radian"

#. Reference: radian
#: course/glossary.csv:17
msgid "radians"
msgstr "radians"

#. Reference: radian
#: course/glossary.csv:17
msgid ""
"A radian is a unit of measurement of angles based on the circle's "
"circumference.\n"
"\n"
"We tend to use degrees more in our daily lives, but in computer programming, "
"and especially in games, radians are common.\n"
"\n"
"An angle of [code]2 * PI[/code] radians corresponds to 360 degrees. And an "
"angle of [code]PI[/code] radians corresponds to 180 degrees."
msgstr ""
"Un radian est une unité de mesure des angles basée sur la circonférence du "
"cercle.\n"
"\n"
"Nous avons tendance à utiliser davantage les degrés dans notre vie "
"quotidienne, mais en programmation informatique, et surtout dans les jeux, "
"les radians sont courants.\n"
"\n"
"Un angle de [code]2 * PI[/code] radians correspond à 360 degrés. Et un angle "
"de [code]PI[/code] radians correspond à 180 degrés."

#. Reference: type
#: course/glossary.csv:20
msgid "type"
msgstr "type"

#. Reference: type
#: course/glossary.csv:20
msgid "types"
msgstr "types"

#. Reference: type
#: course/glossary.csv:20
msgid ""
"In computer programming, a type is the class of a value. For example, whole "
"numbers like [code]3[/code], [code]11[/code], and [code]255462[/code] are "
"all of type [code]int[/code] (short for integer).\n"
"\n"
"The computer uses types to determine which operations are valid between two "
"values and when they're undefined."
msgstr ""
"En programmation informatique, un type est la classe d'une valeur. Par "
"exemple, des nombres entiers comme [code]3[/code], [code]11[/code] et "
"[code]255462[/code] sont tous de type [code]int[/code] (abréviation du mot "
"en anglais [i]integer[/i]), ce qui veut dire « entier ».\n"
"\n"
"L'ordinateur utilise les types pour déterminer quelles opérations sont "
"valides entre deux valeurs et quand elles sont indéfinies."

#. Reference: iteration
#: course/glossary.csv:23
msgid "iteration"
msgstr "itération"

#. Reference: iteration
#: course/glossary.csv:23
msgid "iterations"
msgstr "itérations"

#. Reference: iteration
#: course/glossary.csv:23
msgid ""
"In computer code, an iteration is one repetition of some process or code. We "
"typically use the term with loops, where one iteration is one run of the "
"loop's code.\n"
"\n"
"When talking of algorithms, an iteration can mean a full pass of the "
"algorithm on a data set."
msgstr ""
"Dans le code informatique, une itération est une répétition d'un processus "
"ou d'un code. Généralement, nous utilisons ce terme avec les boucles, où une "
"itération est une exécution du code de la boucle.\n"
"\n"
"Lorsqu'on parle d'algorithmes, une itération peut signifier un passage "
"complet de l'algorithme sur un ensemble de données."

#. Reference: vector
#: course/glossary.csv:28
msgid "vector"
msgstr "vecteur"

#. Reference: vector
#: course/glossary.csv:28
msgid "vectors"
msgstr "vecteurs"

#. Reference: vector
#: course/glossary.csv:28
msgid ""
"In math, a vector is a list of numbers. In games, we often use 2D and 3D "
"vectors: respectively, lists of two and three numbers.\n"
"\n"
"We use that to represent a direction and magnitude or intensity in space. "
"For example, you can use a vector to represent the direction and speed at "
"which a character or a vehicle moves.\n"
"\n"
"Vectors can seem daunting at first because they are pretty abstract, but as "
"you will see, they'll simplify code tremendously."
msgstr ""
"En mathématiques, un vecteur est une liste de nombres. Dans les jeux, nous "
"utilisons souvent des vecteurs 2D et 3D : respectivement, des listes de deux "
"et trois nombres.\n"
"\n"
"Nous les utilisons pour représenter une direction et une magnitude ou une "
"intensité dans l'espace. Par exemple, vous pouvez utiliser un vecteur pour "
"représenter la direction et la vitesse à laquelle un personnage ou un "
"véhicule se déplace.\n"
"\n"
"Les vecteurs peuvent sembler intimidants au début car ils sont assez "
"abstraits, mais comme vous le verrez, ils simplifieront énormément le code."

#. Reference: argument
#: course/glossary.csv:37
msgid "argument"
msgstr "argument"

#. Reference: argument
#: course/glossary.csv:37
msgid "arguments"
msgstr "arguments"

#. Reference: argument
#: course/glossary.csv:37
msgid ""
"An argument is a value that you pass to a function when calling the "
"function. For example, in the call [code]rotate(0.5)[/code], the value "
"[code]0.5[/code] in the parentheses is an argument.\n"
"\n"
"A function can receive no arguments, one argument, or multiple arguments. "
"Arguments can be mandatory or optional.\n"
"\n"
"When a function takes multiple arguments, you separate the values with "
"commas, like in this function call: [code]jump(50, 100)[/code]\n"
"\n"
"When [i]calling[/i] a function, we name the values passed in parentheses "
"[i]arguments[/i].\n"
"\n"
"When writing a function definition, however, we talk about function "
"[i]parameters[/i]. In the following example, the names [code]x[/code] and "
"[code]y[/code] are [i]parameters[/i]."
msgstr ""
"Un argument est une valeur que vous passez à une fonction lors de l'appel de "
"la fonction. Par exemple, dans l'appel de [code]rotate(0.5)[/code], la "
"valeur [code]0.5[/code] entre les parenthèses est un argument.\n"
"\n"
"Une fonction peut ne recevoir aucun argument, un argument ou plusieurs "
"arguments. Les arguments peuvent être obligatoires ou facultatifs.\n"
"\n"
"Lorsqu'une fonction reçoit plusieurs arguments, vous séparez les valeurs par "
"des virgules, comme dans cet appel de fonction : [code]jump(50, 100)[/code]\n"
"\n"
"Lors de [i]l'appel[/i] d'une fonction, on appelle les valeurs passées entre "
"parenthèses des [i]arguments[/i].\n"
"\n"
"Cependant, lors de l'écriture d'une définition de fonction, nous parlons des "
"[i]paramètres[/i] de la fonction. Dans l'exemple suivant, les noms [code]x[/"
"code] et [code]y[/code] sont des [i]paramètres[/i]."

#. Reference: array
#: course/glossary.csv:44
msgid "array"
msgstr "tableau"

#. Reference: array
#: course/glossary.csv:44
msgid "arrays"
msgstr "tableaux"

#. Reference: array
#: course/glossary.csv:44
msgid ""
"An array is a list of values. In GDScript, arrays can contain [i]any[/i] "
"types of value.\n"
"\n"
"To create an array, you write comma-separated values in square brackets: "
"[code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"In games, we use arrays all the time to store lists of characters in a "
"party, lists of items in inventory, lists of spells the player unlocked, and "
"so on. They're everywhere.\n"
"\n"
"Arrays are a fundamental value type in computer programming. You'll find "
"arrays in pretty much any programming language."
msgstr ""
"Un tableau (en anglais [i]array[/i]) est une liste de valeurs. Dans "
"GDScript, les tableaux peuvent contenir [i]n'importe quel[/i] type de "
"valeur.\n"
"\n"
"Pour créer un tableau, vous écrivez des valeurs séparées par des virgules "
"entre crochets : [code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"Dans les jeux, nous utilisons des tableaux tout le temps pour stocker des "
"listes de personnages dans un groupe, des listes d'objets dans l'inventaire, "
"des listes de sorts que le joueur a débloqués, etc. Ils sont partout.\n"
"\n"
"Les tableaux sont un type de valeur fondamental dans la programmation "
"informatique. Vous trouverez des tableaux dans presque tous les langages de "
"programmation."

#. Reference: assign
#: course/glossary.csv:45
msgid "assign"
msgstr "assigner"

#. Reference: assign
#: course/glossary.csv:45
msgid ""
"Assigning a value to a variable means that you store a value inside the "
"variable. You do this with the equal sign ([code]=[/code])."
msgstr ""
"Assigner une valeur à une variable signifie que vous stockez une valeur à "
"l'intérieur de la variable. Vous faites cela avec le signe égal ([code]=[/"
"code])."

#. Reference: dictionary
#: course/glossary.csv:52
msgid "dictionary"
msgstr "dictionnaire"

#. Reference: dictionary
#: course/glossary.csv:52
msgid "dictionaries"
msgstr "dictionnaires"

#. Reference: dictionary
#: course/glossary.csv:52
msgid ""
"A dictionary is a data structure that maps values with key-value pairs. When "
"you give the dictionary a key, it finds and gives you back the corresponding "
"value.\n"
"\n"
"In GDScript, keys can be many things. We often use text strings or numbers, "
"but you're not limited to that. A [code]Vector2[/code] can also be a valid "
"key, which is handy to map a grid cell to a unit or an item in a grid-based "
"game.\n"
"\n"
"You will often use dictionaries to associate bits of data in your games. For "
"example, we could use them to associate an equipment's name with its weapon "
"stats in a database.\n"
"\n"
"Like arrays, they are a fundamental data type that you will see in many "
"programming languages and use a lot."
msgstr ""
"Un dictionnaire est une structure de données qui met en correspondance, ou « "
"mappe », des valeurs avec des paires clé-valeur. Lorsque vous donnez une clé "
"au dictionnaire, il trouve et vous rend la valeur correspondante.\n"
"\n"
"Dans GDScript, les clés peuvent être plusieurs choses. Nous utilisons "
"souvent des chaînes de texte ou des nombres, mais vous n'es pas limité(e) à "
"cela. Un [code]Vector2[/code] peut aussi être une clé valide, ce qui est "
"pratique pour mapper une cellule de grille à une unité ou un élément dans un "
"jeu basé sur une grille.\n"
"\n"
"Vous utiliserez souvent des dictionnaires pour associer des données dans vos "
"jeux. Par exemple, nous pourrions les utiliser pour associer le nom d'un "
"équipement à ses statistiques dans une base de données.\n"
"\n"
"Comme les tableaux, ils sont un type de données fondamental que vous verrez "
"dans de nombreux langages de programmation et que vous utiliserez beaucoup."

#. Reference: for loop
#: course/glossary.csv:59
msgid "for loop"
msgstr "boucle for"

#. Reference: for loop
#: course/glossary.csv:59
msgid "for loops"
msgstr "boucles for"

#. Reference: for loop
#: course/glossary.csv:59
msgid ""
"A for loop instructs the computer to repeat a set of instructions once for "
"each value in an array.\n"
"\n"
"In each loop iteration, the compiler extracts one value from the array and "
"gives you access to it in the loop's body.\n"
"\n"
"For loops run code a limited amount of times: one per value in the array. It "
"is different from while loops that keep repeating code until a condition is "
"met.\n"
"\n"
"We recommend favoring for loops when you can. They're safer and easier to "
"use than while loops."
msgstr ""
"Une boucle for demande à l'ordinateur de répéter un ensemble d'instructions "
"une fois pour chaque valeur d'un tableau.\n"
"\n"
"À chaque itération de la boucle, le compilateur extrait une valeur du "
"tableau et vous y donne accès dans le corps de la boucle.\n"
"\n"
"Les boucles for exécutent le code un nombre limité de fois : une par valeur "
"du tableau. Elles sont différentes des boucles while qui continuent à "
"répéter le code jusqu'à ce qu'une condition soit remplie.\n"
"\n"
"Nous vous recommandons de privilégier les boucles for lorsque cela est "
"possible. Elles sont plus sûres et plus faciles à utiliser que les boucles "
"while."

#. Reference: function
#: course/glossary.csv:64
msgid "function"
msgstr "fonction"

#. Reference: function
#: course/glossary.csv:64
msgid "functions"
msgstr "fonctions"

#. Reference: function
#: course/glossary.csv:64
msgid ""
"A function is a group of code instructions you give a name. When you define "
"a function, you can call it any time to run all the instructions it "
"contains.\n"
"\n"
"You can modify a function's behavior with parameters. Parameters are "
"variable names that you write in the function definition. You can then use "
"them in the function's body to make your code adapt to different cases.\n"
"\n"
"Also, functions can optionally return a value to the code calling it."
msgstr ""
"Une fonction est un groupe d'instructions de code auquel vous donnez un nom. "
"Quand vous définissez une fonction, vous pouvez l'appeler à tout moment pour "
"exécuter toutes les instructions qu'elle contient.\n"
"\n"
"Vous pouvez modifier le comportement d'une fonction avec des paramètres. Les "
"paramètres sont des noms de variables que vous écrivez dans la définition de "
"la fonction. Vous pouvez ensuite les utiliser dans le corps de la fonction "
"pour adapter votre code à différents cas.\n"
"\n"
"De plus, les fonctions peuvent éventuellement retourner une valeur au code "
"qui l'appelle."

#. Reference: increment
#: course/glossary.csv:65
msgid "increment"
msgstr "incrément"

#. Reference: increment
#: course/glossary.csv:65
msgid "increments"
msgstr "incréments"

#. Reference: increment
#: course/glossary.csv:65
msgid "An increment is the amount by which a value changes in your code."
msgstr ""
"Un incrément est la quantité par laquelle une valeur change dans votre code."

#. Reference: instruction
#: course/glossary.csv:68
msgid "instruction"
msgstr "instruction"

#. Reference: instruction
#: course/glossary.csv:68
msgid "instructions"
msgstr "instructions"

#. Reference: instruction
#: course/glossary.csv:68
msgid ""
"In computer programming, instructions are a single operation the computer "
"recognizes and can execute.\n"
"\n"
"For example, a function call, an addition, or assigning a value to a "
"variable."
msgstr ""
"En programmation informatique, les instructions sont une opération unique "
"que l'ordinateur reconnaît et peut exécuter.\n"
"\n"
"Par exemple, un appel de fonction, une addition ou l'attribution d'une "
"valeur à une variable."

#. Reference: variable
#: course/glossary.csv:77
msgid "variable"
msgstr "variable"

#. Reference: variable
#: course/glossary.csv:77
msgid "variables"
msgstr "variables"

#. Reference: variable
#: course/glossary.csv:77
msgid ""
"Variables are a tool to give a name to values you want to store in your code "
"and change over time.\n"
"\n"
"For example, a character's health: when the character takes a hit, you want "
"it to go down. When healing, you want the health to go back up.\n"
"\n"
"You can create a variable named [code]health[/code] to represent the "
"health.\n"
"\n"
"Then, every time you write the keyword [code]health[/code] in your code, the "
"computer will fetch the corresponding value in its memory for you.\n"
"\n"
"Variables work a bit like product labels in a supermarket. They are names "
"that you attach to some value. Any time, you can take the label and stick it "
"onto a new product or, in that case, a new value."
msgstr ""
"Les variables sont un outil pour donner un nom aux valeurs que vous "
"souhaitez stocker dans votre code et changer au fil du temps.\n"
"\n"
"Par exemple, la santé d'un personnage : lorsque le personnage prend un coup, "
"vous voulez qu'elle diminue. Lorsque le personnage se soigne, vous voulez "
"que la santé remonte.\n"
"\n"
"Vous pouvez créer une variable nommée [code]health[/code] pour représenter "
"la santé.\n"
"\n"
"Ensuite, chaque fois que vous écrivez le mot-clé [code]health[/code] dans "
"votre code, l'ordinateur va chercher la valeur correspondante dans sa "
"mémoire pour vous.\n"
"\n"
"Les variables fonctionnent un peu comme les étiquettes des produits d'un "
"supermarché. Ce sont des noms que vous attachez à une certaine valeur. À "
"tout moment, vous pouvez prendre l'étiquette et la coller sur un nouveau "
"produit ou, dans ce cas, sur une nouvelle valeur."

#. Reference: while loop
#: course/glossary.csv:84
msgid "while loop"
msgstr "boucle while"

#. Reference: while loop
#: course/glossary.csv:84
msgid "while loops"
msgstr "boucles while"

#. Reference: while loop
#: course/glossary.csv:84
msgid ""
"A while loop instructs the computer to keep running code based on a "
"condition. While the condition is true, the loop keeps running.\n"
"\n"
"When coding while loops, you must be careful: they will keep running "
"infinitely and freeze your game if you get the condition wrong.\n"
"\n"
"That's why we recommend using the safer for loop whenever you can.\n"
"\n"
"However, there are still essential cases in which we use while loops, like "
"processing files, processing computer code, or for powerful algorithms."
msgstr ""
"Une boucle while demande à l'ordinateur de continuer à exécuter du code en "
"fonction d'une condition. Tant que la condition est vraie, la boucle "
"continue de s'exécuter.\n"
"\n"
"Lorsque vous codez des boucles while, vous devez faire attention : elles "
"continueront à s'exécuter à l'infini et gèleront votre jeu si vous vous "
"trompez de condition.\n"
"\n"
"C'est pourquoi nous vous recommandons d'utiliser la boucle for, qui est plus "
"sûre, chaque fois que vous le pouvez.\n"
"\n"
"Cependant, il existe encore des cas essentiels dans lesquels nous utilisons "
"des boucles while, comme le traitement des fichiers, le traitement du code "
"informatique ou pour les algorithmes puissants."

#. Reference: body
#: course/glossary.csv:85
msgid "body"
msgstr "corps"

#. Reference: body
#: course/glossary.csv:85
msgid ""
"We talk about a loop or a function's body to refer to the lines of code that "
"are part of the loop or function."
msgstr ""
"On parle du corps d'une boucle ou d'une fonction pour faire référence aux "
"lignes de code qui font partie de la boucle ou de la fonction."

#. Reference: return
#: course/glossary.csv:88
msgid "return"
msgstr "retour"

#. Reference: return
#: course/glossary.csv:88
msgid ""
"Returning a value is the process of sending a value to the place where you "
"call a function.\n"
"\n"
"It happens when a function uses the [code]return[/code] keyword followed by "
"a value, for example: [code]return -1[/code]."
msgstr ""
"Le retour (en anglais [i]return[/i]) d'une valeur est le processus qui "
"consiste à envoyer une valeur à l'endroit où vous appelez une fonction.\n"
"\n"
"Cela se produit lorsqu'une fonction utilise le mot-clé [code]return[/code] "
"suivi d'une valeur, par exemple : [code]return -1[/code]."

#. Reference: library
#: course/glossary.csv:89
msgid "library"
msgstr "bibliothèque"

#. Reference: library
#: course/glossary.csv:89
msgid "libraries"
msgstr "bibliothèques"

#. Reference: library
#: course/glossary.csv:89
msgid ""
"A collection of valuable and reusable code bundled together by other "
"programmers to save you time. All programmers use code libraries."
msgstr ""
"Une collection de code précieux et réutilisable regroupée par d'autres "
"programmeurs pour vous faire gagner du temps. Tous les programmeurs "
"utilisent des bibliothèques de code."

#. Reference: sprite
#: course/glossary.csv:90
msgid "sprite"
msgstr "sprite"

#. Reference: sprite
#: course/glossary.csv:90
msgid "sprites"
msgstr "sprites"

#. Reference: sprite
#: course/glossary.csv:90
msgid ""
"In computer graphics, a sprite is an image you display on the screen. We "
"generally use this word to talk about moving images, like a character, a "
"monster, or an item falling on the ground."
msgstr ""
"En infographie, un sprite est une image que vous affichez sur l'écran. On "
"utilise généralement ce mot pour parler d'images en mouvement, comme un "
"personnage, un monstre ou un objet qui tombe sur le sol."
