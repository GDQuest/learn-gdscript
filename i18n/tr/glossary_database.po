# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2025-06-14 15:02+0200\n"
"PO-Revision-Date: 2023-10-08 04:14+0000\n"
"Last-Translator: Yılmaz Durmaz <yilmaz_durmaz@hotmail.com>\n"
"Language-Team: Turkish <https://hosted.weblate.org/projects/learn-gdscript-"
"from-zero/glossary_database/tr/>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.1-dev\n"
"Generated-By: Babel 2.9.1\n"

#. Reference: member function
#: course/glossary.csv:6
msgid "member function"
msgstr "üye fonksiyon"

#. Reference: member function
#: course/glossary.csv:6
msgid "member functions"
msgstr "üye fonksiyonlar"

#. Reference: member function
#: course/glossary.csv:6
msgid ""
"Member functions are functions attached to a specific value type, like "
"arrays, strings, or dictionaries. We also call them methods.\n"
"\n"
"For example, arrays have member functions like [code]array.append()[/code].\n"
"\n"
"You can only call the function on an array, using the access operator "
"([code].[/code]) to access it, as shown above."
msgstr ""
"Üye fonksiyonlar, diziler (array), dizeler (string), ve sözlükler "
"(dictionary) gibi belirli bir değer tipine bağlanmış fonksiyonlardır. "
"Bunlara ayrıca metotlar da denilir.\n"
"\n"
"Örneğin, dizilerin [code]array.append()[/code] (arkaya ekleme) gibi üye "
"fonksiyonları vardır.\n"
"\n"
"Böyle bir fonksiyonu çalıştırmak için, mesela bir dizi üzerinden erişirken, "
"yukarıda görüldüğü gibi bir erişim işleci kullanmalısınız ([code].[/code], "
"nokta işareti)."

#. Reference: member variable
#: course/glossary.csv:9
msgid "member variable"
msgstr "üye değişken"

#. Reference: member variable
#: course/glossary.csv:9
msgid "member variables"
msgstr "üye değişkenler"

#. Reference: member variable
#: course/glossary.csv:9
msgid ""
"Member variables are variables attached to a specific value type, like a "
"vector's [code]x[/code] and [code]y[/code] sub-variables. We also call them "
"[i]properties[/i] or [i]fields[/i] of the vector.\n"
"\n"
"To access a member variable, you must first write the value's name followed "
"by the access operator ([code].[/code]). For example, [code]position.x[/"
"code]."
msgstr ""
"Üye değişkenler, belirli bir değer tipine bağlanmış değişkenlerdir; örneğin "
"bir vektörün (vector) [code]x[/code] ve [code]y[/code] alt-değişkenleri "
"gibi. Bunları ayrıca değer tipinin, mesela vektörün, [i]özellikleri[/i] veya "
"[i]alanları[/i] olarak da isimlendiririz.\n"
"\n"
"Bir üye değişkene erişmek için, önce ana değişken ismini ve ardından erişim "
"işlecini ([code].[/code], nokta işareti) yazmanız gerekir. Örneğin "
"[code]position.x[/code]."

#. Reference: parameter
#: course/glossary.csv:12
msgid "parameter"
msgstr "alınan değişken, parametre"

#. Reference: parameter
#: course/glossary.csv:12
msgid "parameters"
msgstr "alınan değişkenler, parametreler"

#. Reference: parameter
#: course/glossary.csv:12
msgid ""
"A parameter is a variable you create as part of a function definition.\n"
"\n"
"It allows you to reuse the function more by having values that vary in the "
"function's body."
msgstr ""
"Bir alınan değişken (parametre), bir fonksiyonun tanımının parçası olarak "
"oluşturulan bir değişkendir.\n"
"\n"
"Bu bize, fonksiyon içinde değişebilen farklı değerler ile fonksiyonu farklı "
"şekillerde yeniden kullanmamızı sağlar."

#. Reference: radian
#: course/glossary.csv:17
msgid "radian"
msgstr "radyan"

#. Reference: radian
#: course/glossary.csv:17
msgid "radians"
msgstr "radyan"

#. Reference: radian
#: course/glossary.csv:17
msgid ""
"A radian is a unit of measurement of angles based on the circle's "
"circumference.\n"
"\n"
"We tend to use degrees more in our daily lives, but in computer programming, "
"and especially in games, radians are common.\n"
"\n"
"An angle of [code]2 * PI[/code] radians corresponds to 360 degrees. And an "
"angle of [code]PI[/code] radians corresponds to 180 degrees."
msgstr ""
"Bir radyan, bir dairenin çevresini temel alan bir açı ölçme birimidir.\n"
"\n"
"Günlük hayatımızda daha çok \"derece\" kullanmaya meyilliyiz, ama bilgisayar "
"programcılığında ve özellikle oyunlarda, radyan daha yaygındır.\n"
"\n"
"[code]2 * PI[/code] radyanlık bir açı 360 dereceye karşılık gelir. Ve "
"[code]PI[/code] radyanlık açı da 180 derecedir."

#. Reference: type
#: course/glossary.csv:20
msgid "type"
msgstr "tip"

#. Reference: type
#: course/glossary.csv:20
msgid "types"
msgstr "tipler"

#. Reference: type
#: course/glossary.csv:20
msgid ""
"In computer programming, a type is the class of a value. For example, whole "
"numbers like [code]3[/code], [code]11[/code], and [code]255462[/code] are "
"all of type [code]int[/code] (short for integer).\n"
"\n"
"The computer uses types to determine which operations are valid between two "
"values and when they're undefined."
msgstr ""
"Bilgisayar programcılığında bir tip, bir değerin sınıfıdır. Mesela, [code]3[/"
"code], [code]11[/code], ve [code]255462[/code] gibi tam sayıların hepsi "
"[code]int[/code] (integer'ın kısaltması) tipindedir.\n"
"\n"
"Bilgisayarlar, iki değer arasında hangi işlemlerin geçerli olduğunu ve "
"bunların ne zaman tanımsız olduğunu belirlerken tipleri kullanır."

#. Reference: iteration
#: course/glossary.csv:23
msgid "iteration"
msgstr "yineleme"

#. Reference: iteration
#: course/glossary.csv:23
msgid "iterations"
msgstr "yinelemeler"

#. Reference: iteration
#: course/glossary.csv:23
msgid ""
"In computer code, an iteration is one repetition of some process or code. We "
"typically use the term with loops, where one iteration is one run of the "
"loop's code.\n"
"\n"
"When talking of algorithms, an iteration can mean a full pass of the "
"algorithm on a data set."
msgstr ""
"Bilgisayar kodunda bir yineleme, bir işlem ya da kodun bir kere "
"tekrarlamasıdır. Bu terimi genellikle döngülerde kullanırız; bir yineleme "
"döngüdeki kodun bir kere çalışmasıdır.\n"
"\n"
"Algoritmalardan bahsederken ise, bir yineleme, bir veri kümesi üzerinde "
"algoritmanın bir tam geçiş yapması anlamını taşıyabilir."

#. Reference: vector
#: course/glossary.csv:28
msgid "vector"
msgstr "vektör"

#. Reference: vector
#: course/glossary.csv:28
msgid "vectors"
msgstr "vektörler"

#. Reference: vector
#: course/glossary.csv:28
msgid ""
"In math, a vector is a list of numbers. In games, we often use 2D and 3D "
"vectors: respectively, lists of two and three numbers.\n"
"\n"
"We use that to represent a direction and magnitude or intensity in space. "
"For example, you can use a vector to represent the direction and speed at "
"which a character or a vehicle moves.\n"
"\n"
"Vectors can seem daunting at first because they are pretty abstract, but as "
"you will see, they'll simplify code tremendously."
msgstr ""
"Matematikte, bir vektör (vector) bir numara listesidir. Oyunlarda, "
"genellikle 2B ve 3B vektörleri kullanırız; yani iki ve üç numaradan oluşan "
"listeler.\n"
"\n"
"Bunları, yön ve büyüklüğü ya da uzaysal yoğunluğu betimlemek için "
"kullanırız. Örneğin, bir karakter ya da aracın hareket yönünü ve hızını "
"betimlerken bir vektör kullanırız.\n"
"\n"
"Vektörler, oldukça soyut olduklarından, ilk başta biraz caydırıcı "
"olabilirler, ama ilerde göreceğiniz gibi, kodumuzu dehşet seviyede "
"basitleştirirler."

#. Reference: argument
#: course/glossary.csv:37
msgid "argument"
msgstr "girilen değişken, girdi değişkeni, argüman"

#. Reference: argument
#: course/glossary.csv:37
msgid "arguments"
msgstr "girilen değişkenler, girdi değişkenleri, argümanlar"

#. Reference: argument
#: course/glossary.csv:37
msgid ""
"An argument is a value that you pass to a function when calling the "
"function. For example, in the call [code]rotate(0.5)[/code], the value "
"[code]0.5[/code] in the parentheses is an argument.\n"
"\n"
"A function can receive no arguments, one argument, or multiple arguments. "
"Arguments can be mandatory or optional.\n"
"\n"
"When a function takes multiple arguments, you separate the values with "
"commas, like in this function call: [code]jump(50, 100)[/code]\n"
"\n"
"When [i]calling[/i] a function, we name the values passed in parentheses "
"[i]arguments[/i].\n"
"\n"
"When writing a function definition, however, we talk about function "
"[i]parameters[/i]. In the following example, the names [code]x[/code] and "
"[code]y[/code] are [i]parameters[/i]."
msgstr ""
"Bir girilen değişken (argüman), bir fonksiyonu çağırırken, fonksiyona "
"girdiğiniz değerlerdir. Örneğin, [code]rotate(0.5)[/code] çağırmasında, "
"parantez içindeki [code]0.5[/code] değeri bir girilen değişkendir.\n"
"\n"
"Bir fonksiyon hiçbir değer almayabileceği gibi, tek bir değer ya da çoklu "
"değerler de alabilir. Girilen değişkenler zorunlu ya da isteğe bağlı "
"olabilirler.\n"
"\n"
"Bir fonksiyon çoklu değerler bekliyorsa, değerleri virgül ile ayırmalısınız; "
"mesela bu çağrıda olduğu gibi [code]jump(50, 100)[/code]\n"
"\n"
"Bir fonksiyonu [i]çağırırken[/i], parantez içine girdiğimiz değerlere "
"[i]girilen değişken (argüman)[/i] ismini veriyoruz.\n"
"\n"
"Buna karşılık, bir fonksiyon tanımını yazarken, fonksiyonun [i]alınan "
"değişkenleri (parameterler)[/i]'nden bahsederiz. Sıradaki örnekte, [code]x[/"
"code] ve [code]y[/code] [i]alınan değişken (parametre)[/i]'lerdir."

#. Reference: array
#: course/glossary.csv:44
msgid "array"
msgstr "dizi"

#. Reference: array
#: course/glossary.csv:44
msgid "arrays"
msgstr "diziler"

#. Reference: array
#: course/glossary.csv:44
msgid ""
"An array is a list of values. In GDScript, arrays can contain [i]any[/i] "
"types of value.\n"
"\n"
"To create an array, you write comma-separated values in square brackets: "
"[code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"In games, we use arrays all the time to store lists of characters in a "
"party, lists of items in inventory, lists of spells the player unlocked, and "
"so on. They're everywhere.\n"
"\n"
"Arrays are a fundamental value type in computer programming. You'll find "
"arrays in pretty much any programming language."
msgstr ""
"Bir dizi, bir değerler listesidir. GDScript'te, diziler [i]herhangi[/i] bir "
"değer tipini taşıyabilirler.\n"
"\n"
"Bir dizi oluşturmak için, köşeli parantez içinde virgülle-ayrılmış değerler "
"yazarsınız: [code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"Oyunlarda, dizileri sürekli kullanırız; bir takımdaki karakterleri "
"listelemek, envanterdeki öğelerin listesini tutmak, oyuncunun kilidini "
"açtığı büyülerin listesini saklamak ve örnekler uzar gider. Bunlar her "
"yerdeler.\n"
"\n"
"Diziler, bilgisayar programcılığının en temel değer tiplerinden biridir. "
"Dizileri, belki de her tür programlama dilinde bulabilirsiniz."

#. Reference: assign
#: course/glossary.csv:45
msgid "assign"
msgstr "atama"

#. Reference: assign
#: course/glossary.csv:45
msgid ""
"Assigning a value to a variable means that you store a value inside the "
"variable. You do this with the equal sign ([code]=[/code])."
msgstr ""
"Bir değeri bir değişkene atamak demek, bu değeri değişkenin içinde tutmak "
"demektir. Bunun için eşitlik işareti ([code]=[/code]) kullanırsınız."

#. Reference: dictionary
#: course/glossary.csv:52
msgid "dictionary"
msgstr "sözlük"

#. Reference: dictionary
#: course/glossary.csv:52
msgid "dictionaries"
msgstr "sözlükler"

#. Reference: dictionary
#: course/glossary.csv:52
msgid ""
"A dictionary is a data structure that maps values with key-value pairs. When "
"you give the dictionary a key, it finds and gives you back the corresponding "
"value.\n"
"\n"
"In GDScript, keys can be many things. We often use text strings or numbers, "
"but you're not limited to that. A [code]Vector2[/code] can also be a valid "
"key, which is handy to map a grid cell to a unit or an item in a grid-based "
"game.\n"
"\n"
"You will often use dictionaries to associate bits of data in your games. For "
"example, we could use them to associate an equipment's name with its weapon "
"stats in a database.\n"
"\n"
"Like arrays, they are a fundamental data type that you will see in many "
"programming languages and use a lot."
msgstr ""
"Bir sözlük, verilen değerleri, anahtar-değer çifti şeklinde haritalayan veri "
"yapılarıdır. Bir sözlüğe bir anahtar verdiğinizde, karşılık olarak size, "
"eşleşen değeri bulup geri döndürür.\n"
"\n"
"GDScript'te, anahtarlar birçok şey olabilir. Genellikle yazı dizeleri ya da "
"numaralar kullanırız, ama bununla sınırlı değilsiniz. Bir [code]Vector2[/"
"code] de geçerli anahtar olabilir; ızgara-temelli bir oyunda, bir ızgara "
"hücresini bir birime ya da bir öğeye haritalamak oldukça kullanışlı olur.\n"
"\n"
"Oyunlarınızda veri parçalarını ilişkilendirmek için sözlükleri sıklıkla "
"kullanacaksınız. Örneğin, bir ekipmanın adını, onun veri tabanındaki silah "
"bilgileri ile ilişkilendirmek için kullanabiliriz.\n"
"\n"
"Sözlükler, diziler gibi, birçok programlama dilinde görebileceğiniz ve "
"sıklıkla kullanacağınız en temel veri tiplerinden biridir."

#. Reference: for loop
#: course/glossary.csv:59
msgid "for loop"
msgstr "for döngüsü"

#. Reference: for loop
#: course/glossary.csv:59
msgid "for loops"
msgstr "for döngüleri"

#. Reference: for loop
#: course/glossary.csv:59
msgid ""
"A for loop instructs the computer to repeat a set of instructions once for "
"each value in an array.\n"
"\n"
"In each loop iteration, the compiler extracts one value from the array and "
"gives you access to it in the loop's body.\n"
"\n"
"For loops run code a limited amount of times: one per value in the array. It "
"is different from while loops that keep repeating code until a condition is "
"met.\n"
"\n"
"We recommend favoring for loops when you can. They're safer and easier to "
"use than while loops."
msgstr ""
"Bir \"for\" döngüsü, bilgisayara, bir dizinin içindeki her bir değer için "
"bir kere olmak üzere, bir talimat setini yinelemesini emreder.\n"
"\n"
"Her bir döngü yinelemesinde, derleyici, diziden bir değer çeker ve döngü "
"içerisinde buna erişmeyi sağlar.\n"
"\n"
"\"for\" döngüleri, kodu belli bir sayıda çalıştırır; dizideki her bir değer "
"için bir kere. Bu döngü tipi, belli bir şart sağlanana kadar tekrar eden "
"\"while\" döngüsünden farklıdır.\n"
"\n"
"Mümkün oldukça \"for\" döngülerini tercih etmenizi öneririz. Hem daha "
"güvenli hem de kullanımı \"while\" döngülerinden kolaydır."

#. Reference: function
#: course/glossary.csv:64
msgid "function"
msgstr "fonksiyon"

#. Reference: function
#: course/glossary.csv:64
msgid "functions"
msgstr "fonksiyonlar"

#. Reference: function
#: course/glossary.csv:64
msgid ""
"A function is a group of code instructions you give a name. When you define "
"a function, you can call it any time to run all the instructions it "
"contains.\n"
"\n"
"You can modify a function's behavior with parameters. Parameters are "
"variable names that you write in the function definition. You can then use "
"them in the function's body to make your code adapt to different cases.\n"
"\n"
"Also, functions can optionally return a value to the code calling it."
msgstr ""
"Bir fonksiyon, bir isim altında topladığınız gruplanmış kod talimatlarıdır. "
"Bir fonksiyon bir kez tanımladığınızda, içindeki tüm talimatları çalıştırmak "
"için ne zaman isterseniz çağırabilirsiniz.\n"
"\n"
"Bir fonksiyonun davranışını, alınan değişkenler (parametreler) ile "
"değiştirebilirsiniz. Bunlar fonksiyon tanımında yazdığınız değişken "
"isimleridir. Bunları fonksiyon içerisinde, kodunuzu farklı durumlara "
"uyarlamak için kullanabilirsiniz.\n"
"\n"
"Ayrıca fonksiyonlar, isteğe bağlı olarak, geriye değer de döndürebilirler."

#. Reference: increment
#: course/glossary.csv:65
msgid "increment"
msgstr "artış"

#. Reference: increment
#: course/glossary.csv:65
msgid "increments"
msgstr "artışlar"

#. Reference: increment
#: course/glossary.csv:65
msgid "An increment is the amount by which a value changes in your code."
msgstr "Bir artış, kodunuzdaki bir değerin değişme miktarıdır."

#. Reference: instruction
#: course/glossary.csv:68
msgid "instruction"
msgstr "talimat"

#. Reference: instruction
#: course/glossary.csv:68
msgid "instructions"
msgstr "talimatlar"

#. Reference: instruction
#: course/glossary.csv:68
msgid ""
"In computer programming, instructions are a single operation the computer "
"recognizes and can execute.\n"
"\n"
"For example, a function call, an addition, or assigning a value to a "
"variable."
msgstr ""
"Bilgisayar programcılığında, talimatlar, bilgisayarın tanıdığı ve "
"çalıştırabileceği tekil işlemlerdir.\n"
"\n"
"Örneğin, bir fonksiyon çağırma, toplama işlemi yapma, ya da bir değişkene "
"değer atamak gibi."

#. Reference: variable
#: course/glossary.csv:77
msgid "variable"
msgstr "değişken"

#. Reference: variable
#: course/glossary.csv:77
msgid "variables"
msgstr "değişkenler"

#. Reference: variable
#: course/glossary.csv:77
msgid ""
"Variables are a tool to give a name to values you want to store in your code "
"and change over time.\n"
"\n"
"For example, a character's health: when the character takes a hit, you want "
"it to go down. When healing, you want the health to go back up.\n"
"\n"
"You can create a variable named [code]health[/code] to represent the "
"health.\n"
"\n"
"Then, every time you write the keyword [code]health[/code] in your code, the "
"computer will fetch the corresponding value in its memory for you.\n"
"\n"
"Variables work a bit like product labels in a supermarket. They are names "
"that you attach to some value. Any time, you can take the label and stick it "
"onto a new product or, in that case, a new value."
msgstr ""
"Değişkenler, kodunuzun içinde saklamak istediğiniz ve zamanla değişebilen "
"değerlere isim vermeye yarayan araçlardır.\n"
"\n"
"Örneğin, bir karakterin sağlığı gibi: karakter hasar aldığı zaman, "
"sağlığının azalmasını istersiniz. İyileşmesi durumunda, sağlığının tekrar "
"artmasını istersiniz.\n"
"\n"
"Sağlığı temsil etmesi için [code]health[/code](sağlık) isminde bir değişken "
"oluşturabilirsiniz.\n"
"\n"
"Bundan sonra kodunuzda, ne zaman klavyeden [code]health[/code] yazarsanız, "
"bilgisayar hafızasında karşılık gelen değeri sizin için bulup getirecektir.\n"
"\n"
"Değişkenler, süper marketlerdeki ürün etiketlerine biraz benzer. Bir değere "
"iliştirdiğimiz isimlerdir. Herhangi bir zamanda, etiketi çıkartıp başka bir "
"ürüne, ya da bu durumda yeni bir değere, yapıştırabilirsiniz."

#. Reference: while loop
#: course/glossary.csv:84
msgid "while loop"
msgstr "while döngüsü"

#. Reference: while loop
#: course/glossary.csv:84
msgid "while loops"
msgstr "while döngüleri"

#. Reference: while loop
#: course/glossary.csv:84
msgid ""
"A while loop instructs the computer to keep running code based on a "
"condition. While the condition is true, the loop keeps running.\n"
"\n"
"When coding while loops, you must be careful: they will keep running "
"infinitely and freeze your game if you get the condition wrong.\n"
"\n"
"That's why we recommend using the safer for loop whenever you can.\n"
"\n"
"However, there are still essential cases in which we use while loops, like "
"processing files, processing computer code, or for powerful algorithms."
msgstr ""
"Bir \"while\" döngüsü bilgisayara, bir şarta bağlı olarak kodu sürekli "
"çalıştırmasını emreder. Eğer şart geçerli ise, döngü sonsuza kadar çalışır.\n"
"\n"
"\"while\" döngülerini kodlarken dikkatli olmanız gerekir: eğer şartı yanlış "
"seçerseniz, döngü sonsuza kadar çalışır ve bilgisayarınız donar.\n"
"\n"
"Mümkün olduğunca daha güvenli olan \"for\" döngüsünü kullanmanızı önerme "
"sebebimiz bu yüzdendir.\n"
"\n"
"Yine de \"while\" döngülerini kullanmanın çok gerekli olduğu durumlar da "
"vardır; dosyaları işlemek, bilgisayar kodu işletmek, ya da güçlü "
"algoritmalar yazmak."

#. Reference: body
#: course/glossary.csv:85
msgid "body"
msgstr "gövde"

#. Reference: body
#: course/glossary.csv:85
msgid ""
"We talk about a loop or a function's body to refer to the lines of code that "
"are part of the loop or function."
msgstr ""
"Bir döngüden ya da bir fonksiyon'un içinden (gövdesinden) bahsederken, bir "
"döngünün ya da fonksiyonun parçası olan kod satırlarını kastediyoruz."

#. Reference: return
#: course/glossary.csv:88
msgid "return"
msgstr "geri döndürme (return)"

#. Reference: return
#: course/glossary.csv:88
msgid ""
"Returning a value is the process of sending a value to the place where you "
"call a function.\n"
"\n"
"It happens when a function uses the [code]return[/code] keyword followed by "
"a value, for example: [code]return -1[/code]."
msgstr ""
"Bir değeri geri döndürmek, bir fonksiyonu çağırdığınız noktaya bir değer "
"döndürme işlemidir.\n"
"\n"
"Bunun için bir fonksiyon [code]return[/code] kelimesinden hemen sonra bir "
"değer kullanır; örneğin [code]return -1[/code] gibi."

#. Reference: library
#: course/glossary.csv:89
msgid "library"
msgstr "kütüphane"

#. Reference: library
#: course/glossary.csv:89
msgid "libraries"
msgstr "kütüphaneler"

#. Reference: library
#: course/glossary.csv:89
msgid ""
"A collection of valuable and reusable code bundled together by other "
"programmers to save you time. All programmers use code libraries."
msgstr ""
"Diğer programcılar tarafından, bize zaman kazandırmak için bir araya "
"toplanmış, değerli ve tekrar kullanılabilir kod yığınlarıdır. Tüm "
"programcılar kod kütüphaneleri kullanırlar."

#. Reference: sprite
#: course/glossary.csv:90
msgid "sprite"
msgstr "grafik öğe"

#. Reference: sprite
#: course/glossary.csv:90
msgid "sprites"
msgstr "grafik öğeler"

#. Reference: sprite
#: course/glossary.csv:90
msgid ""
"In computer graphics, a sprite is an image you display on the screen. We "
"generally use this word to talk about moving images, like a character, a "
"monster, or an item falling on the ground."
msgstr ""
"Bilgisayar grafiklerinde (çizimler, görseller), bir grafik öğe, ekranda "
"gösterilen bir imgedir. Bu kelimeyi genellikle hareketli imgeler için "
"kullanırız; bir karakter, bir canavar, ya da yere düşen bir nesne."
