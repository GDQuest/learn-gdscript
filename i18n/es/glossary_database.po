# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2025-06-14 15:02+0200\n"
"PO-Revision-Date: 2022-06-12 11:11+0200\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.9.1\n"
"X-Generator: Poedit 3.0.1\n"

#. Reference: member function
#: course/glossary.csv:6
msgid "member function"
msgstr "función miembro"

#. Reference: member function
#: course/glossary.csv:6
msgid "member functions"
msgstr "funciones miembro"

#. Reference: member function
#: course/glossary.csv:6
msgid ""
"Member functions are functions attached to a specific value type, like "
"arrays, strings, or dictionaries. We also call them methods.\n"
"\n"
"For example, arrays have member functions like [code]array.append()[/code].\n"
"\n"
"You can only call the function on an array, using the access operator "
"([code].[/code]) to access it, as shown above."
msgstr ""
"Las funciones miembro son funciones adjuntas a un tipo de valor específico, "
"como matrices, cadenas o diccionarios. También las llamamos métodos.\n"
"\n"
"Por ejemplo, las matrices tienen funciones miembro como [code]array.append()"
"[/code].\n"
"\n"
"Sólo puedes llamar a la función en una matriz, utilizando el operador de "
"acceso ([code].[/code]) para acceder a ella, como se muestra arriba."

#. Reference: member variable
#: course/glossary.csv:9
msgid "member variable"
msgstr "variable miembro"

#. Reference: member variable
#: course/glossary.csv:9
msgid "member variables"
msgstr "variables miembro"

#. Reference: member variable
#: course/glossary.csv:9
msgid ""
"Member variables are variables attached to a specific value type, like a "
"vector's [code]x[/code] and [code]y[/code] sub-variables. We also call them "
"[i]properties[/i] or [i]fields[/i] of the vector.\n"
"\n"
"To access a member variable, you must first write the value's name followed "
"by the access operator ([code].[/code]). For example, [code]position.x[/"
"code]."
msgstr ""
"Las variables miembro son variables adjuntas a un tipo de valor específico, "
"como las subvariables [code]x[/code] y [code]y[/code] de un vector. También "
"las llamamos [i]propiedades[/i] o [i]campos[/i] del vector.\n"
"\n"
"Para acceder a una variable miembro, debes escribir primero el nombre del "
"valor seguido del operador de acceso ([code].[/code]). Por ejemplo, "
"[code]position.x[/code]."

#. Reference: parameter
#: course/glossary.csv:12
msgid "parameter"
msgstr "parámetro"

#. Reference: parameter
#: course/glossary.csv:12
msgid "parameters"
msgstr "parámetros"

#. Reference: parameter
#: course/glossary.csv:12
msgid ""
"A parameter is a variable you create as part of a function definition.\n"
"\n"
"It allows you to reuse the function more by having values that vary in the "
"function's body."
msgstr ""
"Un parámetro es una variable que creas como parte de la definición de una "
"función.\n"
"\n"
"Te permite reutilizar más la función al tener valores que varían en el "
"cuerpo de la función."

#. Reference: radian
#: course/glossary.csv:17
msgid "radian"
msgstr "radián"

#. Reference: radian
#: course/glossary.csv:17
msgid "radians"
msgstr "radianes"

#. Reference: radian
#: course/glossary.csv:17
msgid ""
"A radian is a unit of measurement of angles based on the circle's "
"circumference.\n"
"\n"
"We tend to use degrees more in our daily lives, but in computer programming, "
"and especially in games, radians are common.\n"
"\n"
"An angle of [code]2 * PI[/code] radians corresponds to 360 degrees. And an "
"angle of [code]PI[/code] radians corresponds to 180 degrees."
msgstr ""
"Un radián es una unidad de medida de ángulos basada en la circunferencia del "
"círculo.\n"
"\n"
"Tendemos a utilizar más los grados en nuestra vida cotidiana, pero en la "
"programación informática, y especialmente en los juegos, los radianes son "
"comunes.\n"
"\n"
"Un ángulo de [code]2 * PI[/code] radianes corresponde a 360 grados. Y un "
"ángulo de [code]PI[/code] radianes corresponde a 180 grados."

#. Reference: type
#: course/glossary.csv:20
msgid "type"
msgstr "tipo"

#. Reference: type
#: course/glossary.csv:20
msgid "types"
msgstr "tipos"

#. Reference: type
#: course/glossary.csv:20
msgid ""
"In computer programming, a type is the class of a value. For example, whole "
"numbers like [code]3[/code], [code]11[/code], and [code]255462[/code] are "
"all of type [code]int[/code] (short for integer).\n"
"\n"
"The computer uses types to determine which operations are valid between two "
"values and when they're undefined."
msgstr ""
"En programación informática, un tipo es la clase de un valor. Por ejemplo, "
"números enteros como [code]3[/code], [code]11[/code] y [code]255462[/code] "
"son todos del tipo [code]int[/code] (abreviatura de entero).\n"
"\n"
"El ordenador utiliza los tipos para determinar qué operaciones son válidas "
"entre dos valores y cuándo son indefinidas."

#. Reference: iteration
#: course/glossary.csv:23
msgid "iteration"
msgstr "iteración"

#. Reference: iteration
#: course/glossary.csv:23
msgid "iterations"
msgstr "iteraciones"

#. Reference: iteration
#: course/glossary.csv:23
msgid ""
"In computer code, an iteration is one repetition of some process or code. We "
"typically use the term with loops, where one iteration is one run of the "
"loop's code.\n"
"\n"
"When talking of algorithms, an iteration can mean a full pass of the "
"algorithm on a data set."
msgstr ""
"En código informático, una iteración es una repetición de algún proceso o "
"código. Solemos utilizar el término con los bucles, donde una iteración es "
"una ejecución del código del bucle.\n"
"\n"
"Cuando hablamos de algoritmos, una iteración puede significar una pasada "
"completa del algoritmo sobre un conjunto de datos."

#. Reference: vector
#: course/glossary.csv:28
msgid "vector"
msgstr "vector"

#. Reference: vector
#: course/glossary.csv:28
msgid "vectors"
msgstr "vectores"

#. Reference: vector
#: course/glossary.csv:28
msgid ""
"In math, a vector is a list of numbers. In games, we often use 2D and 3D "
"vectors: respectively, lists of two and three numbers.\n"
"\n"
"We use that to represent a direction and magnitude or intensity in space. "
"For example, you can use a vector to represent the direction and speed at "
"which a character or a vehicle moves.\n"
"\n"
"Vectors can seem daunting at first because they are pretty abstract, but as "
"you will see, they'll simplify code tremendously."
msgstr ""
"En matemáticas, un vector es una lista de números. En los juegos, a menudo "
"utilizamos vectores 2D y 3D: respectivamente, listas de dos y tres números.\n"
"\n"
"Los utilizamos para representar una dirección y una magnitud o intensidad en "
"el espacio. Por ejemplo, puedes utilizar un vector para representar la "
"dirección y la rapidez a la que se mueve un personaje o un vehículo.\n"
"\n"
"Los vectores pueden parecer abrumadores al principio porque son bastante "
"abstractos, pero como verás, simplificarán enormemente el código."

#. Reference: argument
#: course/glossary.csv:37
msgid "argument"
msgstr "argumento"

#. Reference: argument
#: course/glossary.csv:37
msgid "arguments"
msgstr "argumentos"

#. Reference: argument
#: course/glossary.csv:37
msgid ""
"An argument is a value that you pass to a function when calling the "
"function. For example, in the call [code]rotate(0.5)[/code], the value "
"[code]0.5[/code] in the parentheses is an argument.\n"
"\n"
"A function can receive no arguments, one argument, or multiple arguments. "
"Arguments can be mandatory or optional.\n"
"\n"
"When a function takes multiple arguments, you separate the values with "
"commas, like in this function call: [code]jump(50, 100)[/code]\n"
"\n"
"When [i]calling[/i] a function, we name the values passed in parentheses "
"[i]arguments[/i].\n"
"\n"
"When writing a function definition, however, we talk about function "
"[i]parameters[/i]. In the following example, the names [code]x[/code] and "
"[code]y[/code] are [i]parameters[/i]."
msgstr ""
"Un argumento es un valor que le pasas a una función cuando llamas a la "
"función. Por ejemplo, en la llamada [code]rotate(0.5)[/code], el valor "
"[code]0.5[/code] entre los paréntesis es un argumento.\n"
"\n"
"Una función puede no recibir ningún argumento, recibir un argumento o "
"recibir varios argumentos. Los argumentos pueden ser obligatorios u "
"opcionales.\n"
"\n"
"Cuando una función recibe varios argumentos, se separan los valores con "
"comas, como en esta llamada de función: jump(50, 100).\n"
"\n"
"Al [i]llamar[/i] a una función, llamamos a los valores que se pasan entre "
"paréntesis [i]argumentos[/i].\n"
"\n"
"Sin embargo, al escribir una definición de función, hablamos de los "
"[i]parámetros[/i] de la función. En el siguiente ejemplo, los nombres "
"[code]x[/code] y [code]y[/code] son [i]parámetros[/i]."

#. Reference: array
#: course/glossary.csv:44
msgid "array"
msgstr "matriz"

#. Reference: array
#: course/glossary.csv:44
msgid "arrays"
msgstr "matrices"

#. Reference: array
#: course/glossary.csv:44
msgid ""
"An array is a list of values. In GDScript, arrays can contain [i]any[/i] "
"types of value.\n"
"\n"
"To create an array, you write comma-separated values in square brackets: "
"[code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"In games, we use arrays all the time to store lists of characters in a "
"party, lists of items in inventory, lists of spells the player unlocked, and "
"so on. They're everywhere.\n"
"\n"
"Arrays are a fundamental value type in computer programming. You'll find "
"arrays in pretty much any programming language."
msgstr ""
"Una matriz, o [i]array[/i], es una lista de valores. En GDScript, las "
"matrices pueden contener [i]cualquier[/i] tipo de valor.\n"
"\n"
"Para crear una matriz, escribes valores separados por comas entre corchetes: "
"[code]var three_numbers = [1, 2, 3][/code].\n"
"\n"
"En los juegos, utilizamos matrices todo el tiempo para almacenar listas de "
"personajes en un grupo, listas de objetos en el inventario, listas de "
"hechizos que el jugador ha desbloqueado, etc. Están por todas partes.\n"
"\n"
"Las matrices son un tipo de valor fundamental en la programación "
"informática. Encontrarás matrices en prácticamente cualquier lenguaje de "
"programación."

#. Reference: assign
#: course/glossary.csv:45
msgid "assign"
msgstr "asignar"

#. Reference: assign
#: course/glossary.csv:45
msgid ""
"Assigning a value to a variable means that you store a value inside the "
"variable. You do this with the equal sign ([code]=[/code])."
msgstr ""
"Asignar un valor a una variable significa que almacenas un valor dentro de "
"la variable. Haces esto con el signo de igual ([code]=[/code])."

#. Reference: dictionary
#: course/glossary.csv:52
msgid "dictionary"
msgstr "diccionario"

#. Reference: dictionary
#: course/glossary.csv:52
msgid "dictionaries"
msgstr "diccionarios"

#. Reference: dictionary
#: course/glossary.csv:52
msgid ""
"A dictionary is a data structure that maps values with key-value pairs. When "
"you give the dictionary a key, it finds and gives you back the corresponding "
"value.\n"
"\n"
"In GDScript, keys can be many things. We often use text strings or numbers, "
"but you're not limited to that. A [code]Vector2[/code] can also be a valid "
"key, which is handy to map a grid cell to a unit or an item in a grid-based "
"game.\n"
"\n"
"You will often use dictionaries to associate bits of data in your games. For "
"example, we could use them to associate an equipment's name with its weapon "
"stats in a database.\n"
"\n"
"Like arrays, they are a fundamental data type that you will see in many "
"programming languages and use a lot."
msgstr ""
"Un diccionario es una estructura de datos que mapea valores con pares clave-"
"valor. Cuando le das una clave al diccionario, éste encuentra y te devuelve "
"el valor correspondiente.\n"
"\n"
"En GDScript, las claves pueden ser muchas cosas. A menudo utilizamos cadenas "
"de texto o números, pero las claves no se limitan solo a eso. Un "
"[code]Vector2[/code] también puede ser una clave válida, lo que resulta útil "
"para mapear una celda de cuadrícula a una unidad o a un objeto en un juego "
"basado en cuadrículas.\n"
"\n"
"A menudo usarás los diccionarios para asociar datos en tus juegos. Por "
"ejemplo, podríamos utilizarlos para asociar el nombre de un equipo de armas "
"con sus estadísticas en una base de datos.\n"
"\n"
"Al igual que las matrices, son un tipo de datos fundamental que verás en "
"muchos lenguajes de programación y que utilizarás mucho."

#. Reference: for loop
#: course/glossary.csv:59
msgid "for loop"
msgstr "bucle for"

#. Reference: for loop
#: course/glossary.csv:59
msgid "for loops"
msgstr "bucles for"

#. Reference: for loop
#: course/glossary.csv:59
msgid ""
"A for loop instructs the computer to repeat a set of instructions once for "
"each value in an array.\n"
"\n"
"In each loop iteration, the compiler extracts one value from the array and "
"gives you access to it in the loop's body.\n"
"\n"
"For loops run code a limited amount of times: one per value in the array. It "
"is different from while loops that keep repeating code until a condition is "
"met.\n"
"\n"
"We recommend favoring for loops when you can. They're safer and easier to "
"use than while loops."
msgstr ""
"Un bucle for le indica a la computadora que repita un conjunto de "
"instrucciones una vez por cada valor en una matriz.\n"
"\n"
"En cada iteración del bucle, el compilador extrae un valor de la matriz y te "
"da acceso a él en el cuerpo del bucle.\n"
"\n"
"Los bucles for ejecutan el código una cantidad limitada de veces: una por "
"cada valor en la matriz. Es diferente de los bucles while, que siguen "
"repitiendo el código hasta que se cumpla una condición.\n"
"\n"
"Recomendamos favorecer los bucles for siempre que puedas. Son más seguros y "
"fáciles de usar que los bucles while."

#. Reference: function
#: course/glossary.csv:64
msgid "function"
msgstr "función"

#. Reference: function
#: course/glossary.csv:64
msgid "functions"
msgstr "funciones"

#. Reference: function
#: course/glossary.csv:64
msgid ""
"A function is a group of code instructions you give a name. When you define "
"a function, you can call it any time to run all the instructions it "
"contains.\n"
"\n"
"You can modify a function's behavior with parameters. Parameters are "
"variable names that you write in the function definition. You can then use "
"them in the function's body to make your code adapt to different cases.\n"
"\n"
"Also, functions can optionally return a value to the code calling it."
msgstr ""
"Una función es un grupo de instrucciones de código al que le das un nombre. "
"Cuando defines una función, puedes llamarla en cualquier momento para "
"ejecutar todas las instrucciones que contiene.\n"
"\n"
"Puedes modificar el comportamiento de una función con parámetros. Los "
"parámetros son nombres de variables que escribes en la definición de la "
"función. Luego puedes utilizarlos en el cuerpo de la función para hacer que "
"tu código se adapte a diferentes casos.\n"
"\n"
"Además, las funciones pueden devolver opcionalmente un valor al código que "
"lo llama."

#. Reference: increment
#: course/glossary.csv:65
msgid "increment"
msgstr "incremento"

#. Reference: increment
#: course/glossary.csv:65
msgid "increments"
msgstr "incrementos"

#. Reference: increment
#: course/glossary.csv:65
msgid "An increment is the amount by which a value changes in your code."
msgstr "Un incremento es la cantidad por la cual cambia un valor en tu código."

#. Reference: instruction
#: course/glossary.csv:68
msgid "instruction"
msgstr "instrucción"

#. Reference: instruction
#: course/glossary.csv:68
msgid "instructions"
msgstr "instrucciones"

#. Reference: instruction
#: course/glossary.csv:68
msgid ""
"In computer programming, instructions are a single operation the computer "
"recognizes and can execute.\n"
"\n"
"For example, a function call, an addition, or assigning a value to a "
"variable."
msgstr ""
"En la programación informática, las instrucciones son una operación única "
"que la computadora reconoce y puede ejecutar.\n"
"\n"
"Por ejemplo, una llamada a una función, una suma o la asignación de un valor "
"a una variable."

#. Reference: variable
#: course/glossary.csv:77
msgid "variable"
msgstr "variable"

#. Reference: variable
#: course/glossary.csv:77
msgid "variables"
msgstr "variables"

#. Reference: variable
#: course/glossary.csv:77
msgid ""
"Variables are a tool to give a name to values you want to store in your code "
"and change over time.\n"
"\n"
"For example, a character's health: when the character takes a hit, you want "
"it to go down. When healing, you want the health to go back up.\n"
"\n"
"You can create a variable named [code]health[/code] to represent the "
"health.\n"
"\n"
"Then, every time you write the keyword [code]health[/code] in your code, the "
"computer will fetch the corresponding value in its memory for you.\n"
"\n"
"Variables work a bit like product labels in a supermarket. They are names "
"that you attach to some value. Any time, you can take the label and stick it "
"onto a new product or, in that case, a new value."
msgstr ""
"Las variables son una herramienta para dar un nombre a los valores que "
"quieras almacenar en tu código y que quieras cambiar con el tiempo.\n"
"\n"
"Por ejemplo, la salud de un personaje: cuando el personaje reciba un golpe, "
"quieres que la salud baje. Cuando el personaje se cure, quieres que la salud "
"vuelva a subir.\n"
"\n"
"Puedes crear una variable llamada [code]health[/code] para representar la "
"salud.\n"
"\n"
"Entonces, cada vez que escribas la palabra clave [code]health[/code] en tu "
"código, la computadora buscará el valor correspondiente en su memoria para "
"ti.\n"
"\n"
"Las variables funcionan un poco como las etiquetas de los productos en un "
"supermercado. Son nombres que adjuntas a algún valor. En cualquier momento, "
"puedes tomar la etiqueta y pegarla en un nuevo producto o, en este caso, en "
"un nuevo valor."

#. Reference: while loop
#: course/glossary.csv:84
msgid "while loop"
msgstr "bucle while"

#. Reference: while loop
#: course/glossary.csv:84
msgid "while loops"
msgstr "bucles while"

#. Reference: while loop
#: course/glossary.csv:84
msgid ""
"A while loop instructs the computer to keep running code based on a "
"condition. While the condition is true, the loop keeps running.\n"
"\n"
"When coding while loops, you must be careful: they will keep running "
"infinitely and freeze your game if you get the condition wrong.\n"
"\n"
"That's why we recommend using the safer for loop whenever you can.\n"
"\n"
"However, there are still essential cases in which we use while loops, like "
"processing files, processing computer code, or for powerful algorithms."
msgstr ""
"Un bucle while le indica a la computadora que siga ejecutando código en "
"función de una condición. Mientras la condición sea verdadera, el bucle "
"seguirá ejecutándose.\n"
"\n"
"Cuando codifiques bucles while, debes tener cuidado: seguirán ejecutándose "
"infinitamente y congelarán tu juego si te equivocas en la condición.\n"
"\n"
"Por eso recomendamos utilizar el bucle for, el cual es más seguro, siempre "
"que puedas.\n"
"\n"
"Sin embargo, todavía hay casos esenciales en los que utilizamos los bucles "
"while, como el procesamiento de archivos, el procesamiento de código "
"informático o para usar algoritmos poderosos."

#. Reference: body
#: course/glossary.csv:85
msgid "body"
msgstr "cuerpo"

#. Reference: body
#: course/glossary.csv:85
msgid ""
"We talk about a loop or a function's body to refer to the lines of code that "
"are part of the loop or function."
msgstr ""
"Hablamos del cuerpo de un bucle o de una función para referirnos a las "
"líneas de código que forman parte del bucle o de la función."

#. Reference: return
#: course/glossary.csv:88
msgid "return"
msgstr "devolver"

#. Reference: return
#: course/glossary.csv:88
msgid ""
"Returning a value is the process of sending a value to the place where you "
"call a function.\n"
"\n"
"It happens when a function uses the [code]return[/code] keyword followed by "
"a value, for example: [code]return -1[/code]."
msgstr ""
"Devolver un valor es el proceso de enviar un valor al lugar donde se llama a "
"una función.\n"
"\n"
"Ocurre cuando una función utiliza la palabra clave [code]return[/code] "
"seguida de un valor, por ejemplo: [code]return -1[/code]."

#. Reference: library
#: course/glossary.csv:89
msgid "library"
msgstr "biblioteca"

#. Reference: library
#: course/glossary.csv:89
msgid "libraries"
msgstr "bibliotecas"

#. Reference: library
#: course/glossary.csv:89
msgid ""
"A collection of valuable and reusable code bundled together by other "
"programmers to save you time. All programmers use code libraries."
msgstr ""
"Una colección de código valioso y reutilizable agrupado por otros "
"programadores para ahorrarte tiempo. Todos los programadores utilizan "
"bibliotecas de código."

#. Reference: sprite
#: course/glossary.csv:90
msgid "sprite"
msgstr "sprite"

#. Reference: sprite
#: course/glossary.csv:90
msgid "sprites"
msgstr "sprites"

#. Reference: sprite
#: course/glossary.csv:90
msgid ""
"In computer graphics, a sprite is an image you display on the screen. We "
"generally use this word to talk about moving images, like a character, a "
"monster, or an item falling on the ground."
msgstr ""
"En gráficos por computadora, un sprite es una imagen que se muestra en la "
"pantalla. Generalmente utilizamos esta palabra para hablar de imágenes en "
"movimiento, como un personaje, un monstruo o un objeto que cae al suelo."
