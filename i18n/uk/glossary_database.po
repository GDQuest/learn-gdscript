# Translations template for Learn GDScript From Zero.
# Copyright (C) 2023 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-12-09 20:05+0100\n"
"PO-Revision-Date: 2024-12-06 23:30+0000\n"
"Last-Translator: Олександр Пилипчук <lxlalexlxl@ukr.net>\n"
"Language-Team: Ukrainian <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/glossary_database/uk/>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;\n"
"X-Generator: Weblate 5.9-dev\n"
"Generated-By: Babel 2.10.1\n"

#. Reference: member function
#: ./course/glossary.csv:6
msgid "member function"
msgstr "функція-член"

#. Reference: member function
#: ./course/glossary.csv:6
msgid "member functions"
msgstr "функції-члени"

#. Reference: member function
#: ./course/glossary.csv:6
msgid ""
"Member functions are functions attached to a specific value type, like "
"arrays, strings, or dictionaries. We also call them methods.\n"
"\n"
"For example, arrays have member functions like "
"[code]array.append()[/code].\n"
"\n"
"You can only call the function on an array, using the access operator "
"([code].[/code]) to access it, as shown above."
msgstr ""
"Функції-члени — це функції, прив'язані до певного типу значень, наприклад, "
"масивів, рядків або словників. Ми також називаємо їх методами.\n"
"\n"
"Наприклад, масиви мають функцію-член [code]array.append()[/code].\n"
"\n"
"Ви можете викликати функцію тільки для масиву, використовуючи оператор "
"доступу до членів ([code].[/code]), як показано вище."

#. Reference: member variable
#: ./course/glossary.csv:9
msgid "member variable"
msgstr "змінна-член"

#. Reference: member variable
#: ./course/glossary.csv:9
msgid "member variables"
msgstr "змінні-члени"

#. Reference: member variable
#: ./course/glossary.csv:9
msgid ""
"Member variables are variables attached to a specific value type, like a "
"vector's [code]x[/code] and [code]y[/code] sub-variables. We also call "
"them [i]properties[/i] or [i]fields[/i] of the vector.\n"
"\n"
"To access a member variable, you must first write the value's name "
"followed by the access operator ([code].[/code]). For example, "
"[code]position.x[/code]."
msgstr ""
"Змінні-члени - це змінні, прив'язані до певного типу значення, наприклад, "
"вектор має вкладені змінні [code]x[/code] і [code]y[/code]. Ми також "
"називаємо їх [i]властивостями[/i] або [i]полями[/i] вектора.\n"
"\n"
"Щоб отримати доступ до змінної члена, ви повинні записати назву значення, а "
"потім оператор доступу ([code].[/code]). Наприклад, [code]position.x[/code]."

#. Reference: parameter
#: ./course/glossary.csv:12
msgid "parameter"
msgstr "параметр"

#. Reference: parameter
#: ./course/glossary.csv:12
msgid "parameters"
msgstr "параметри"

#. Reference: parameter
#: ./course/glossary.csv:12
msgid ""
"A parameter is a variable you create as part of a function definition.\n"
"\n"
"It allows you to reuse the function more by having values that vary in "
"the function's body."
msgstr ""
"Параметр — це змінна, яку ви створюєте як частину визначення функції.\n"
"\n"
"Він дає змогу повторно використовувати функцію, підставляючи в її тіло різні "
"значення."

#. Reference: radian
#: ./course/glossary.csv:17
msgid "radian"
msgstr "радіан"

#. Reference: radian
#: ./course/glossary.csv:17
msgid "radians"
msgstr "радіани"

#. Reference: radian
#: ./course/glossary.csv:17
msgid ""
"A radian is a unit of measurement of angles based on the circle's "
"circumference.\n"
"\n"
"We tend to use degrees more in our daily lives, but in computer "
"programming, and especially in games, radians are common.\n"
"\n"
"An angle of [code]2 * PI[/code] radians corresponds to 360 degrees. And "
"an angle of [code]PI[/code] radians corresponds to 180 degrees."
msgstr ""
"Радіан — це одиниця вимірювання кутів, заснована на довжині кола.\n"
"\n"
"У повсякденному житті ми частіше використовуємо градуси, але в комп'ютерному "
"програмуванні, особливо в іграх, зазвичай використовують радіани.\n"
"\n"
"Кут [code]2 * PI[/code] радіан відповідає 360 градусам. А кут [code]PI[/code]"
" радіан відповідає 180 градусам."

#. Reference: type
#: ./course/glossary.csv:20
msgid "type"
msgstr "тип"

#. Reference: type
#: ./course/glossary.csv:20
msgid "types"
msgstr "типи"

#. Reference: type
#: ./course/glossary.csv:20
msgid ""
"In computer programming, a type is the class of a value. For example, "
"whole numbers like [code]3[/code], [code]11[/code], and "
"[code]255462[/code] are all of type [code]int[/code] (short for integer)."
"\n"
"\n"
"The computer uses types to determine which operations are valid between "
"two values and when they're undefined."
msgstr ""
"У комп'ютерному програмуванні тип — це клас значень. Наприклад, цілі числа "
"[code]3[/code], [code]11[/code] і [code]255462[/code] — мають тип "
"[code]int[/code] (скорочення від integer).\n"
"\n"
"Комп'ютер використовує типи, щоб визначити, які операції допустимі між двома "
"значеннями, а коли вони не визначені."

#. Reference: iteration
#: ./course/glossary.csv:23
msgid "iteration"
msgstr "ітерація"

#. Reference: iteration
#: ./course/glossary.csv:23
msgid "iterations"
msgstr "ітерації"

#. Reference: iteration
#: ./course/glossary.csv:23
msgid ""
"In computer code, an iteration is one repetition of some process or code."
" We typically use the term with loops, where one iteration is one run of "
"the loop's code.\n"
"\n"
"When talking of algorithms, an iteration can mean a full pass of the "
"algorithm on a data set."
msgstr ""
"У комп'ютерному коді ітерація — одне повторення деякого процесу чи коду. "
"Зазвичай ми використовуємо термін ітерація до циклів, де одна ітерація – це "
"одне виконання коду циклу.\n"
"\n"
"Коли йдеться про алгоритми, ітерація може означати повний прохід алгоритму "
"через набір даних."

#. Reference: vector
#: ./course/glossary.csv:28
msgid "vector"
msgstr "вектор"

#. Reference: vector
#: ./course/glossary.csv:28
msgid "vectors"
msgstr "вектори"

#. Reference: vector
#: ./course/glossary.csv:28
msgid ""
"In math, a vector is a list of numbers. In games, we often use 2D and 3D "
"vectors: respectively, lists of two and three numbers.\n"
"\n"
"We use that to represent a direction and magnitude or intensity in space."
" For example, you can use a vector to represent the direction and speed "
"at which a character or a vehicle moves.\n"
"\n"
"Vectors can seem daunting at first because they are pretty abstract, but "
"as you will see, they'll simplify code tremendously."
msgstr ""
"У математиці вектор – це набір чисел. В іграх ми часто використовуємо 2D та "
"3D вектори: відповідно, набори з двох та трьох чисел.\n"
"\n"
"Ми використовуємо вектори для подання напрямку та величини чи інтенсивності "
"у просторі. Наприклад, ви можете використовувати вектор для подання напрямку "
"та швидкості, з якою рухається персонаж або транспортний засіб.\n"
"\n"
"Спочатку вектори можуть видатися складними, тому що вони є досить "
"абстрактними, але надалі ви побачите, що вони значно спрощують код."

#. Reference: argument
#: ./course/glossary.csv:37
msgid "argument"
msgstr "аргумент"

#. Reference: argument
#: ./course/glossary.csv:37
msgid "arguments"
msgstr "аргументи"

#. Reference: argument
#: ./course/glossary.csv:37
msgid ""
"An argument is a value that you pass to a function when calling the "
"function. For example, in the call [code]rotate(0.5)[/code], the value "
"[code]0.5[/code] in the parentheses is an argument.\n"
"\n"
"A function can receive no arguments, one argument, or multiple arguments."
" Arguments can be mandatory or optional.\n"
"\n"
"When a function takes multiple arguments, you separate the values with "
"commas, like in this function call: [code]jump(50, 100)[/code]\n"
"\n"
"When [i]calling[/i] a function, we name the values passed in parentheses "
"[i]arguments[/i].\n"
"\n"
"When writing a function definition, however, we talk about function "
"[i]parameters[/i]. In the following example, the names [code]x[/code] and"
" [code]y[/code] are [i]parameters[/i]."
msgstr ""
"Аргумент — це значення, яке ви передаєте у функцію під час її виклику. "
"Наприклад, у виклику [code]rotate(0.5)[/code] значення [code]0.5[/code] у "
"круглих дужках є аргументом.\n"
"\n"
"Функція може не приймати жодних аргументів, приймати один або кілька "
"аргументів. Аргументи можуть бути обов'язковими чи необов'язковими.\n"
"\n"
"Коли функція приймає кілька аргументів, відокремлюйте їхні значення комами, "
"як у цьому прикладі: [code]jump(50, 100)[/code]\n"
"\n"
"Під час [i]виклику[/i] функції ми називаємо значення, що передаються в "
"круглих дужках, [i]аргументами[/i].\n"
"\n"
"Однак під час написання визначення функції ми говоримо про [i]параметри[/i] "
"функції. В такому прикладі назви [code]x[/code] і [code]y[/code] є "
"[i]параметрами[/i]."

#. Reference: array
#: ./course/glossary.csv:44
msgid "array"
msgstr "масив"

#. Reference: array
#: ./course/glossary.csv:44
msgid "arrays"
msgstr "масиви"

#. Reference: array
#: ./course/glossary.csv:44
msgid ""
"An array is a list of values. In GDScript, arrays can contain [i]any[/i] "
"types of value.\n"
"\n"
"To create an array, you write comma-separated values in square brackets: "
"[code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"In games, we use arrays all the time to store lists of characters in a "
"party, lists of items in inventory, lists of spells the player unlocked, "
"and so on. They're everywhere.\n"
"\n"
"Arrays are a fundamental value type in computer programming. You'll find "
"arrays in pretty much any programming language."
msgstr ""
"Масив — це набір значень. У GDScript масиви можуть містити значення "
"[i]будь-яких[/i] типів.\n"
"\n"
"Щоб створити масив, потрібно записати значення через кому в квадратних "
"дужках: [code]var three_numbers = [1, 2, 3][/code]\n"
"\n"
"В іграх ми постійно використовуємо масиви для зберігання списків персонажів "
"у групі, списків предметів у інвентарі, списків заклинань, розблокованих "
"гравцем тощо. Вони всюди.\n"
"\n"
"Масиви — це фундаментальний тип значень у комп'ютерному програмуванні. Ви "
"зустрінете масиви практично в будь-якій мові програмування."

#. Reference: assign
#: ./course/glossary.csv:45
msgid "assign"
msgstr "присвоювання"

#. Reference: assign
#: ./course/glossary.csv:45
msgid ""
"Assigning a value to a variable means that you store a value inside the "
"variable. You do this with the equal sign ([code]=[/code])."
msgstr ""
"Присвоєння значення змінній означає, що ви зберігаєте значення всередині "
"змінної. Щоб виконати цю операцію, слід використати знак рівності "
"([code]=[/code])."

#. Reference: dictionary
#: ./course/glossary.csv:52
msgid "dictionary"
msgstr "словник"

#. Reference: dictionary
#: ./course/glossary.csv:52
msgid "dictionaries"
msgstr "словники"

#. Reference: dictionary
#: ./course/glossary.csv:52
msgid ""
"A dictionary is a data structure that maps values with key-value pairs. "
"When you give the dictionary a key, it finds and gives you back the "
"corresponding value.\n"
"\n"
"In GDScript, keys can be many things. We often use text strings or "
"numbers, but you're not limited to that. A [code]Vector2[/code] can also "
"be a valid key, which is handy to map a grid cell to a unit or an item in"
" a grid-based game.\n"
"\n"
"You will often use dictionaries to associate bits of data in your games. "
"For example, we could use them to associate an equipment's name with its "
"weapon stats in a database.\n"
"\n"
"Like arrays, they are a fundamental data type that you will see in many "
"programming languages and use a lot."
msgstr ""
"Словник — це структура даних, яка зіставляє значення за допомогою пар ключ-"
"значення. Коли ви даєте словнику ключ, він знаходить та повертає вам "
"відповідне значення.\n"
"\n"
"В GDScript ключі можуть бути різними. Ми часто використовуємо текстові рядки "
"або числа, але ви не обмежені лише рядками та числами. Наприклад, якщо в "
"якщо грі використовується сітка, то ключем може бути [code]Vector2[/code], "
"який зручний для зіставлення комірки сітки з юнітом або іншим елементом гри."
"\n"
"\n"
"Ви часто будете використовувати словники для зіставлення фрагментів даних у "
"своїх іграх. Наприклад, ви можете використати словник, щоб зв'язати назву "
"спорядження з його характеристиками в базі даних.\n"
"\n"
"Як і масиви, словники є фундаментальним типом даних, який ви зустрінете в "
"багатьох мовах програмування і часто будете використовувати."

#. Reference: for loop
#: ./course/glossary.csv:59
msgid "for loop"
msgstr "цикл for"

#. Reference: for loop
#: ./course/glossary.csv:59
msgid "for loops"
msgstr "цикли for"

#. Reference: for loop
#: ./course/glossary.csv:59
msgid ""
"A for loop instructs the computer to repeat a set of instructions once "
"for each value in an array.\n"
"\n"
"In each loop iteration, the compiler extracts one value from the array "
"and gives you access to it in the loop's body.\n"
"\n"
"For loops run code a limited amount of times: one per value in the array."
" It is different from while loops that keep repeating code until a "
"condition is met.\n"
"\n"
"We recommend favoring for loops when you can. They're safer and easier to"
" use than while loops."
msgstr ""
"Цикл for вказує комп'ютеру повторити набір інструкцій один раз для кожного "
"значення масиву.\n"
"\n"
"На кожній ітерації циклу компілятор отримує одне значення з масиву і надає "
"вам доступ до нього в тілі циклу..\n"
"\n"
"Цикли for запускають код обмежену кількість разів: по одному на кожне "
"значення масиву. Цим цикли for відрізняються від циклів while, які "
"продовжують повторювати код доти, доки не буде виконано умову.\n"
"\n"
"Ми радимо надавати перевагу циклам for завжди, коли це можливо. Цикли for "
"безпечніші та простіші у використанні, ніж цикли while."

#. Reference: function
#: ./course/glossary.csv:64
msgid "function"
msgstr "функція"

#. Reference: function
#: ./course/glossary.csv:64
msgid "functions"
msgstr "функції"

#. Reference: function
#: ./course/glossary.csv:64
msgid ""
"A function is a group of code instructions you give a name. When you "
"define a function, you can call it any time to run all the instructions "
"it contains.\n"
"\n"
"You can modify a function's behavior with parameters. Parameters are "
"variable names that you write in the function definition. You can then "
"use them in the function's body to make your code adapt to different "
"cases.\n"
"\n"
"Also, functions can optionally return a value to the code calling it."
msgstr ""
"Функція – це група інструкцій коду, якій ви даєте назву. Коли ви визначили "
"функцію, ви можете викликати її в будь-який час, щоб виконати всі "
"інструкції, які вона містить.\n"
"\n"
"Ви можете змінювати поведінку функції за допомогою параметрів. Параметри - "
"це назви змінних, які ви пишете у визначенні функції. Ви можете "
"використовувати їх у тілі функції, щоб адаптувати код до різних випадків.\n"
"\n"
"Крім того, функції можуть повертати значення в код, який їх викликав."

#. Reference: increment
#: ./course/glossary.csv:65
msgid "increment"
msgstr "інкремент"

#. Reference: increment
#: ./course/glossary.csv:65
msgid "increments"
msgstr "інкременти"

#. Reference: increment
#: ./course/glossary.csv:65
msgid "An increment is the amount by which a value changes in your code."
msgstr "Інкремент — це величина, на яку змінюється значення у вашому коді."

#. Reference: instruction
#: ./course/glossary.csv:68
msgid "instruction"
msgstr "інструкція"

#. Reference: instruction
#: ./course/glossary.csv:68
msgid "instructions"
msgstr "інструкції"

#. Reference: instruction
#: ./course/glossary.csv:68
msgid ""
"In computer programming, instructions are a single operation the computer"
" recognizes and can execute.\n"
"\n"
"For example, a function call, an addition, or assigning a value to a "
"variable."
msgstr ""
"У комп'ютерному програмуванні інструкція - це одна дія, яку комп'ютер "
"розпізнає і може виконати.\n"
"\n"
"Наприклад, виклик функції, додавання або надання значення змінній."

#. Reference: variable
#: ./course/glossary.csv:77
msgid "variable"
msgstr "змінна"

#. Reference: variable
#: ./course/glossary.csv:77
msgid "variables"
msgstr "змінні"

#. Reference: variable
#: ./course/glossary.csv:77
msgid ""
"Variables are a tool to give a name to values you want to store in your "
"code and change over time.\n"
"\n"
"For example, a character's health: when the character takes a hit, you "
"want it to go down. When healing, you want the health to go back up.\n"
"\n"
"You can create a variable named [code]health[/code] to represent the "
"health.\n"
"\n"
"Then, every time you write the keyword [code]health[/code] in your code, "
"the computer will fetch the corresponding value in its memory for you.\n"
"\n"
"Variables work a bit like product labels in a supermarket. They are names"
" that you attach to some value. Any time, you can take the label and "
"stick it onto a new product or, in that case, a new value."
msgstr ""
"Змінні — це засіб для надання назв значенням, які ви хочете мати у своєму "
"коді та змінювати з часом.\n"
"\n"
"Наприклад, здоров'я персонажа: коли персонаж отримує удар, ви хочете, щоб "
"здоров'я знизилося. Коли він лікується, ви хочете, щоб здоров'я відновилося."
"\n"
"\n"
"Ви можете створити змінну з назвою [code]health[/code] для подання стану "
"здоров'я.\n"
"\n"
"Потім щоразу, коли ви пишете ключове слово [code]health[/code] у своєму "
"коді, комп'ютер діставатиме вам відповідне значення із пам'яті.\n"
"\n"
"Змінні працюють подібно до етикеток товарів у супермаркеті. Це назви, якими "
"ви позначаєте якесь значення. У будь-який момент ви можете взяти етикетку та "
"наклеїти її на новий товар або, в цьому випадку, на нове значення в коді."

#. Reference: while loop
#: ./course/glossary.csv:84
msgid "while loop"
msgstr "цикл while"

#. Reference: while loop
#: ./course/glossary.csv:84
msgid "while loops"
msgstr "цикли while"

#. Reference: while loop
#: ./course/glossary.csv:84
msgid ""
"A while loop instructs the computer to keep running code based on a "
"condition. While the condition is true, the loop keeps running.\n"
"\n"
"When coding while loops, you must be careful: they will keep running "
"infinitely and freeze your game if you get the condition wrong.\n"
"\n"
"That's why we recommend using the safer for loop whenever you can.\n"
"\n"
"However, there are still essential cases in which we use while loops, "
"like processing files, processing computer code, or for powerful "
"algorithms."
msgstr ""
"Цикл while спонукає комп'ютер продовжувати виконання коду, виходячи з умови. "
"Поки умова істинна, цикл продовжує виконуватись.\n"
"\n"
"При написанні циклів while будьте уважні: якщо ви неправильно виберете "
"умову, вони можуть виконуватися нескінченно і призведуть до нескінченного "
"зависання.\n"
"\n"
"Ось чому ми радимо завжди, коли це можливо, використовувати безпечніший цикл "
"for.\n"
"\n"
"Однак все ще існують особливі випадки, коли ми використовуємо цикли while, "
"наприклад, для опрацювання файлів, опрацювання комп'ютерного коду або для "
"потужних алгоритмів."

#. Reference: body
#: ./course/glossary.csv:85
msgid "body"
msgstr "тіло"

#. Reference: body
#: ./course/glossary.csv:85
msgid ""
"We talk about a loop or a function's body to refer to the lines of code "
"that are part of the loop or function."
msgstr ""
"Тілом циклу або функції ми називаємо рядки коду, які є частиною циклу або "
"функції."

#. Reference: return
#: ./course/glossary.csv:88
msgid "return"
msgstr "повернення"

#. Reference: return
#: ./course/glossary.csv:88
msgid ""
"Returning a value is the process of sending a value to the place where "
"you call a function.\n"
"\n"
"It happens when a function uses the [code]return[/code] keyword followed "
"by a value, for example: [code]return -1[/code]."
msgstr ""
"Повернення значення — це процес надсилання значення в місце, звідки ви "
"викликали функцію.\n"
"\n"
"Повернення відбувається, коли у функції використано ключове слово "
"[code]return[/code] із зазначеним після нього значенням, наприклад: [code]"
"return -1[/code]."

#. Reference: library
#: ./course/glossary.csv:89
msgid "library"
msgstr "бібліотека"

#. Reference: library
#: ./course/glossary.csv:89
msgid "libraries"
msgstr "бібліотеки"

#. Reference: library
#: ./course/glossary.csv:89
msgid ""
"A collection of valuable and reusable code bundled together by other "
"programmers to save you time. All programmers use code libraries."
msgstr ""
"Бібліотека — це колекція цінного та придатного для повторного використання "
"коду, який склали разом інші програмісти, щоб заощадити ваш час. Усі "
"програмісти використовують бібліотеки коду."

#. Reference: sprite
#: ./course/glossary.csv:90
msgid "sprite"
msgstr "спрайт"

#. Reference: sprite
#: ./course/glossary.csv:90
msgid "sprites"
msgstr "спрайти"

#. Reference: sprite
#: ./course/glossary.csv:90
msgid ""
"In computer graphics, a sprite is an image you display on the screen. We "
"generally use this word to talk about moving images, like a character, a "
"monster, or an item falling on the ground."
msgstr ""
"У комп'ютерній графіці спрайт – це зображення, яке показується на екрані. "
"Зазвичай ми використовуємо слово спрайт, коли йдеться про рухливі "
"зображення, такі як персонаж, монстр або предмет, що падає на землю."
