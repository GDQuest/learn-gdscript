# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2023-07-01 12:52+0000\n"
"Last-Translator: Deolindo <deolindojvn@gmail.com>\n"
"Language-Team: Portuguese (Brazil) <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-6-multiple-function-parameters/pt_BR/>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 5.0-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-6-multiple-function-parameters/lesson.tres:14
msgid ""
"In the previous part, you created a function to draw a square of a fixed "
"size.\n"
"\n"
"This function is a bit limiting. Instead, it would be much better if we had "
"a function to draw a square of [i]any[/i] size. Or better: any kind of "
"rectangle (a square is a specific kind of rectangle).\n"
"\n"
"In previous lessons, you used the [code]rotate()[/code] function and gave it "
"an [i]argument[/i]."
msgstr ""
"Na parte anterior, você criou uma função para desenhar um quadrado de "
"tamanho fixo.\n"
"\n"
"Essa função é um pouco limitada. Seria muito melhor se tivéssemos uma função "
"para desenhar um quadrado de [i]qualquer[/i] tamanho. Ou melhor: qualquer "
"tipo de retângulo (um quadrado é um tipo específico de retângulo).\n"
"\n"
"Nas lições anteriores, você usou a função [code]rotate()[/code] e deu a ela "
"um [i]parâmetro[/i]."

#: course/lesson-6-multiple-function-parameters/lesson.tres:38
msgid ""
"Just like [code]rotate()[/code], we can also give our function "
"[i]parameters[/i]. Parameters are labels you give to values passed to the "
"function."
msgstr ""
"Assim como a função [code]rotate()[/code], também podemos dar à nossa função "
"[i]parâmetros[/i]. Os parâmetros são nomes que você dá aos valores que são "
"passados para a função."

#: course/lesson-6-multiple-function-parameters/lesson.tres:46
msgid "Can I rotate in both directions?"
msgstr "Posso rotacionar em ambas as direções?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:48
msgid ""
"The [code]radians[/code] can be a positive or negative number, which allows "
"you to rotate both clockwise and counter-clockwise."
msgstr ""
"O [code]radiano[/code] pode ser um número positivo ou negativo, o que te "
"permite girar no sentido horário e anti-horário."

#: course/lesson-6-multiple-function-parameters/lesson.tres:58
msgid ""
"For now, please focus on the first line: [code]func rotate(radians)[/code].\n"
"\n"
"When you call [code]rotate(0.5)[/code], the computer binds the value "
"[code]0.5[/code] to the label [code]radians[/code].\n"
"\n"
"Wherever the computer sees the identifier [code]radians[/code] inside the "
"function, it replaces it with the [code]0.5[/code] value.\n"
"\n"
"The parameter name is always a label you use to refer to a [i]value[/i]. The "
"value in question can be a number, text, or anything else.\n"
"\n"
"For now, we'll stick to numbers as we have yet to see other value types."
msgstr ""
"Por enquanto, concentre-se na primeira linha: [code]func rotate(radiano)[/"
"code].\n"
"\n"
"Quando você chama a função [code]rotate(0.5)[/code], o computador vincula o "
"valor [code]0.5[/code] ao nome [code]radiano[/code].\n"
"\n"
"Sempre que o computador vê o identificador [code]radiano[/code] dentro da "
"função, ele substitui o nome pelo valor [code]0.5[/code].\n"
"\n"
"O nome do parâmetro é sempre um nome que você usa para se referir a um "
"[i]valor[/i]. O valor em questão pode ser um número, texto ou qualquer outra "
"coisa.\n"
"\n"
"Por enquanto, vamos continuar a usar números, pois ainda temos que ver "
"outros tipos de valores."

#: course/lesson-6-multiple-function-parameters/lesson.tres:74
msgid "What is a function parameter?"
msgstr "O que é um parâmetro de uma função?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:77
msgid ""
"A parameter is a label that represents a value.\n"
"\n"
"The value in question can change: it depends on what you put in parentheses "
"when calling a function."
msgstr ""
"Um parâmetro é um nome que representa um valor.\n"
"\n"
"O valor em questão pode mudar: depende do que você coloca entre parênteses "
"ao chamar uma função."

#: course/lesson-6-multiple-function-parameters/lesson.tres:80
#: course/lesson-6-multiple-function-parameters/lesson.tres:81
msgid "A label you give to a value the function receives."
msgstr "Um nome que você dá a um valor que a função recebe."

#: course/lesson-6-multiple-function-parameters/lesson.tres:80
msgid "A number you use to make calculations."
msgstr "Um número que você usa para fazer cálculos."

#: course/lesson-6-multiple-function-parameters/lesson.tres:80
msgid "The name of a function."
msgstr "O nome de uma função."

#: course/lesson-6-multiple-function-parameters/lesson.tres:88
msgid "How to create functions with parameters"
msgstr "Como criar funções com parâmetros"

#: course/lesson-6-multiple-function-parameters/lesson.tres:90
msgid ""
"You can give your function parameters when writing its [i]definition[/i] "
"(the line starting with the [code]func[/code] keyword).\n"
"\n"
"To do so, you add a name inside of the parentheses."
msgstr ""
"Você pode dar parâmetros para suas funções ao escrever sua [i]definição[/i] "
"(a linha que começa com a palavra-chave [code]func[/code]).\n"
"\n"
"Para fazer isso, você adiciona um nome dentro dos parênteses."

#: course/lesson-6-multiple-function-parameters/lesson.tres:112
msgid ""
"You can give parameters any name. How you name functions and parameters is "
"up to you. \n"
"\n"
"Just remember that names cannot contain spaces. To write parameter names "
"with multiple words, you need to use underscores.\n"
"\n"
"The following function definition is exactly equivalent to the previous one."
msgstr ""
"Você pode dar qualquer nome aos parâmetros. Você decide como nomear suas "
"funções e parâmetros.\n"
"\n"
"Lembre-se de que os nomes não podem conter espaços. Para escrever nomes de "
"parâmetros com várias palavras, você precisa usar o sinal de underscore.\n"
"\n"
"A definição de função a seguir é exatamente equivalente à anterior."

#: course/lesson-6-multiple-function-parameters/lesson.tres:136
msgid ""
"Parameters make your code easier to reuse.\n"
"\n"
"Here's an example with a function to draw any square. Use the slider to "
"change the value passed to the function and draw squares of different sizes."
msgstr ""
"Os parâmetros facilitam a reutilização do seu código.\n"
"\n"
"Aqui está um exemplo de uma função para desenhar qualquer quadrado. Use o "
"slider para alterar o valor passado para a função e desenhar quadrados de "
"tamanhos diferentes."

#: course/lesson-6-multiple-function-parameters/lesson.tres:156
msgid "Which is the correct syntax for a function definition?"
msgstr "Qual é a sintaxe correta para uma definição de função?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:159
msgid ""
"To define a function, you need to start with the [code]func[/code] keyword "
"followed by a space, the [code]function_name[/code], and optional parameters "
"inside parentheses.\n"
"\n"
"You must end the line with a colon, which defines a new code block. We'll "
"see moving forward that keywords other than [code]func[/code] require a "
"colon at the end of the line."
msgstr ""
"Para definir uma função, você precisa começar com a palavra-chave "
"[code]func[/code] seguida por um espaço, o [code]nome_da_função[/code] e "
"parâmetros opcionais dentro dos parênteses.\n"
"\n"
"Você deve terminar a linha com o sinal de dois pontos, que define um novo "
"bloco de código. Vamos ver mais pra frente que outras palavras-chave "
"diferentes de [code]func[/code] também vão exigir os dois pontos no final da "
"linha."

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
#: course/lesson-6-multiple-function-parameters/lesson.tres:163
msgid "func function_name(parameter_name):"
msgstr "func nome_da_função(nome_do_parâmetro):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
msgid "func (function_name): parameter_name"
msgstr "func (nome_da_função): nome_do_parâmetro"

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
msgid "func function_name(parameter_name)"
msgstr "func nome_da_função(nome_do_parâmetro)"

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
msgid "function_name(parameter_name):"
msgstr "nome_da_função(nome_do_parâmetro):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:170
msgid "Functions can have multiple parameters"
msgstr "Funções podem ter vários parâmetros"

#: course/lesson-6-multiple-function-parameters/lesson.tres:172
msgid ""
"You can use multiple parameters in a function. In fact, you can use as many "
"as you [i]need[/i].\n"
"\n"
"To separate the function parameters, you need to write a comma between them."
msgstr ""
"Você pode usar vários parâmetros em uma função. Na verdade, você pode usar "
"quantos parâmetros você [i]precisar[/i].\n"
"\n"
"Para separar os parâmetros da função, você precisa escrever uma vírgula "
"entre eles."

#: course/lesson-6-multiple-function-parameters/lesson.tres:192
msgid "Must I write spaces between function parameters?"
msgstr "Devo escrever  espaços entre os parâmetros da função?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:194
msgid ""
"In a function definition, you must have a space between the [code]func[/"
"code] keyword and the function name.\n"
"\n"
"However, because we use the comma to separate parameters, it doesn't matter "
"if you use spaces between parameters. As long as you have the comma, either "
"syntax is correct.\n"
"\n"
"We often use spaces after the comma for readability."
msgstr ""
"Em uma definição de função, você deve ter um espaço entre a palavra-chave "
"[code]func[/code] e o nome da função.\n"
"\n"
"No entanto, como usamos a vírgula para separar os parâmetros, não importa se "
"você usa espaços entre os parâmetros. Contanto que você tenha a vírgula, "
"qualquer uma das sintaxes está correta.\n"
"\n"
"Nós costumamos a usar espaços após a vírgula para facilitar a leitura do "
"código."

#: course/lesson-6-multiple-function-parameters/lesson.tres:208
msgid ""
"The following example defines a function that uses two parameters to move an "
"entity on both the X and Y axes."
msgstr ""
"O exemplo a seguir define uma função que usa dois parâmetros para mover uma "
"entidade nos eixos X e Y."

#: course/lesson-6-multiple-function-parameters/lesson.tres:226
msgid "How should I name my functions and parameters?"
msgstr "De que forma eu devo nomear minhas funções e parâmetros?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:228
msgid ""
"The names of functions, parameters, or other things in your code are "
"entirely up to you.\n"
"\n"
"They are written by us programmers for other programmers. You want to use "
"the names that make the most sense to you and fellow programmers.\n"
"\n"
"You could absolutely write single-letter names like in maths classes: "
"[code]a[/code], [code]b[/code], [code]f[/code].\n"
"\n"
"You can also write abbreviated names like [code]pos[/code] for position, "
"[code]bg[/code] for background, and so on.\n"
"\n"
"Many programmers do either or both of the above.\n"
"\n"
"At GDQuest, we favor complete and explicit names.\n"
"\n"
"We generally try to write code that is explicit and relatively easy to "
"read.\n"
"\n"
"Right now, you have to enter every letter when you code, so long names may "
"feel inconvenient.\n"
"\n"
"However, this is good for learning: it trains your fingers to [ignore]type "
"precisely.\n"
"\n"
"Then, after you finish this course, you will see that the computer assists "
"you a lot when you code real games with a feature called auto-completion.\n"
"\n"
"Based on a few characters you [ignore]type, it will offer you to complete "
"long names."
msgstr ""
"Os nomes de funções, parâmetros ou outras coisas em seu código dependem "
"inteiramente de você.\n"
"\n"
"Eles são escritos por nós programadores para outros programadores. Você vai "
"querer usar os nomes que fazem mais sentido para você e seus colegas "
"programadores.\n"
"\n"
"Você poderia muito bem escrever nomes de uma única letra como nas aulas de "
"matemática: [code]a[/code], [code]b[/code], [code]f[/code].\n"
"\n"
"Você também pode escrever nomes abreviados como [code]pos[/code] para "
"posição, [code]bg[/code] para background e assim por diante.\n"
"\n"
"Muitos programadores fazem uma ou ambas as opções acima.\n"
"\n"
"Na GDQuest, preferimos nomes completos e explícitos.\n"
"\n"
"Geralmente tentamos escrever código que seja explícito e relativamente fácil "
"de ler.\n"
"\n"
"No momento, você precisa digitar todas as letras ao programar, portanto, "
"nomes longos podem parecer inconvenientes.\n"
"\n"
"No entanto, isso é bom para aprender: ele treina seus dedos para "
"[ignore]digitar com precisão.\n"
"\n"
"Então, depois de terminar este curso, você verá que o computador o auxilia "
"muito na hora de programar jogos reais com um recurso chamado auto-"
"completar.\n"
"\n"
"Com base em alguns caracteres que você [ignore]digita, ele oferecerá nomes "
"longos completos."

#: course/lesson-6-multiple-function-parameters/lesson.tres:256
msgid "When defining a function, parameters are..."
msgstr "Ao definir uma função, os parâmetros são..."

#: course/lesson-6-multiple-function-parameters/lesson.tres:259
msgid ""
"You can define functions with or without parameters, depending on your needs."
msgstr ""
"Você pode definir funções com ou sem parâmetros, depende da suas "
"necessidades."

#: course/lesson-6-multiple-function-parameters/lesson.tres:260
#: course/lesson-6-multiple-function-parameters/lesson.tres:261
msgid "Optional"
msgstr "Opcional"

#: course/lesson-6-multiple-function-parameters/lesson.tres:260
msgid "Mandatory"
msgstr "Obrigatório"

#: course/lesson-6-multiple-function-parameters/lesson.tres:268
msgid ""
"What's the correct syntax to define a function with multiple parameters?"
msgstr ""
"Qual é a sintaxe correta para definir uma função com vários parâmetros?"

#: course/lesson-6-multiple-function-parameters/lesson.tres:271
msgid ""
"You always write the function parameters inside of the parentheses. To "
"define multiple parameters, you separate them with a comma."
msgstr ""
"Você sempre escreve os parâmetros da função dentro dos parênteses. Para "
"definir vários parâmetros, você separa eles com uma vírgula."

#: course/lesson-6-multiple-function-parameters/lesson.tres:272
#: course/lesson-6-multiple-function-parameters/lesson.tres:273
msgid "func function_name(parameter_1, parameter_2, ...):"
msgstr "func nome_da_função(parâmetro_1, parâmetro_2, ...):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:272
msgid "func function_name(parameter_1 parameter_2 ...):"
msgstr "func nome_da_função(parâmetro_1 parâmetro_2 ...):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:272
msgid "func function_name(): parameter_1, parameter_2, ..."
msgstr "func nome_da_função(): parâmetro_1, parâmetro_2, ..."

#: course/lesson-6-multiple-function-parameters/lesson.tres:282
msgid ""
"Now it's your turn to create a function with multiple parameters: a function "
"to draw rectangles of any size."
msgstr ""
"Agora é sua vez de criar uma função com vários parâmetros: uma função para "
"desenhar retângulos de qualquer tamanho."

#: course/lesson-6-multiple-function-parameters/lesson.tres:290
msgid "Drawing corners of different sizes"
msgstr "Desenhando ângulos de 90° de tamanhos diferentes"

#: course/lesson-6-multiple-function-parameters/lesson.tres:291
msgid ""
"Before we create a rectangle of any size, let's first see how we can use "
"parameters to draw simpler shapes.\n"
"\n"
"Here we have an incomplete function that will draw corners with lines of any "
"length, but it's missing its [code]length[/code] parameter.\n"
"\n"
"The function will move the turtle forward an amount defined by the parameter "
"[code]length[/code], turn [code]90[/code] degrees, then move forward "
"[code]length[/code] pixels.\n"
"\n"
"Complete the [code]draw_corner()[/code] function so it uses the "
"[code]length[/code] parameter to draw corners."
msgstr ""
"Antes de criarmos um retângulo de qualquer tamanho, vamos primeiro ver como "
"podemos usar parâmetros para desenhar formas mais simples.\n"
"\n"
"Aqui temos uma função incompleta que irá desenhar ângulos de 90° com linhas "
"de qualquer comprimento, mas está faltando o parâmetro [code]length[/code].\n"
"\n"
"A função vai mover a tartaruga para frente pela quantidade definida pelo "
"parâmetro [code]length[/code], vai girar [code]90[/code] graus, então vai "
"mover para frente pela quantidade de [code]length[/code] pixels.\n"
"\n"
"Complete a função [code]draw_corner()[/code] para que ela use o parâmetro "
"[code]length[/code] para desenhar ângulos de 90°."

#: course/lesson-6-multiple-function-parameters/lesson.tres:309
msgid ""
"Using function parameters, code a function you can reuse to draw corners "
"with lines of varying sizes."
msgstr ""
"Usando parâmetros de função, programe uma função que você pode reutilizar "
"para desenhar ângulos de 90° com linhas de tamanhos variados."

#: course/lesson-6-multiple-function-parameters/lesson.tres:314
msgid "Using multiple parameters"
msgstr "Usando vários parâmetros"

#: course/lesson-6-multiple-function-parameters/lesson.tres:315
msgid ""
"In this practice, we'll improve our [code]draw_corner()[/code] function so "
"the angle can also vary.\n"
"\n"
"Add the [code]angle[/code] parameter after the [code]length[/code] parameter "
"in the [code]draw_corner()[/code] function and use it to draw corners of "
"varying angles."
msgstr ""
"Neste exercício, vamos melhorar nossa função [code]draw_corner()[/code] para "
"que o ângulo também possa variar.\n"
"\n"
"Adicione o parâmetro [code]angle[/code] após o parâmetro [code]length[/code] "
"na função [code]draw_corner()[/code] e use ela para desenhar bordas de "
"ângulos variados."

#: course/lesson-6-multiple-function-parameters/lesson.tres:329
msgid "With two parameters, code a function to draw corners with any angle."
msgstr ""
"Com dois parâmetros, programe uma função para desenhar ângulos de 90° com "
"qualquer ângulo."

#: course/lesson-6-multiple-function-parameters/lesson.tres:334
msgid "Drawing squares of any size"
msgstr "Desenhando quadrados de qualquer tamanho"

#: course/lesson-6-multiple-function-parameters/lesson.tres:335
msgid ""
"We want a function to draw squares of any size.\n"
"\n"
"We could use these squares as outlines when selecting units in a tactical "
"game, as a frame for items in an inventory, and more.\n"
"\n"
"Create a function named [code]draw_square()[/code] that takes one parameter: "
"the [code]length[/code] of the square's sides.\n"
"\n"
"[b]The turtle should face towards the right when starting or completing a "
"square.[/b]\n"
"\n"
"Be sure to call [b]turn_right(90)[/b]  enough times in your function to do "
"so."
msgstr ""
"Queremos uma função para desenhar quadrados de qualquer tamanho.\n"
"\n"
"Poderíamos usar esses quadrados como contornos ao selecionar unidades em um "
"jogo tático, como moldura para itens em um inventário e muito mais.\n"
"\n"
"Crie uma função chamada [code]draw_square()[/code] que receba um parâmetro: "
"o [code]length[/code] (comprimento) dos lados do quadrado.\n"
"\n"
"[b]A tartaruga deve ficar virada para a direita ao iniciar ou completar um "
"quadrado.[/b]\n"
"\n"
"Certifique-se de chamar [b]turn_right(90)[/b] vezes suficientes em sua "
"função para fazer isso."

#: course/lesson-6-multiple-function-parameters/lesson.tres:352
msgid ""
"In the previous lesson, your function would draw squares of a fixed size. "
"Using a parameter, code a function to draw squares of any size."
msgstr ""
"Na lição anterior, sua função podia desenhar quadrados de tamanho fixo. "
"Usando um parâmetro, programe uma função para desenhar quadrados de qualquer "
"tamanho."

#: course/lesson-6-multiple-function-parameters/lesson.tres:357
msgid "Drawing rectangles of any size"
msgstr "Desenhando retângulos de qualquer tamanho"

#: course/lesson-6-multiple-function-parameters/lesson.tres:358
msgid ""
"Let's make our square drawing function more flexible to include rectangles "
"of varying sizes.\n"
"\n"
"Your job is to code a function named [code]draw_rectangle()[/code] that "
"takes two parameters: the [code]length[/code] and the [code]height[/code] of "
"the rectangle.\n"
"\n"
"[b]The turtle should face towards the right when starting or completing a "
"rectangle.[/b]\n"
"\n"
"Note that we could still draw a square with [code]draw_rectangle()[/code] by "
"having the [code]length[/code] and [code]height[/code] equal the same value."
msgstr ""
"Vamos tornar nossa função de desenhar quadrados mais flexível para incluir "
"retângulos de tamanhos variados.\n"
"\n"
"Seu trabalho é programar uma função chamada [code]draw_rectangle()[/code] "
"que recebe dois parâmetros: o [code]length[/code] (comprimento) e o "
"[code]height[/code] (altura) do retângulo.\n"
"\n"
"[b]A tartaruga deve ficar voltada para a direita ao iniciar ou completar um "
"retângulo.[/b]\n"
"\n"
"Observe que ainda podemos desenhar um quadrado com [code]draw_rectangle()[/"
"code] fazendo com que [code]length[/code] e [code]height[/code] sejam iguais."

#: course/lesson-6-multiple-function-parameters/lesson.tres:381
msgid ""
"With one parameter, you can make squares of any size. With two, you can draw "
"any rectangle! You'll do so in this practice."
msgstr ""
"Com um parâmetro, você pode fazer quadrados de qualquer tamanho. Com dois, "
"você pode desenhar qualquer retângulo! Você vai fazer isso nessa prática."

#: course/lesson-6-multiple-function-parameters/lesson.tres:385
msgid "Your First Function Parameter"
msgstr "Seu Primeiro Parâmetro de Função"
