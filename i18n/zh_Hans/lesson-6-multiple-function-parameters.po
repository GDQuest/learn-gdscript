# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2024-02-29 13:51+0000\n"
"Last-Translator: 二中 <worigoule@gmail.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-6-multiple-function-parameters/zh_Hans/>\n"
"Language: zh_Hans\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.5-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-6-multiple-function-parameters/lesson.tres:14
msgid ""
"In the previous part, you created a function to draw a square of a fixed "
"size.\n"
"\n"
"This function is a bit limiting. Instead, it would be much better if we had "
"a function to draw a square of [i]any[/i] size. Or better: any kind of "
"rectangle (a square is a specific kind of rectangle).\n"
"\n"
"In previous lessons, you used the [code]rotate()[/code] function and gave it "
"an [i]argument[/i]."
msgstr ""
"在上一部分中，你创建了一个函数来绘制一个固定大小的正方形。\n"
"\n"
"这个功能有点限制。 相反，如果我们有一个函数来绘制一个 [i]任意[/i] "
"大小的正方形会更好。 或者更好的是：任何类型的矩形（正方形是特殊的矩形）。\n"
"\n"
"在之前的课程中，你使用了 [code]rotate()[/code] 函数并给了它一个 [i] "
"参数[/i]。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:38
msgid ""
"Just like [code]rotate()[/code], we can also give our function "
"[i]parameters[/i]. Parameters are labels you give to values passed to the "
"function."
msgstr "就像 [code]rotate()[/code] 一样，我们也可以给我们的函数 [i]参数[/i]。 "
"参数是你传递给函数的值的标签。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:46
msgid "Can I rotate in both directions?"
msgstr "我可以向两个方向旋转吗？"

#: course/lesson-6-multiple-function-parameters/lesson.tres:48
msgid ""
"The [code]radians[/code] can be a positive or negative number, which allows "
"you to rotate both clockwise and counter-clockwise."
msgstr "[code]radians[/code] 可以是正数或负数，它允许你顺时针和逆时针旋转。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:58
msgid ""
"For now, please focus on the first line: [code]func rotate(radians)[/code].\n"
"\n"
"When you call [code]rotate(0.5)[/code], the computer binds the value "
"[code]0.5[/code] to the label [code]radians[/code].\n"
"\n"
"Wherever the computer sees the identifier [code]radians[/code] inside the "
"function, it replaces it with the [code]0.5[/code] value.\n"
"\n"
"The parameter name is always a label you use to refer to a [i]value[/i]. The "
"value in question can be a number, text, or anything else.\n"
"\n"
"For now, we'll stick to numbers as we have yet to see other value types."
msgstr ""
"现在，请关注第一行：[code]func rotate(radians)[/code]。\n"
"\n"
"当你调用 [code]rotate(0.5)[/code] 时，计算机会将值 [code]0.5[/code] "
"绑定到标签 [code]radians[/code]。\n"
"\n"
"计算机在函数内任何地方看到标识符 [code]radians[/code]，都会将其替换为 [code]0"
".5[/code] 。\n"
"\n"
"参数名称始终是你用来引用 [i] 值[/i] 的标签。 "
"这些值可以是数字、文本或其他任何内容。\n"
"\n"
"目前，我们只使用数字，因为我们还没有接触到其他类型的值。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:74
msgid "What is a function parameter?"
msgstr "什么是函数参数？"

#: course/lesson-6-multiple-function-parameters/lesson.tres:77
msgid ""
"A parameter is a label that represents a value.\n"
"\n"
"The value in question can change: it depends on what you put in parentheses "
"when calling a function."
msgstr ""
"参数是表示值的标签。\n"
"\n"
"调用时值可能会改变：这取决于你在调用函数时放入括号中的内容。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:80
#: course/lesson-6-multiple-function-parameters/lesson.tres:81
msgid "A label you give to a value the function receives."
msgstr "你为函数接收的值赋予的标签。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:80
msgid "A number you use to make calculations."
msgstr "用于计算的数字。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:80
msgid "The name of a function."
msgstr "函数的名称。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:88
msgid "How to create functions with parameters"
msgstr "如何创建带参数的函数"

#: course/lesson-6-multiple-function-parameters/lesson.tres:90
msgid ""
"You can give your function parameters when writing its [i]definition[/i] "
"(the line starting with the [code]func[/code] keyword).\n"
"\n"
"To do so, you add a name inside of the parentheses."
msgstr ""
"你可以在 写函数的[i]定义[/i]（以 [code]func[/code] "
"关键字开头的行）时提供函数参数。\n"
"\n"
"为此，要在括号内添加一个名称。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:112
msgid ""
"You can give parameters any name. How you name functions and parameters is "
"up to you. \n"
"\n"
"Just remember that names cannot contain spaces. To write parameter names "
"with multiple words, you need to use underscores.\n"
"\n"
"The following function definition is exactly equivalent to the previous one."
msgstr ""
"你可以为参数指定任何名称。 如何命名函数和参数取决于你。\n"
"\n"
"只不过要留意，名称不能包含空格。 "
"如果要在一个名称里用到多个单词，你需要使用下划线分隔。\n"
"\n"
"下面的函数定义与上一个完全等价。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:136
msgid ""
"Parameters make your code easier to reuse.\n"
"\n"
"Here's an example with a function to draw any square. Use the slider to "
"change the value passed to the function and draw squares of different sizes."
msgstr ""
"参数使你的代码更易于重复使用。\n"
"\n"
"这是一个绘制任意正方形的函数的示例。 "
"使用滑块更改传递给函数的值并绘制不同大小的正方形。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:156
msgid "Which is the correct syntax for a function definition?"
msgstr "下列哪个函数定义的语法是正确的？"

#: course/lesson-6-multiple-function-parameters/lesson.tres:159
msgid ""
"To define a function, you need to start with the [code]func[/code] keyword "
"followed by a space, the [code]function_name[/code], and optional parameters "
"inside parentheses.\n"
"\n"
"You must end the line with a colon, which defines a new code block. We'll "
"see moving forward that keywords other than [code]func[/code] require a "
"colon at the end of the line."
msgstr ""
"要定义一个函数，你需要以 [code]func[/code] "
"关键字开头，后跟一个空格、[code]function_name[/code] 和括号内的可选参数。\n"
"\n"
"你必须以冒号结束该行，它定义了一个新的代码块。 之后我们还会看到 "
"[code]func[/code] 以外的关键字也需要在行尾用冒号。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
#: course/lesson-6-multiple-function-parameters/lesson.tres:163
msgid "func function_name(parameter_name):"
msgstr "func function_name(parameter_name):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
msgid "func (function_name): parameter_name"
msgstr "func (function_name): parameter_name"

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
msgid "func function_name(parameter_name)"
msgstr "func function_name(parameter_name)"

#: course/lesson-6-multiple-function-parameters/lesson.tres:162
msgid "function_name(parameter_name):"
msgstr "function_name(parameter_name):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:170
msgid "Functions can have multiple parameters"
msgstr "函数可以有多个参数"

#: course/lesson-6-multiple-function-parameters/lesson.tres:172
msgid ""
"You can use multiple parameters in a function. In fact, you can use as many "
"as you [i]need[/i].\n"
"\n"
"To separate the function parameters, you need to write a comma between them."
msgstr ""
"你可以在一个函数中使用多个参数。 事实上，你 [i] 想要多少 [/i] 都可以。\n"
"\n"
"要分隔函数参数，你需要在它们之间写一个逗号。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:192
msgid "Must I write spaces between function parameters?"
msgstr "我必须在函数参数之间写空格吗？"

#: course/lesson-6-multiple-function-parameters/lesson.tres:194
msgid ""
"In a function definition, you must have a space between the [code]func[/"
"code] keyword and the function name.\n"
"\n"
"However, because we use the comma to separate parameters, it doesn't matter "
"if you use spaces between parameters. As long as you have the comma, either "
"syntax is correct.\n"
"\n"
"We often use spaces after the comma for readability."
msgstr ""
"在函数定义中，[code]func[/code] 关键字和函数名之间必须有一个空格。\n"
"\n"
"但是，因为我们已经有逗号分隔参数，所以参数之间是否加空格无关紧要。 "
"只要你有逗号，加不加额外的空格都是正确的。\n"
"\n"
"为了便于阅读，我们才经常在逗号后使用空格。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:208
msgid ""
"The following example defines a function that uses two parameters to move an "
"entity on both the X and Y axes."
msgstr "以下示例定义了一个函数，该函数使用两个参数在 X 轴和 Y 轴上移动实体。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:226
msgid "How should I name my functions and parameters?"
msgstr "我应该如何命名我的函数和参数？"

#: course/lesson-6-multiple-function-parameters/lesson.tres:228
msgid ""
"The names of functions, parameters, or other things in your code are "
"entirely up to you.\n"
"\n"
"They are written by us programmers for other programmers. You want to use "
"the names that make the most sense to you and fellow programmers.\n"
"\n"
"You could absolutely write single-letter names like in maths classes: "
"[code]a[/code], [code]b[/code], [code]f[/code].\n"
"\n"
"You can also write abbreviated names like [code]pos[/code] for position, "
"[code]bg[/code] for background, and so on.\n"
"\n"
"Many programmers do either or both of the above.\n"
"\n"
"At GDQuest, we favor complete and explicit names.\n"
"\n"
"We generally try to write code that is explicit and relatively easy to "
"read.\n"
"\n"
"Right now, you have to enter every letter when you code, so long names may "
"feel inconvenient.\n"
"\n"
"However, this is good for learning: it trains your fingers to [ignore]type "
"precisely.\n"
"\n"
"Then, after you finish this course, you will see that the computer assists "
"you a lot when you code real games with a feature called auto-completion.\n"
"\n"
"Based on a few characters you [ignore]type, it will offer you to complete "
"long names."
msgstr ""
"代码中的函数、参数或其他内容的名称完全取决于你。\n"
"\n"
"它们是我们作为程序员为其他程序员写的。你应该使用你和你的同事都最容易看懂的名"
"称。\n"
"\n"
"你确实可以像上数学课那样只用一个字母的名称：[code]a[/code]、[code]b[/code]、["
"code]f[/code]。\n"
"\n"
"你还可以写缩写名称，例如 [code]pos[/code] "
"表示位置（posiotion），[code]bg[/code] 表示背景（background），等等。\n"
"\n"
"许多程序员都或多或少会用到上面这两种方式。\n"
"\n"
"在 GDQuest课程里，我们倾向于完整和明确的名称。\n"
"\n"
"我们应该时刻努力写出明确且相对容易阅读的代码。\n"
"\n"
"现在，你必须在编码时输入每个字母，因此长名称可能会让人感到不便。\n"
"\n"
"但是，这对学习有好处：它可以训练你的手指打字做到随心所欲。\n"
"\n"
"然后，在你完成本课程后，你会发现当你实际编写游戏时，计算机会使用一种称为自动"
"补全的功能协助你。\n"
"\n"
"根据你键入的几个字符，它会为你补完完整的长名称。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:256
msgid "When defining a function, parameters are..."
msgstr "定义函数时，参数是..."

#: course/lesson-6-multiple-function-parameters/lesson.tres:259
msgid ""
"You can define functions with or without parameters, depending on your needs."
msgstr "定义函数可带参数可不带，这取决于你的需求。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:260
#: course/lesson-6-multiple-function-parameters/lesson.tres:261
msgid "Optional"
msgstr "可选"

#: course/lesson-6-multiple-function-parameters/lesson.tres:260
msgid "Mandatory"
msgstr "硬性要求"

#: course/lesson-6-multiple-function-parameters/lesson.tres:268
msgid ""
"What's the correct syntax to define a function with multiple parameters?"
msgstr "定义具有多个参数的函数的正确语法是什么？"

#: course/lesson-6-multiple-function-parameters/lesson.tres:271
msgid ""
"You always write the function parameters inside of the parentheses. To "
"define multiple parameters, you separate them with a comma."
msgstr "你始终得将函数参数写在括号内。 要定义多个参数，请用逗号分隔它们。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:272
#: course/lesson-6-multiple-function-parameters/lesson.tres:273
msgid "func function_name(parameter_1, parameter_2, ...):"
msgstr "func 函数名(参数_1, 参数_2, ...):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:272
msgid "func function_name(parameter_1 parameter_2 ...):"
msgstr "func 函数名(参数_1 参数_2 ...):"

#: course/lesson-6-multiple-function-parameters/lesson.tres:272
msgid "func function_name(): parameter_1, parameter_2, ..."
msgstr "func 函数名(): 参数_1, 参数_2, ..."

#: course/lesson-6-multiple-function-parameters/lesson.tres:282
msgid ""
"Now it's your turn to create a function with multiple parameters: a function "
"to draw rectangles of any size."
msgstr "现在轮到你来创建一个多参数的函数了：一个可以绘制任意大小矩形的函数。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:290
msgid "Drawing corners of different sizes"
msgstr "绘制不同大小的角"

#: course/lesson-6-multiple-function-parameters/lesson.tres:291
msgid ""
"Before we create a rectangle of any size, let's first see how we can use "
"parameters to draw simpler shapes.\n"
"\n"
"Here we have an incomplete function that will draw corners with lines of any "
"length, but it's missing its [code]length[/code] parameter.\n"
"\n"
"The function will move the turtle forward an amount defined by the parameter "
"[code]length[/code], turn [code]90[/code] degrees, then move forward "
"[code]length[/code] pixels.\n"
"\n"
"Complete the [code]draw_corner()[/code] function so it uses the "
"[code]length[/code] parameter to draw corners."
msgstr ""
"在我们创建任意大小的矩形之前，让我们先看看如何使用参数来绘制更简单的形状。\n"
"\n"
"这里我们有一个不完整的函数，它可以用任意长度的线画直角，但是它缺少它的 "
"[code]length[/code] 参数。\n"
"\n"
"该函数将使海龟向前移动一个由参数 [code]length[/code] 定义的量，转动 "
"[code]90[/code] 度，然后向前移动 [code]length[/code] 个像素。\n"
"\n"
"补全 [code]draw_corner()[/code] 函数，使其能使用 [code]length[/code] "
"参数绘制角。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:309
msgid ""
"Using function parameters, code a function you can reuse to draw corners "
"with lines of varying sizes."
msgstr "使用函数参数，编写一个可以重复使用的函数，绘制边长不同的角。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:314
msgid "Using multiple parameters"
msgstr "使用多个参数"

#: course/lesson-6-multiple-function-parameters/lesson.tres:315
msgid ""
"In this practice, we'll improve our [code]draw_corner()[/code] function so "
"the angle can also vary.\n"
"\n"
"Add the [code]angle[/code] parameter after the [code]length[/code] parameter "
"in the [code]draw_corner()[/code] function and use it to draw corners of "
"varying angles."
msgstr ""
"在这个练习中，我们将改进我们的 [code]draw_corner()[/code] "
"函数，以便角度也可以变化。\n"
"\n"
"将 [code]angle[/code] 参数添加到 [code]draw_corner()[/code] "
"函数中，放在[code]length[/code]参数之后，并使用它来绘制不同角度的角。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:329
msgid "With two parameters, code a function to draw corners with any angle."
msgstr "使用两个参数，编写一个函数来绘制任意角度的角。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:334
msgid "Drawing squares of any size"
msgstr "绘制任意大小的正方形"

#: course/lesson-6-multiple-function-parameters/lesson.tres:335
msgid ""
"We want a function to draw squares of any size.\n"
"\n"
"We could use these squares as outlines when selecting units in a tactical "
"game, as a frame for items in an inventory, and more.\n"
"\n"
"Create a function named [code]draw_square()[/code] that takes one parameter: "
"the [code]length[/code] of the square's sides.\n"
"\n"
"[b]The turtle should face towards the right when starting or completing a "
"square.[/b]\n"
"\n"
"Be sure to call [b]turn_right(90)[/b]  enough times in your function to do "
"so."
msgstr ""
"我们想要一个函数来绘制任意大小的正方形。\n"
"\n"
"我们可以将这些正方形用作战术游戏中选择单位时出现的轮廓，背包中物品显示的边框"
"等等。\n"
"\n"
"创建一个名为 [code]draw_square()[/code] 的函数，它有一个参数：正方形边的 "
"[code]length[/code]。\n"
"\n"
"[b]开始或画完一个矩形时，乌龟应该面向右侧。[/b]\n"
"\n"
"为到达上述效果，请确保在你的函数中调用足够次的 [b]turn_right(90)[/b] 函数。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:352
msgid ""
"In the previous lesson, your function would draw squares of a fixed size. "
"Using a parameter, code a function to draw squares of any size."
msgstr "在上一课中，你的函数能够绘制固定大小的正方形。 "
"通过增加一个参数，编写一个函数来绘制任意大小的正方形。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:357
msgid "Drawing rectangles of any size"
msgstr "绘制任意大小的矩形"

#: course/lesson-6-multiple-function-parameters/lesson.tres:358
msgid ""
"Let's make our square drawing function more flexible to include rectangles "
"of varying sizes.\n"
"\n"
"Your job is to code a function named [code]draw_rectangle()[/code] that "
"takes two parameters: the [code]length[/code] and the [code]height[/code] of "
"the rectangle.\n"
"\n"
"[b]The turtle should face towards the right when starting or completing a "
"rectangle.[/b]\n"
"\n"
"Note that we could still draw a square with [code]draw_rectangle()[/code] by "
"having the [code]length[/code] and [code]height[/code] equal the same value."
msgstr ""
"让我们来把矩形绘图功能做得更加灵活，能画出各种各样的矩形。\n"
"\n"
"你的任务是编写一个名为 [code]draw_rectangle()[/code] 的函数，它接受两个参数："
"矩形的 [code]length[/code] 和 [code]height[/code]。\n"
"\n"
"[b]开始或画完一个矩形时，乌龟应该面向右侧。[/b]\n"
"\n"
"要留意我们还是可以用 [code]draw_rectangle()[/code]绘制正方形，给 "
"[code]length[/code] 和 [code]height[/code] 相同的值就行了。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:381
msgid ""
"With one parameter, you can make squares of any size. With two, you can draw "
"any rectangle! You'll do so in this practice."
msgstr "使用一个参数，你可以制作任意大小的正方形。 有了两个，你可以绘制任何矩形！ "
"你将在本练习中这样做。"

#: course/lesson-6-multiple-function-parameters/lesson.tres:385
msgid "Your First Function Parameter"
msgstr "你的第一个函数参数"
