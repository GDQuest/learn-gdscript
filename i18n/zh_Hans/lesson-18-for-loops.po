# Translations template for Learn GDScript From Zero.
# Copyright (C) 2022 GDQuest
# This file is distributed under the same license as the Learn GDScript From
# Zero project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Learn GDScript From Zero\n"
"Report-Msgid-Bugs-To: https://github.com/GDQuest/learn-gdscript\n"
"POT-Creation-Date: 2023-05-16 09:25+0200\n"
"PO-Revision-Date: 2023-09-14 03:34+0000\n"
"Last-Translator: KeJun <kejun1997@gmail.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"learn-gdscript-from-zero/lesson-18-for-loops/zh_Hans/>\n"
"Language: zh_Hans\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.0.1-dev\n"
"Generated-By: Babel 2.9.1\n"

#: course/lesson-18-for-loops/lesson.tres:14
msgid ""
"In the last lesson, we looked at [code]while[/code] loops. We found they "
"were useful if we don't know how many times we should repeat code. \n"
"\n"
"However, they could result in infinite loops if we're not careful.\n"
"\n"
"The loop below never ends because we never increment [code]number[/code]."
msgstr ""
"在上一课中，我们学习了 [code]while[/code] 循环。 如果我们不知道应该重复多少次"
"代码，我们发现它们很有用。\n"
"\n"
"但是，如果我们不小心，它们可能会导致无限循环。\n"
"\n"
"下面的循环永远不会结束，因为我们永远不会增加 [code]number[/code]。"

#: course/lesson-18-for-loops/lesson.tres:38
msgid ""
"There's a safer and often easier kind of loop: the [code]for[/code] loop.\n"
"\n"
"We'll look at it in this lesson.\n"
"\n"
"Unlike [code]while[/code] loops, [code]for[/code] loops don't run "
"infinitely, so it's much less likely that you'll get bugs in your game. "
"[b]We recommend favoring for loops over while loops because of this[/b].\n"
"\n"
"Let's change the code above to use a [code]for[/code] loop instead.\n"
"\n"
"The loop below will change the [code]cell[/code] three times."
msgstr ""
"有一种更安全且通常更简单的循环：[code]for[/code] 循环。\n"
"\n"
"我们将在本课中研究它。\n"
"\n"
"与 [code]while[/code] 循环不同，[code]for[/code] 循环不会无限运行，因此您在游"
"戏中出现错误的可能性要小得多。 [b]因为这个[/b]，我们建议优先使用 for 循环而不"
"是 while 循环。\n"
"\n"
"让我们将上面的代码改为使用 [code]for[/code] 循环。\n"
"\n"
"下面的循环将更改 [code]cell[/code] 三次。"

#: course/lesson-18-for-loops/lesson.tres:66
msgid "Let's explain what's going on here."
msgstr "让我们解释一下这里发生了什么。"

#: course/lesson-18-for-loops/lesson.tres:74
msgid "The range() function"
msgstr "range()函数"

#: course/lesson-18-for-loops/lesson.tres:76
#, fuzzy
msgid ""
"Godot has the helper function [code]range()[/code]. Calling [code]range(n)[/"
"code] creates a list of numbers from [code]0[/code] to [code]n - 1[/code]. \n"
"\n"
"So calling [code]range(3)[/code] outputs the list of numbers [code][0, 1, 2]"
"[/code], and [code]range(5)[/code] outputs [code][0, 1, 2, 3, 4][/code]."
msgstr ""
"Godot 有辅助函数 [code]range()[/code]。 调用 [code]range(n)[/code] 创建一个"
"从 [code]0[/code] 到 [code]n - 1[/code] 的数字列表。\n"
"\n"
"所以调用[code]range(3)[/code]输出数字列表[code][0,1,2][/code]，[code]range(5)"
"[/code]输出[code][ 0、1、2、3、4][/code]。"

#: course/lesson-18-for-loops/lesson.tres:86
msgid "What list of numbers would range(6) create?"
msgstr "range(6) 会创建什么数字列表？"

#: course/lesson-18-for-loops/lesson.tres:87
msgid "What would [code]print(range(6))[/code] print to the console?"
msgstr "[code]print(range(6))[/code] 会在控制台打印什么？"

#: course/lesson-18-for-loops/lesson.tres:89
msgid ""
"The function [code]range(n)[/code] creates a list of numbers from [code]0[/"
"code] to [code]n - 1[/code]. The output list will start with [code]0[/code] "
"and end with [code]5[/code].\n"
"\n"
"So calling [code]range(6)[/code] will output a list of six numbers which are "
"[code][0, 1, 2, 3, 4, 5][/code].\n"
msgstr ""
"函数 [code]range(n)[/code] 创建一个从 [code]0[/code] 到 [code]n - 1[/code] 的"
"数字列表。 输出列表将以 [code]0[/code] 开始，以 [code]5[/code] 结束。\n"
"\n"
"所以调用 [code]range(6)[/code] 将输出一个包含六个数字的列表，它们是 [code]"
"[0, 1, 2, 3, 4, 5][/code]。\n"

#: course/lesson-18-for-loops/lesson.tres:93
#: course/lesson-18-for-loops/lesson.tres:94
msgid "[0, 1, 2, 3, 4, 5]"
msgstr "[0, 1, 2, 3, 4, 5]"

#: course/lesson-18-for-loops/lesson.tres:93
msgid "[1, 2, 3, 4, 5, 6]"
msgstr "[1, 2, 3, 4, 5, 6]"

#: course/lesson-18-for-loops/lesson.tres:93
msgid "[0, 1, 2, 3, 4, 5, 6]"
msgstr "[0, 1, 2, 3, 4, 5, 6]"

#: course/lesson-18-for-loops/lesson.tres:101
msgid "How for loops work"
msgstr "for 循环如何工作"

#: course/lesson-18-for-loops/lesson.tres:103
msgid ""
"In a [code]for[/code] loop, the computer takes each value inside a list, "
"stores it in a temporary variable, and executes the code in the loop once "
"per value."
msgstr ""
"在 [code]for[/code] 循环中，计算机获取列表中的每个值，将其存储在临时变量中，"
"并对每个值执行一次循环中的代码。"

#: course/lesson-18-for-loops/lesson.tres:123
#, fuzzy
msgid ""
"In the above example, for each item in the list [code][0, 1, 2][/code], "
"Godot sets [code]number[/code] to the item, then executes the code in the "
"[code]for[/code] loop.\n"
"\n"
"We'll explain arrays more thoroughly in the next lesson, but notice that "
"[code]number[/code] is just a temporary variable. You create it when "
"defining the loop, and the loop takes care of changing its value. Also, you "
"can name this variable anything you want.\n"
"\n"
"This code behaves the same as the previous example:"
msgstr ""
"在上面的例子中，对于列表 [code][0, 1, 2][/code] 中的每一项，Godot 将 "
"[code]number[/code] 设置为该项，然后执行 [code]for 中的代码 [/code] 循环。\n"
"\n"
"在这个例子中，我们在 Godot 在循环中移动时打印 [code]number[/code] 的值。\n"
"\n"
"我们可以将任何我们喜欢的代码放入循环的代码块中，包括其他函数调用，如 "
"[code]draw_rectangle()[/code]。"

#: course/lesson-18-for-loops/lesson.tres:147
msgid ""
"In both examples, we print the value of the temporary variable we created: "
"[code]number[/code] in the first example and [code]element[/code] in the "
"second.\n"
"\n"
"As Godot moves through the loop, it assigns each value of the array to that "
"variable. First, it sets the variable to [code]0[/code], then to [code]1[/"
"code], and finally, to [code]2[/code].\n"
"\n"
"We can break down the instructions the loop runs. You can see how a loop is "
"a shortcut to code that otherwise gets very long."
msgstr ""
"在这两个示例中，我们都打印了创建的临时变量的值： 第一个示例中为 "
"[code]number[/code]，第二个示例中为 [code]element[/code]。\n"
"\n"
"Godot 在循环中移动时，会将数组的每个值赋值给该变量。首先，它将变量设置为 "
"[code]0[/code]，然后设置为 [code]1[/code]，最后设置为 [code]2[/code]。\n"
"\n"
"我们可以对循环运行的指令进行细分。你可以看到，循环是代码的捷径，否则代码会变"
"得很长。"

#: course/lesson-18-for-loops/lesson.tres:171
msgid ""
"We can put whatever code we like in the loop's code block, including other "
"function calls like [code]draw_rectangle()[/code]."
msgstr "我们可以在循环代码块中添加任何代码，包括 [code]draw_rectangle()[/code] "
"等其他函数调用。"

#: course/lesson-18-for-loops/lesson.tres:179
msgid "Using a for loop instead of a while loop"
msgstr "使用 for 循环而不是 while 循环"

#: course/lesson-18-for-loops/lesson.tres:181
#, fuzzy
msgid ""
"Here's our old [code]move_to_end()[/code] function which used a [code]while[/"
"code] loop."
msgstr ""
"这是我们在 [code]while[/code] 循环中使用的旧 [code]move_to_end()[/code] 函"
"数。"

#: course/lesson-18-for-loops/lesson.tres:201
msgid ""
"If we use a [code]for[/code] loop instead, the code becomes a little simpler."
msgstr "如果我们改用 [code]for[/code] 循环，代码会变得更简单一些。"

#: course/lesson-18-for-loops/lesson.tres:221
msgid ""
"Rather than constantly checking if the robot reached the end of the board, "
"with the [code]for[/code] loop, we take the board's width beforehand, then "
"move the robot a set amount of times.\n"
"\n"
"The function still works the same. You can execute it below."
msgstr ""
"我们不是不断检查机器人是否到达棋盘末端，而是使用 [code]for[/code] 循环，预先"
"获取棋盘的宽度，然后移动机器人一定次数。\n"
"\n"
"该功能仍然有效。 您可以在下面执行它。"

#: course/lesson-18-for-loops/lesson.tres:243
msgid ""
"In the practices, we'll use [code]for[/code] loops in different ways to get "
"you used to using them."
msgstr ""
"在实践中，我们将以不同的方式使用 [code]for[/code] 循环来让您习惯使用它们。"

#: course/lesson-18-for-loops/lesson.tres:251
msgid "Using a for loop to move to the end of the board"
msgstr "使用 for 循环移动到板的末尾"

#: course/lesson-18-for-loops/lesson.tres:252
msgid ""
"Once again, the robot has decided to stand at the top of the board.\n"
"\n"
"This time, use a [code]for[/code] loop in the [code]move_to_bottom()[/code] "
"function to have it move to the bottom of the board.\n"
"\n"
"The board size is determined by the [code]Vector2[/code] variable "
"[code]board_size[/code].\n"
"\n"
"The robot's starting cell is [code]Vector2(2, 0)[/code]."
msgstr ""
"机器人再次决定站在棋盘的顶部。\n"
"\n"
"这一次，在 [code]move_to_bottom()[/code] 函数中使用 [code]for[/code] 循环让它"
"移动到板的底部。\n"
"\n"
"棋盘大小由 [code]Vector2[/code] 变量 [code]board_size[/code] 决定。\n"
"\n"
"机器人的起始单元是 [code]Vector2(2, 0)[/code]。"

#: course/lesson-18-for-loops/lesson.tres:268
msgid ""
"Use a for loop to have our robot move from the top of the board to the "
"bottom."
msgstr "使用 for 循环让我们的机器人从板的顶部移动到底部。"

#: course/lesson-18-for-loops/lesson.tres:273
msgid "Improving code with a for loop"
msgstr "使用 for 循环改进代码"

#: course/lesson-18-for-loops/lesson.tres:274
msgid ""
"Use a [code]for[/code] loop to remove the duplicate code in the [code]run()[/"
"code] function.\n"
"\n"
"In this practice, we revisit the turtle and drawing rectangles.\n"
"\n"
"With our new knowledge of [code]for[/code] loops, we can condense this code "
"to take up less space and make it easier to modify.\n"
"\n"
"The turtle should draw three squares in a horizontal line. The squares "
"should be 100 pixels apart."
msgstr ""
"使用 [code]for[/code] 循环删除 [code]run()[/code] 函数中的重复代码。\n"
"\n"
"在这个实践中，我们重新审视了海龟和绘制矩形。\n"
"\n"
"借助我们对 [code]for[/code] 循环的新知识，我们可以压缩此代码以占用更少的空间"
"并使其更易于修改。\n"
"\n"
"乌龟应该在一条水平线上画三个正方形。 正方形应相距 100 像素。"

#: course/lesson-18-for-loops/lesson.tres:297
msgid ""
"In the past we had to copy and paste code to draw multiple rectangles. Let's "
"revisit previous code and improve it with a for loop."
msgstr ""
"过去我们必须复制和粘贴代码来绘制多个矩形。 让我们重新审视以前的代码并使用 "
"for 循环对其进行改进。"

#: course/lesson-18-for-loops/lesson.tres:301
msgid "Introduction to For Loops"
msgstr "For循环简介"
